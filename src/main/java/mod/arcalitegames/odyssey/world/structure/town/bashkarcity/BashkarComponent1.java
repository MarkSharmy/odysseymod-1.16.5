package mod.arcalitegames.odyssey.world.structure.town.bashkarcity;

import mod.arcalitegames.buildersaddition.Index;
import mod.arcalitegames.buildersaddition.blocks.Bookshelf;
import mod.arcalitegames.buildersaddition.blocks.Cabinet;
import mod.arcalitegames.buildersaddition.blocks.Counter;
import mod.arcalitegames.buildersaddition.blocks.Cupboard;
import mod.arcalitegames.buildersaddition.blocks.Hedge;
import mod.arcalitegames.buildersaddition.blocks.IronFence;
import mod.arcalitegames.buildersaddition.blocks.Shelf;
import mod.arcalitegames.buildersaddition.blocks.Stool;
import mod.arcalitegames.buildersaddition.blocks.SupportBracket;
import mod.arcalitegames.buildersaddition.blocks.VerticalSlab;
import mod.arcalitegames.buildersaddition.state.HedgeState;
import mod.arcalitegames.buildersaddition.state.MountState;
import mod.arcalitegames.buildersaddition.state.StoolState;
import mod.arcalitegames.buildersaddition.state.VerticalSlabState;
import mod.arcalitegames.odyssey.blocks.ChairBlock;
import mod.arcalitegames.odyssey.blocks.ModBlocks;
import mod.arcalitegames.odyssey.world.structure.StructureBase;
import net.minecraft.block.BarrelBlock;
import net.minecraft.block.BedBlock;
import net.minecraft.block.Blocks;
import net.minecraft.block.BubbleColumnBlock;
import net.minecraft.block.CampfireBlock;
import net.minecraft.block.CauldronBlock;
import net.minecraft.block.ChainBlock;
import net.minecraft.block.ChestBlock;
import net.minecraft.block.ComposterBlock;
import net.minecraft.block.FourWayBlock;
import net.minecraft.block.HorizontalBlock;
import net.minecraft.block.LadderBlock;
import net.minecraft.block.LeavesBlock;
import net.minecraft.block.NetherWartBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.SugarCaneBlock;
import net.minecraft.block.TrapDoorBlock;
import net.minecraft.block.WallBannerBlock;
import net.minecraft.block.WallBlock;
import net.minecraft.block.WallHeight;
import net.minecraft.state.properties.BedPart;
import net.minecraft.state.properties.ChestType;
import net.minecraft.state.properties.DoubleBlockHalf;
import net.minecraft.state.properties.Half;
import net.minecraft.state.properties.SlabType;
import net.minecraft.state.properties.StairsShape;
import net.minecraft.util.Direction;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class BashkarComponent1
{

	public static BlockPos start;
    public static World world;
    public static StructureBase structure;

    public static void init(World worldIn, BlockPos blockPos, StructureBase structureIn)
    {
        world = worldIn; start = blockPos; structure = structureIn;
    }
    
    public static void generatePart11()
    {
        structure.fillWithBlocks(world, start, -38, -12, 59, -35, -12, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -11, -73, -34, -11, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -11, -44, -35, -11, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -11, -38, -38, -8, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -11, 38, -35, -11, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -11, 42, -38, -11, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -10, -69, 91, -10, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -9, -65, -2, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -9, 57, -38, -9, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -8, -61, -33, -8, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -7, -57, -33, -7, -39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -38, -7, 3, -33, -7, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -14, -79, -35, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -14, -69, 87, -14, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -14, 56, -37, -14, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -13, -77, -35, -13, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -13, -65, 77, -13, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -13, 65, -37, -13, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, -76, -34, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, -59, -34, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, -32, -37, -12, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, -31, -37, -12, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, -20, -26, -12, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, -1, -37, -8, -1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, 0, -30, -12, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, 45, -35, -12, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, 48, -37, -8, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -12, 63, -37, -12, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -11, -75, -33, -11, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -11, -38, -36, -11, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -11, -36, -37, -11, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -11, 42, -37, -11, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -11, 43, -37, -11, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -10, -73, 97, -10, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, -69, 3, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, 56, -35, -9, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, -65, -33, -8, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -7, -60, -33, -7, -37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -7, -6, -33, -7, -2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -7, 0, -33, -7, 47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -6, -58, -33, -6, -54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -6, 13, -35, -6, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -14, -80, -34, -14, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -14, -73, 93, -14, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -14, 57, -36, -14, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -13, -78, -35, -13, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -13, -69, 83, -13, 50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -13, 51, -36, -13, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, -77, -33, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, -62, -31, -12, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, -32, -35, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, -30, -35, -12, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, -1, -28, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, 48, -35, -12, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, 50, -36, -8, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -12, 63, -35, -12, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, -76, -32, -11, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, -36, -29, -11, -36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, -35, -35, -11, -6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, -3, -35, -11, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, 23, -30, -11, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, 32, -33, -11, 35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, 36, -35, -10, 36, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, 37, -32, -11, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, 42, -35, -11, 43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, 44, -28, -11, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -11, 57, -30, -11, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -10, -75, 100, -10, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -9, -73, 8, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -9, 59, -36, -9, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, -69, -33, -8, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -7, -65, -33, -7, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -7, -7, -33, -7, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -6, -61, -33, -6, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -6, -42, -36, -6, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -6, -39, -36, -6, -39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -6, -2, -36, -6, -2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -6, 4, -34, -6, 6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -6, 10, -33, -6, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -14, -81, -33, -14, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -14, -76, 39, -14, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -14, 66, -33, -14, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -13, -79, -33, -13, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -13, -72, 88, -13, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -13, 52, -35, -13, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, -78, -31, -12, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, -67, -25, -12, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, -54, -31, -12, -50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, -49, -35, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, 14, -28, -12, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, 30, -35, -11, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, 32, -16, -12, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -12, 52, -35, -12, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -11, -77, -30, -11, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -11, -38, -33, -11, -36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -11, -5, -34, -11, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -11, 54, -29, -11, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -10, -76, 103, -10, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, -75, 11, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, 55, -30, -9, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, -72, -32, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, 57, -35, -8, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -7, -67, -33, -7, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -6, -64, -33, -6, -50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -6, -44, -33, -6, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -6, -26, -33, -6, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -6, -3, -33, -6, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -14, -77, 33, -14, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -14, 59, -34, -14, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -13, -80, -32, -13, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -13, -76, -25, -13, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -13, 53, -34, -8, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -13, 59, -33, -13, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -12, -79, -29, -12, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -12, -72, -24, -12, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -12, -55, -31, -12, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -12, -48, -34, -12, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -12, 30, -34, -6, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -12, 31, -14, -12, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -12, 59, -28, -12, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, -78, -28, -11, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, -44, 101, -9, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, -43, -33, -11, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, -30, -24, -11, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, -19, -34, -11, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, -3, -17, -11, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, 36, -31, -11, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, 42, -34, -11, 43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -10, -77, 106, -10, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -9, -76, 13, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -9, 61, -34, -9, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, -74, -29, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -7, -72, -31, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -7, -68, -33, -7, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -6, -68, -33, -6, 47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -14, -82, -31, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -14, -78, -24, -14, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -14, 60, -33, -10, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -14, 69, -33, -14, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -13, -81, -30, -13, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -13, 53, -29, -13, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -13, 58, -33, -9, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -13, 68, 1, -13, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -12, -80, -27, -12, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -12, -56, -32, -12, -48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -12, -47, -32, -12, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -12, 11, -33, -12, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -12, 13, -25, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -12, 30, -14, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -12, 54, -33, -8, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -11, -79, -26, -11, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -11, -69, -29, -11, -64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -11, -19, -33, -11, -19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -11, -18, -33, -11, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -11, -5, -21, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -11, 43, -24, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -11, 65, 6, -11, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -10, -78, 108, -10, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, -75, -27, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -7, 56, -32, -7, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -6, -69, -33, -6, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -14, -79, -32, -11, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -14, 60, -31, -14, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -14, 62, -32, -11, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -14, 66, -28, -14, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -13, -77, -31, -13, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -13, 61, -31, -13, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -12, -73, -32, -12, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -12, 11, -22, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -12, 24, -32, -10, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -12, 27, -14, -12, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -12, 57, -30, -12, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, -71, -31, -11, -63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, -62, -31, -11, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, -42, -32, -11, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, -31, -19, -11, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, -17, -31, -11, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, -7, -24, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, 32, -31, -11, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, 34, -32, -9, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, 35, -29, -11, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, 42, -22, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -9, -77, 16, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -9, 61, -31, -9, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, -68, -18, -8, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, -45, -26, -8, -39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, -38, -28, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, 56, -28, -8, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -7, -68, -17, -7, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -7, -46, -25, -7, -39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -7, -38, -28, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -7, 58, 109, -7, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -6, -70, -31, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -6, -68, -17, -6, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -6, -46, -25, -6, -39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -6, -38, -28, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -14, -83, -28, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -14, -79, -31, -14, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -14, 64, -30, -14, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -13, 69, 1, -13, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, -81, -25, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, -73, -30, -11, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, -56, -31, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, -48, -30, -12, -47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, -46, -31, -12, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, 10, -22, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, 24, -31, -9, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -12, 25, -14, -12, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -11, -80, -23, -11, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -11, -42, -31, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -11, -41, -31, -11, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -11, 34, -27, -11, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -11, 41, -20, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -11, 66, 109, -11, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -10, -79, 106, -10, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -9, 63, 109, -9, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -7, 56, -29, -7, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -6, -71, -29, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -6, 56, 109, -6, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -14, -79, -26, -10, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -14, 60, -27, -14, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -13, -82, -26, -13, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -13, -77, -27, -10, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -13, 58, -27, -13, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -13, 62, -30, -13, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, -56, -29, -12, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, -54, -30, -12, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, -45, -29, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, -28, -30, -12, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, -26, -28, -12, -24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, -23, -30, -12, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, 9, -22, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, 24, -14, -12, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -12, 68, 5, -12, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -71, -30, -11, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -70, -30, -11, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -43, -28, -11, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -40, -30, -11, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -32, -16, -11, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -17, -30, -11, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -16, -30, -11, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, -8, -25, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, 32, -24, -11, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, 40, -19, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, -78, 19, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, 61, -28, -9, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -8, -76, -23, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -8, 61, -30, -8, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -7, -72, -27, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -7, 59, 108, -7, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -5, 3, -30, -5, 4, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -29, -14, 64, -29, -14, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -14, 71, -28, -14, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -13, 62, 107, -13, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -13, 63, -28, -13, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -12, -73, -24, -12, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -12, -53, -29, -12, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -12, -28, -24, -12, -23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -12, -22, -29, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -12, 8, -24, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -12, 23, -14, -12, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -12, 58, -29, -12, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -71, -28, -11, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -63, -28, -11, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -40, -28, -11, -39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -38, -29, -11, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -33, -14, -11, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -17, -28, -11, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -15, -29, -11, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, -9, -27, -11, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, 28, -29, -10, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, 30, -22, -11, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -11, 67, 43, -11, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -10, 66, 106, -10, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -9, 55, -20, -9, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -8, 61, -28, -8, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -7, -73, -25, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -6, 57, 107, -6, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -14, -84, -24, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -14, 64, -27, -14, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -13, 53, -19, -13, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -12, -53, -28, -12, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -12, -52, -28, -12, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -12, -44, -28, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -12, -22, -28, -12, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -12, -21, -28, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -12, 58, -28, -12, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -12, 67, -26, -12, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, -69, -28, -11, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, -68, -28, -11, -61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, -60, -28, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, -14, -24, -11, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, 28, -28, -9, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, 29, -20, -11, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, 39, -16, -11, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, 54, -25, -11, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -11, 58, -28, -11, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -9, 65, 105, -9, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -7, 56, -25, -7, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -6, -71, -27, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -5, -38, -28, -5, -38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -28, -5, -1, -28, -5, -1, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -27, -14, 66, -27, -14, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -13, -83, -22, -13, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -13, 63, 106, -13, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -13, 64, -26, -13, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, -82, -20, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, -53, -26, -12, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, -51, -27, -12, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, -43, -27, -12, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, -29, -20, -12, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, -21, -21, -9, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, -1, -20, -12, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, 7, -26, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, 22, -13, -12, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, 58, -26, -12, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -12, 60, -25, -12, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, -71, -24, -11, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, -67, -27, -11, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, -59, -27, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, 28, -19, -11, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, 53, -22, -11, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, 59, -27, -11, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -8, -38, -27, -7, -38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -8, -37, -26, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -8, 56, -20, -8, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -7, -37, -25, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -6, -37, -25, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -5, -39, -27, -5, -39, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, -4, -39, -27, -4, -39, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, -2, -26, -27, -2, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, -14, 60, -20, -14, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -14, 67, -24, -14, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -13, -77, -25, -13, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -12, -74, -26, -8, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -12, -51, -26, -12, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -12, -50, -26, -12, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -12, -42, -26, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -12, -30, -20, -12, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, -81, -12, -11, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, -66, -25, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, -58, -26, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, -9, -8, -11, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, 27, -25, -11, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, 59, -16, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, 60, -25, -11, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -10, -80, -5, -10, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, 66, 102, -9, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -8, -77, -18, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -8, -38, -26, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -6, -70, -25, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -5, 2, -26, -5, 3, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -26, -3, -25, -26, -2, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, -2, -26, -26, -2, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, -1, -26, -26, -1, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, -14, -79, -24, -14, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -14, 74, 42, -14, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -13, 64, 107, -13, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -13, 65, -24, -13, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -12, -74, -25, -12, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -12, -49, -24, -12, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -12, -41, -25, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -12, -20, -23, -10, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -12, 7, -1, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -12, 58, -24, -12, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -12, 70, -25, -12, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -11, -58, -25, -11, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -11, -57, -25, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -11, 69, 100, -11, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -9, -79, -6, -9, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -8, -45, -23, -8, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -8, -37, -19, -8, -31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -8, -30, -22, -8, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -8, -26, -25, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -8, 64, 102, -8, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -7, -74, -20, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -7, -38, -24, -7, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -6, -38, -24, -6, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -5, -40, -25, -3, -40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -25, -5, -37, -25, -5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -44, -25, -3, -44, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -25, -4, -37, -25, -1, -37, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -36, -25, -1, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -35, -25, -3, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -25, -4, -33, -25, -3, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -31, -25, -1, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -3, -26, -25, -3, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, -3, -24, -25, -3, -24, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, -2, -44, -25, -2, -40, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, -35, -25, -1, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, -27, -24, -2, -27, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, -2, -25, -24, -2, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, -1, -26, -24, -1, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, -1, -25, -24, -1, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, -13, -76, -23, -13, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -13, -74, 32, -13, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -12, -74, -24, -12, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -12, -53, -21, -12, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -12, -41, -24, -12, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -12, -40, -24, -12, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -12, -31, -20, -12, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -12, 60, -6, -12, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -12, 61, -23, -12, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -11, -66, 3, -9, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -11, -65, -23, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -11, -56, -24, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -11, -8, -24, -11, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -11, 27, -20, -9, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -11, 61, -16, -11, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -10, 68, 100, -10, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -8, -26, -24, -7, -26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -8, -25, -21, -8, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -8, -11, -24, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, -46, -23, -7, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, -36, -20, -7, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, -31, -24, -7, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, -25, -20, -7, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, -17, -21, -7, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, -11, -24, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, 56, -20, -7, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -70, -23, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -46, -23, -6, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -36, -20, -6, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -31, -24, -6, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -26, -24, -2, -26, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -25, -20, -6, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -17, -21, -6, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -6, -11, -24, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -5, -37, -14, -5, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -5, -20, -24, -2, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -24, -5, -12, -24, -2, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -24, -5, -11, -24, -5, -11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, -4, -37, -23, -3, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -4, -31, -24, -1, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, -37, -19, -1, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, -30, -23, -2, -29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, -44, -23, -1, -40, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, -36, -24, -1, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -24, -1, -20, -21, -1, -20, Blocks.BROWN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, -14, -22, -1, -12, Blocks.BROWN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -14, -84, -19, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -14, -78, -17, -9, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -14, 59, -16, -14, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -14, 68, -21, -14, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -13, -77, -21, -13, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -13, 65, -11, -13, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -13, 66, -20, -13, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -12, -74, -21, -12, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -12, -71, -23, -12, -49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -12, -48, -21, -12, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -12, -39, -23, -12, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -12, 8, -1, -12, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -12, 58, -21, -12, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -11, -56, -23, -11, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -11, -55, -23, -11, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -11, -15, -15, -11, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -11, -6, -22, -11, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -11, 60, -14, -11, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -9, 67, 99, -9, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -8, -26, -19, -8, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -8, -11, -23, -7, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -8, -10, -21, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -8, 65, 100, -8, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -7, -30, -18, -7, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -7, -10, -21, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -6, -30, -18, -6, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -6, -10, -21, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -3, -31, -22, -2, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -3, -26, -23, -3, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, -2, 43, -23, -2, 43, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, -1, -36, -23, -1, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -23, -1, -32, -20, -1, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -23, -1, -31, -20, -1, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -16, -21, -1, -12, Blocks.BROWN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, 45, -23, 0, 45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, -1, 46, -23, -1, 46, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 0, -36, -23, 0, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -23, 1, -33, -23, 2, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -22, -14, -79, -21, -14, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -14, 75, 90, -14, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, -71, -22, -12, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, -70, -22, -12, -49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, -39, -20, -10, -39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, -38, -17, -12, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, -32, -21, -12, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, -20, -3, -12, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, 61, -7, -12, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -12, 62, -20, -12, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -11, -65, 3, -9, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -11, -64, -21, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -11, -54, -22, -11, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -11, 38, -11, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -11, 70, -22, -11, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -10, 69, 96, -10, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -8, -45, -22, -8, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -8, -39, -21, -8, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -8, -11, -21, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, -46, -22, -7, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, -44, -22, -6, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, -42, -22, -7, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, -41, -22, -7, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, -31, -18, -7, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, -11, -21, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, 61, 100, -7, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -6, -70, -21, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -6, -46, -22, -6, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -6, -42, -22, -6, -42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -6, -41, -22, -6, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -6, -31, -18, -6, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -6, -11, -21, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -5, -44, -22, -5, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -5, -41, -22, -5, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -5, -31, -19, -5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -44, -22, -1, -44, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -43, -22, -1, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -41, -22, -1, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -40, -22, -1, -40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -37, -21, -3, -37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -22, -4, -31, -22, -1, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -3, -42, -22, -2, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, -30, -21, -2, -29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, 41, -21, -2, 41, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, -2, 42, -21, -2, 42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, -2, 44, -22, -1, 44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, -1, -42, -22, -1, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, -36, -22, -1, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -22, -1, -33, -20, -1, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -22, -1, -22, -21, -1, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -22, -1, -19, -21, -1, -12, Blocks.BROWN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 42, -21, -1, 42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, -1, 43, -22, -1, 45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, -1, 46, -22, 0, 46, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, -1, 47, -22, 0, 47, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -22, 0, -37, -21, 0, -37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -22, 0, -33, -20, 0, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -22, 0, 45, -22, 0, 45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 1, 45, -22, 1, 45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, -13, -83, -14, -13, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -13, 74, 89, -13, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -12, -71, -20, -12, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -12, -69, -21, -12, -49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -12, 9, -20, -12, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -12, 11, -21, -9, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, -54, -20, -11, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, -53, -12, -11, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, -42, -14, -11, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, -17, -20, -11, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, -6, -21, -11, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, 53, -16, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, 70, -20, -11, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -8, -45, -18, -6, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -8, -44, -18, -8, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -8, -40, -19, -8, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -8, -30, -19, -8, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -7, -46, -19, -7, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -7, -43, -19, -7, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -7, -40, -19, -7, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -6, -71, -19, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -6, -46, -19, -6, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -6, -43, -19, -6, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -6, -40, -18, -6, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -6, 58, 106, -6, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -5, -44, -18, -5, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -5, -40, -19, -5, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -5, -29, -21, -3, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -21, -5, -14, -21, -5, -12, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -21, -5, 44, -21, -1, 44, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, -44, -21, -1, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, -40, -21, -1, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, -31, -21, -3, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -21, -4, -13, -21, -4, -12, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -21, -4, 8, -21, -4, 8, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, -4, 9, -21, -4, 9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, -2, -31, -20, -1, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, -43, -19, -1, -41, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, -1, -36, -21, -1, -36, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -21, -1, -34, -20, -1, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -21, -1, -23, -19, -1, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -21, -1, 43, -21, -1, 43, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -21, -1, 46, -21, 0, 46, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -21, -1, 47, -21, 0, 47, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 0, 43, -21, 0, 43, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 0, 44, -21, 0, 44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -21, 1, 44, -21, 1, 44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, -14, -79, -19, -14, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -14, 68, -18, -14, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -14, 69, -14, -14, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -13, -75, -19, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, -83, -18, -12, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, -68, -20, -12, -48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, -47, -19, -12, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, -32, -20, -12, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, -21, -3, -12, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, 13, -20, -9, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, 21, -9, -12, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -12, 58, -17, -12, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -11, -64, -20, -11, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -11, -63, -20, -11, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -11, -6, -19, -11, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -11, -4, -19, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 68, 95, -9, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -39, -19, -8, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -21, -20, -8, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -17, -18, -8, -15, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -14, -20, -8, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -9, -18, -8, -7, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -6, -20, -8, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -4, -18, -8, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, 18, -20, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -7, -17, -18, -7, -15, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -7, -14, -20, -5, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -7, -9, -18, -7, -7, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -7, -6, -20, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -6, -17, -18, -6, -15, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -6, -9, -18, -6, -7, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -6, -6, -20, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -5, -36, -20, -5, -35, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.WEST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -20, -5, -21, -20, -5, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -5, -6, -20, -5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -5, -4, -19, -5, -4, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -20, -5, -2, -20, -3, -2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -20, -5, 20, -20, -5, 22, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -20, -4, -44, -20, -3, -44, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -20, -4, -40, -20, -3, -40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -20, -4, -37, -20, -4, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, -34, -20, -3, -34, Index.IRON_FENCE_ROUGH.getDefaultState().with(IronFence.NORTH, false).with(IronFence.SOUTH, false).with(IronFence.EAST, true).with(IronFence.WEST, false).with(IronFence.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -20, -4, -31, -20, -1, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, -21, -20, -2, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, -14, -20, -2, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, -6, -20, -1, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, -5, -20, -1, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, 7, -20, -3, 7, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, -4, 8, -20, -2, 8, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -20, -4, 9, -20, -3, 9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, -3, -37, -20, -3, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, -36, -20, -3, -35, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -20, -3, -33, -20, -3, -32, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -20, -2, -44, -19, -1, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -2, -40, -19, -1, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -2, -36, -19, -2, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -2, -4, -18, -2, -2, Blocks.BROWN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -2, 43, -20, -2, 44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -20, -1, -45, -20, 0, -45, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -20, -1, -36, -20, -1, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -20, -1, -19, -20, -1, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, -12, -20, -1, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, -10, -20, -1, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 43, -20, -1, 43, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, -1, 44, -20, -1, 45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -20, -1, 46, -20, 0, 46, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, 0, -7, -20, 2, -7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -20, 0, -6, -20, 2, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -20, 0, 8, -20, 0, 8, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -20, 3, -7, -20, 3, -5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -19, -14, 76, 86, -14, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -13, 66, -13, -13, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -13, 67, -12, -13, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, -68, -19, -12, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, -67, -19, -12, -48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, -39, -11, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, -30, -19, -9, -24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, -23, -3, -12, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, 16, -19, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, 18, -6, -12, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, 62, -8, -12, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -12, 63, -16, -12, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, -64, -18, -11, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, -62, -18, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, -54, -9, -11, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, -17, -17, -9, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, -16, -11, -11, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, 27, -16, -11, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, 37, -7, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -11, 70, -18, -11, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -10, 70, 93, -10, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, 55, -6, -9, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, -21, -18, -8, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, -20, -13, -8, -13, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, -12, -14, -8, -6, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, -5, -17, -8, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, 18, -13, -8, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, 25, -14, -8, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, 31, -18, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, 56, -9, -8, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, -74, -14, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, -36, -19, -5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, -20, -13, -7, -13, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, -12, -14, -7, -6, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, -5, -17, -7, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, -2, -18, -7, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, 19, -19, -5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, 25, -14, -7, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, 31, -17, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -7, 56, -13, -7, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -6, -20, -13, -6, -6, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -6, -5, -17, -6, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -6, -2, -18, -6, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -6, 25, -14, -6, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -6, 31, -17, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -6, 59, 99, -6, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -5, -39, -19, -5, -38, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -19, -5, -21, -18, -5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -5, -13, -18, -5, -12, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -19, -5, -5, -17, -5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -5, 8, -19, 0, 8, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -5, 16, -19, -5, 16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -19, -5, 18, -19, -5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, -44, -18, -3, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, -40, -19, -1, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, -37, -19, -1, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, -31, -19, -1, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, -21, -18, -3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, -5, -17, -2, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, 6, -19, -4, 6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -19, -4, 7, -19, -2, 7, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -19, -4, 9, -19, -2, 9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -19, -4, 18, -19, -1, 18, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, 19, -19, -3, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, 21, -19, -3, 21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -19, -4, 22, -19, -3, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, 24, -19, -1, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -21, -18, -2, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -1, -18, -2, 0, Blocks.BROWN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 19, -19, -1, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, -45, -19, 0, -45, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -19, -1, -20, -16, -1, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, -19, -15, -1, -15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, -1, -14, -17, -1, -12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, -1, -11, -8, -1, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, -10, -16, -1, -6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, -1, -5, -17, -1, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 44, -19, -1, 45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -19, 0, -35, -19, 0, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -19, 0, -20, -16, 0, -20, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 0, -5, -19, 2, -5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -19, 0, 7, -19, 0, 7, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -19, 3, -7, -19, 3, -7, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -19, 3, -5, -18, 3, -5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -18, -14, -84, -14, -14, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -13, -75, 26, -13, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -13, 75, 86, -13, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -12, -68, -17, -12, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -12, -66, -17, -12, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -12, -46, -18, -9, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -12, -42, -2, -12, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -12, 16, -3, -12, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -11, -4, 3, -11, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -11, 26, -18, -9, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -11, 32, -17, -11, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -11, 35, -4, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -11, 52, -14, -11, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -11, 72, 90, -11, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, -40, -18, -6, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, -39, -11, -8, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, -31, -16, -8, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, -27, -18, -8, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, -75, -12, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, -46, -18, -6, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, -43, -16, -7, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, -39, -17, -7, -38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, -37, -18, -7, -33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, -32, -16, -7, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, 19, -14, -7, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -7, 24, -18, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -6, -71, -17, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -6, -43, -16, -6, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -6, -36, -14, -6, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -6, 19, -14, -6, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -6, 24, -18, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -5, -40, -18, -1, -40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -5, -39, -18, -5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -5, -31, -16, -5, -31, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, -5, -27, -18, -5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -5, 16, -18, -5, 16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -18, -5, 18, 82, -5, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -5, 26, -18, -3, 26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -18, -5, 35, -18, -5, 36, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -18, -4, -39, -18, -3, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, -37, -18, -4, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, -32, -16, -4, -32, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, -4, -27, -18, -1, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, -26, -18, -3, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, -24, -18, -3, -23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -18, -4, -22, -18, -3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, 6, -18, -4, 6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -18, -4, 7, -18, -3, 7, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -18, -4, 8, -18, -2, 8, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -18, -4, 9, -18, -3, 9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -18, -4, 16, -18, -4, 16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -18, -4, 18, -17, -3, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, 24, -18, -1, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, -37, -18, -3, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, -33, -16, -3, -33, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, -2, -39, -18, -2, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -37, -18, -2, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -34, -16, -2, -34, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, -2, -26, -18, -1, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, 18, -14, -1, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, 25, -17, -2, 26, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, -43, -16, -1, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, -39, -18, -1, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, -29, -17, -1, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 19, -14, -1, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -18, 0, -38, -18, 0, -36, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -18, 0, -21, -18, 0, -20, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -18, 0, -5, -18, 2, -5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -18, 3, -42, -18, 5, -42, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -18, 3, -41, -18, 5, -41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -18, 3, -7, -18, 3, -5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -17, -14, 68, -13, -14, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -12, -82, -11, -12, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -12, -75, -13, -12, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -12, -46, -5, -12, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -12, 74, 86, -12, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -11, -64, -15, -11, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -11, -61, -17, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -11, -56, -5, -11, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -11, 26, -14, -11, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -11, 34, -2, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -11, 70, -15, -11, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -77, -9, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -68, -8, -8, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -58, -16, -8, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -53, 2, -8, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -27, -8, -8, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -26, -13, -8, -13, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -4, -17, -8, -3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -2, -17, -8, -2, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, -1, -17, -8, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 2, -14, -8, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 6, -16, -8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 16, -17, -7, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 17, -1, -6, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 31, -10, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 39, -12, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, -46, -9, -7, -38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, -37, -14, -5, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, -36, -15, -7, -33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, -26, -13, -7, -13, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, -2, -17, -7, -2, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, -1, -17, -5, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, 2, -14, -7, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, 7, -15, -7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, 18, -13, -5, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -6, -46, -9, -6, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -6, -26, -13, -6, -6, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -6, -2, -17, -6, -2, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -6, 2, -14, -6, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -6, 7, -15, -6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -5, -53, -17, -5, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -5, -44, -17, -2, -44, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -5, -36, -14, -5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -5, -27, -9, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -5, -4, -17, -5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -5, 15, -17, -5, 15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -17, -5, 31, -17, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -53, -17, -1, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -52, -17, -3, -51, Blocks.SMOOTH_SANDSTONE.getDefaultState());

    }
    
    public static void generatePart12()
    {
        structure.fillWithBlocks(world, start, -17, -4, -50, -17, -3, -49, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -17, -4, -48, -17, -1, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -47, -17, -1, -47, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -46, -17, -3, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -37, -14, -2, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -36, -15, -4, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -27, -10, -2, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -4, -17, -3, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -1, -17, -3, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 1, -17, -1, 1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 31, -17, -1, 31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 32, -17, -1, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 33, -17, -3, 33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -17, -4, 34, -17, -3, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 36, -17, -3, 36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -17, -4, 37, -17, -1, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 38, -17, -1, 38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, -36, -15, -3, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, -2, -17, -1, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, 24, -16, -2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -52, -17, -1, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -46, -17, -2, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -36, -16, -2, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -4, -17, -2, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 19, -15, -2, 19, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -17, -2, 27, -16, -2, 28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 33, -17, -1, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -46, -17, 0, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -40, -14, -1, -37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -36, -16, -1, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -35, -16, -1, -35, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, -1, -30, -16, -1, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -27, -16, -1, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -26, -17, -1, -21, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -17, -1, -3, -17, -1, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 24, -14, -1, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 29, -16, -1, 30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -51, -17, 0, -49, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -17, 0, -43, -17, 0, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -39, -16, 0, -39, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -17, 0, 37, -17, 0, 37, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -17, 1, -46, -17, 4, -46, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -45, -17, 4, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -40, -17, 4, -40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -14, -78, 28, -14, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -12, -66, -16, -12, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -12, -65, -16, -12, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -11, -61, 1, -11, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -11, -17, -12, -11, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -11, -3, -16, -11, 5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -11, 6, -11, -11, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -11, 12, -16, -9, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -11, 23, -12, -11, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -11, 32, 0, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -10, 71, 91, -10, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, 69, 93, -9, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, -78, -10, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, -5, -14, -8, 0, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, 1, 92, -8, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, 16, -15, -8, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, -68, -7, -7, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, -58, -16, -7, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, -52, -12, -7, -48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, -47, -11, -5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, -5, -14, -7, 0, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, 1, -12, -7, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, 16, -14, -7, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, 24, -13, -7, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, 31, -16, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, 32, -11, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -7, 38, -11, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, -70, -15, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, -68, -7, -6, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, -58, -16, -6, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, -52, -12, -6, -48, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, -5, -13, -6, 0, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, 1, -12, -6, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, 16, -14, -6, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, 24, -10, -6, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, 32, -11, -6, 37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -6, 38, -11, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -5, -58, -16, -5, -58, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -16, -5, -53, -14, -5, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -5, -46, -15, -5, -46, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.SOUTH).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -5, 1, 92, -5, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -5, 24, 52, -5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -5, 37, -15, -5, 37, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.NORTH).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -5, 38, -8, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, -58, -16, -4, -58, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -16, -4, -53, -14, -2, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, -47, -12, -1, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 1, -16, -1, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 18, -16, -3, 18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -16, -4, 24, -16, -1, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 31, -16, -1, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 38, -8, -2, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -46, -10, -2, -46, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 37, -11, -2, 37, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -1, -53, -12, -1, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -52, -13, -1, -48, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -1, -46, -10, 0, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -45, -11, -1, -37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -25, -14, -1, -23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -1, -21, -16, -1, -21, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -1, -13, -14, -1, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -5, -15, -1, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -3, -13, -1, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -1, 25, -15, -1, 26, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, 32, -14, -1, 37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -1, 38, -14, -1, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -47, -12, 0, -47, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -16, 0, -40, -14, 0, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -26, -16, 2, -26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -16, 0, -22, -16, 2, -22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -16, 0, 18, -16, 2, 18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -16, 0, 24, -16, 2, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -16, 1, -46, -15, 2, -46, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -40, -16, 4, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -45, -16, 2, -44, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, 2, -42, -16, 2, -41, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, 3, -46, -12, 4, -46, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 3, -45, -16, 3, -41, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -16, 3, -26, -12, 3, -22, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -16, 3, 18, -16, 3, 24, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -16, 4, -45, -16, 4, -41, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, -14, 67, -15, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -12, -66, -14, -12, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -12, -64, -14, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -12, 64, -11, -12, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, -3, -13, -11, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, -2, -10, -11, 3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, 4, -15, -9, 4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, 5, -9, -11, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, 31, 0, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, 50, -14, -10, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, 51, -11, -11, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -11, 59, -1, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, -58, -15, -7, -58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, -57, -12, -8, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, -31, -11, -8, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, 6, -9, -8, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, 13, -11, -8, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -7, -57, -12, -7, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -7, -53, -14, -6, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -7, -32, -11, -7, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -7, 31, -15, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -7, 63, 97, -7, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -6, -57, -12, -6, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -6, 31, -15, -6, 37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -6, 60, 27, -6, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -5, -59, -15, -5, -59, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -15, -5, -50, -15, -5, -50, ModBlocks.CHAIR.get().getDefaultState().with(ChairBlock.FACING, Direction.NORTH));
        structure.fillWithBlocks(world, start, -15, -5, -31, -11, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -5, 0, -14, -5, 0, Blocks.COMPOSTER.getDefaultState().with(ComposterBlock.LEVEL, 0));
        structure.fillWithBlocks(world, start, -15, -5, 6, -15, -5, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -5, 34, -13, -5, 34, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -15, -4, -59, -15, -4, -59, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -15, -4, -32, -11, -4, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 1, -13, -3, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -15, -4, 6, -15, -1, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 7, -15, -3, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 9, -15, -3, 10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -15, -4, 11, -15, -1, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 12, -15, -1, 12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 18, -7, -2, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 24, -15, -3, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -15, -3, -46, -12, -3, -46, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, -3, -33, -14, -3, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -3, 31, -11, -2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -3, 37, -12, -3, 37, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.NORTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, -2, -36, -15, -1, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, 1, -12, -1, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, 7, -15, -1, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, 24, -14, -1, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, 27, -14, -2, 28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -55, -14, -1, -54, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -15, -1, -27, -11, 0, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -26, -6, -1, -26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -22, -13, -1, -15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, -1, -14, -10, -1, -9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -8, -15, -1, -6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, -1, 29, -14, -1, 30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, 31, -14, -1, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, -53, -13, 0, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -15, 0, -36, -15, 0, -35, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -15, 0, -34, -15, 0, -33, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -15, 0, -32, -15, 0, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, -10, -15, 0, -9, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -15, 1, -40, -15, 2, -40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -15, 1, -32, -15, 4, -32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, -31, -15, 4, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, -30, -15, 2, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -15, 1, -28, -15, 4, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, -27, -15, 4, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, -40, -12, 4, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, -35, -14, 3, -34, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, -30, -15, 4, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 18, -14, 3, 18, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -15, 3, 19, -14, 3, 24, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -15, 4, -45, -12, 4, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 4, -44, -15, 4, -44, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -15, 4, -42, -14, 4, -41, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 4, -39, -14, 4, -38, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -15, 4, -33, -11, 4, -33, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -14, 67, 103, -14, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -14, 77, 64, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -13, 76, 63, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -11, -64, 3, -11, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -11, 4, -11, -11, 26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -11, 30, 0, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -11, 58, 1, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, -58, -11, -8, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, 67, 93, -8, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, -58, -11, -7, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, -36, -14, -5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, -35, -14, -7, -35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, -34, -14, -5, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, -33, -14, -7, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, 7, -10, -7, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, 12, -9, -7, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -7, 31, -13, -6, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -6, -70, -13, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -6, -58, -10, -6, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -6, 7, -10, -6, 11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -6, 12, -8, -6, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -5, 12, 79, -5, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -5, 25, -14, -3, 25, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, -5, 31, 10, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -5, 44, -14, -3, 44, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, -4, -36, -14, -2, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, -33, -14, -4, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, 6, -14, -1, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, 12, -14, -1, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, 24, -7, -2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, 31, -11, -2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -55, -11, -2, -55, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -14, -2, -54, -11, -2, -54, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -14, -2, -33, -14, -2, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, 25, -14, -2, 26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, -2, 39, -12, -2, 44, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -36, -14, -1, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -34, -13, -1, -33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -32, -7, 0, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -31, -11, -1, -28, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -8, -14, -1, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -7, -14, -1, -6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, -1, -5, -14, -1, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 7, -13, -1, 11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, -1, 25, -14, -1, 26, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, -13, -14, 1, -13, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -14, 0, 0, -12, 0, 0, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -14, 0, 1, -12, 0, 1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -14, 0, 18, -14, 2, 18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, 0, 24, -14, 2, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, 1, -46, -14, 2, -46, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -14, 1, -40, -14, 4, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, -32, -6, 3, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, -27, -12, 3, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, -39, -11, 3, -39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -14, 3, -38, -13, 3, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -14, 4, -44, -14, 4, -43, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -14, 4, -32, -12, 4, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 4, -31, -12, 4, -28, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, 4, -27, -12, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -14, -84, -9, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -14, -79, -6, -14, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -13, -83, -9, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -13, -78, -10, -13, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -12, -66, -11, -12, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -12, -63, -13, -12, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -12, -53, -9, -12, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -12, -48, -12, -12, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -12, 37, -10, -12, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -12, 41, -13, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -12, 75, 20, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, -42, -13, -7, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, -41, -12, -11, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, -39, -13, -11, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, -27, -10, -11, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, -22, -13, -11, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, 29, 0, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, 50, -10, -11, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, 56, -12, -11, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -11, 57, 3, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -10, 72, 87, -10, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -9, 70, 90, -9, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, -12, -12, -8, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, -10, -13, -7, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, -4, -13, -6, 0, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 2, -11, -8, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 25, -11, -8, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 28, -13, -6, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, -53, -13, -7, -48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, -37, -10, -7, -34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, -33, -13, -5, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, -12, -13, -7, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, 6, -13, -7, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, 19, -13, -5, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, 20, -11, -7, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -7, 23, -13, -6, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -6, -71, -12, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -6, -53, -13, -6, -48, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -6, -37, -10, -6, -34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -6, -32, -9, -6, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -6, 6, -13, -6, 11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -6, 20, -11, -6, 22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -5, -32, -9, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -5, 23, -13, -5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -4, -33, -7, -2, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -4, 12, -11, -3, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -13, -4, 19, -13, -2, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -4, 23, -13, -4, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -4, 27, -13, -3, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -13, -3, -53, -12, -2, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, -32, -9, -3, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, 6, -10, -1, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, 23, -13, -3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, -32, -9, -2, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, 12, -10, -1, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, 23, -13, -2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, 27, -13, -2, 28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, -55, -12, -1, -54, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -13, -1, -36, -11, -1, -34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, -25, -13, -1, -15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -13, -1, -8, -10, -1, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, -4, -12, -1, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -13, -1, 19, -9, -1, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 29, -13, -1, 30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 32, -9, -1, 36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 37, -12, -1, 37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 38, -11, -1, 38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -44, -13, 0, -42, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -13, 0, -14, -13, 1, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -13, 0, -13, -13, 1, -13, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -12, -13, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -46, -5, 3, -46, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -12, -13, 4, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -11, -13, 2, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -9, -13, 2, -9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -13, 1, -8, -13, 3, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -5, -13, 4, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -40, -11, 3, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -35, -12, 3, -34, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -11, -13, 4, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 4, -44, -12, 4, -41, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -13, 4, -39, -12, 4, -38, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -13, 5, -10, -13, 5, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -12, -14, 68, 100, -14, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -14, 69, -10, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -13, 66, -2, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, -75, -11, -12, -74, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, -73, -12, -12, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, -62, -12, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, -55, -6, -12, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, 35, -6, -12, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, 42, -1, -12, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, 55, -7, -12, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -12, 63, -9, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -11, -42, -10, -11, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -11, -38, -3, -11, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -11, -28, -10, -11, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -11, -22, -11, -11, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -11, -21, -9, -11, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -11, -3, -11, -11, 3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -11, 28, 0, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -26, -12, -6, -24, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -23, -12, -8, -23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -22, -12, -6, -20, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -19, -12, -8, -19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -18, -12, -6, -16, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -15, -12, -8, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -14, -12, -7, -13, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -10, -12, -6, -8, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -7, -12, -8, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -6, -12, -6, -6, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -5, -12, -8, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -4, -12, -6, -4, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -3, -12, -8, -3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -2, -12, -6, 0, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, 18, -6, -8, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, 28, -2, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, 68, 91, -8, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -53, -11, -6, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -33, -8, -7, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -23, -12, -5, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -19, -11, -6, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -15, -12, -5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -12, -10, -7, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -11, -9, -5, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -7, -9, -5, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -5, -12, -7, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, -3, -10, -5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, 6, -9, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, 18, -7, -7, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, 25, -10, -7, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, 28, -9, -7, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -7, 56, -5, -7, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -6, -33, -8, -6, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -6, -14, -12, -6, -12, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -6, -5, -12, -6, -4, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -6, 19, -8, -6, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -6, 31, 10, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -5, -53, -11, -5, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -5, -46, -11, -5, -46, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.SOUTH).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, -5, -33, -8, -5, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -5, -19, -9, -5, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -5, 28, -9, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -5, 37, -11, -5, 37, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.NORTH).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, -4, -53, -12, -1, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -4, 1, -11, -3, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -4, 6, -3, -2, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -4, 28, -10, -4, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, 28, -10, -3, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -2, 28, -10, -2, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, -52, -12, -1, -49, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, -1, -33, -11, -1, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, -25, -9, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, -21, -10, -1, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 7, -10, -1, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, -1, 8, -11, -1, 9, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -12, -1, 10, -11, -1, 11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, -1, 18, 47, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 24, -4, -1, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 28, -9, -1, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -40, -10, 0, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -39, -11, 1, -39, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -12, 0, -26, -12, 2, -26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -12, 0, -22, -12, 2, -22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -12, 0, -21, -12, 0, -20, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 0, -13, -12, 1, -13, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -12, 0, -12, -11, 0, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -5, -7, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 19, -12, 0, 22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 24, -12, 2, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -12, 0, 29, -12, 0, 30, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -12, 1, -48, -12, 2, -48, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -12, 1, -40, -11, 2, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, -12, -12, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, -5, -8, 4, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 18, -12, 4, 18, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 19, -12, 4, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 20, -12, 2, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -12, 1, 21, -12, 4, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 22, -12, 4, 22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, -38, -11, 3, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -12, 3, 20, -12, 4, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, 23, -11, 3, 24, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 4, -37, -11, 4, -37, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -12, 4, -11, -8, 4, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 4, -10, -10, 4, -6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 5, -32, -12, 5, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -12, 5, -11, -8, 5, -11, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -12, 5, -5, -8, 5, -5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -11, -12, -73, 25, -12, -73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -12, -72, -10, -12, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -12, -61, -10, -12, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -12, -56, -3, -12, -48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -12, -47, -7, -12, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -12, 33, -10, -12, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -12, 34, -5, -12, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -11, -81, -6, -11, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -11, -43, -11, -11, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -11, -17, -11, -11, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -11, 27, 0, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -11, 56, 6, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, -26, -10, -8, -25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, -24, -11, -8, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, 39, -5, -8, 45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, 46, -3, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -75, -11, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -52, -7, -7, -48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -26, -10, -7, -25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -24, -11, -7, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -18, -10, -7, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -16, -11, -7, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -10, -10, -7, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -6, -11, -7, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, -2, -10, -7, -1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, 0, -11, -7, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -7, 1, -11, -6, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -70, -10, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -52, -8, -6, -48, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -26, -11, -6, -24, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -23, -11, -6, -23, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -22, -11, -6, -20, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -18, -11, -6, -16, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -15, -11, -6, -15, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -14, -11, -6, -12, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -10, -11, -6, -8, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -6, -11, -6, -4, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -6, -2, -11, -6, 0, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -5, -62, -10, -5, -62, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -11, -5, -23, -9, -5, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -5, -15, -9, -5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -5, 3, -11, -5, 5, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -11, -5, 39, -11, -5, 45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -4, -53, -11, -1, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -4, -47, -11, -4, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -4, -23, -10, -4, -23, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -11, -4, -19, -10, -4, -19, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -11, -4, -15, -10, -4, -15, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -11, -4, -11, -10, -4, -11, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -11, -4, -7, -10, -4, -7, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -11, -4, -3, -10, -4, -3, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -11, -4, 17, -11, 2, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, -4, 39, -11, -3, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -4, 41, -11, -3, 42, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, -4, 43, -11, -3, 44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -4, 45, -11, -1, 45, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, -47, -11, -3, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, -47, -10, -2, -46, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, 39, -11, -2, 44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -52, -11, -1, -48, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -4, -11, -1, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -3, -11, -1, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -11, -1, 37, -10, 0, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, 40, -11, -1, 44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -51, -11, 0, -49, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 0, -33, -11, 1, -33, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -11, 0, -26, -11, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -20, -11, 0, -19, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -11, 0, -18, -11, 0, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 31, -11, 0, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 41, -11, 0, 42, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 1, -27, -11, 4, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -26, -11, 4, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -25, -11, 2, -23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 1, -22, -11, 4, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -21, -11, 4, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -18, -11, 4, -18, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -17, -11, 2, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -15, -11, 2, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 1, -13, -11, 4, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -12, -11, 3, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 18, -11, 4, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 22, -11, 4, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 31, -11, 4, 31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 32, -11, 2, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 34, -11, 2, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 1, 36, -11, 4, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 37, -11, 4, 37, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, -6, -9, 2, -6, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.NORTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -11, 3, -35, -11, 3, -34, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -25, -11, 4, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -17, -11, 4, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -6, -9, 3, -6, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.DOUBLE_Z).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -11, 3, 17, -11, 5, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 3, 32, -11, 4, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 4, -45, -11, 4, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 4, -40, -10, 4, -40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 4, -39, -11, 4, -37, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -11, 4, -31, -8, 4, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 4, -20, -11, 4, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 4, 19, -9, 4, 21, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -11, 5, -55, -11, 6, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -11, 5, -54, -11, 6, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -11, 5, -30, -11, 5, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 5, -20, -10, 5, -19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -11, 7, -42, -11, 10, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -11, 9, -43, -11, 9, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -10, -13, 65, -7, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -12, -82, -7, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -12, -74, -9, -12, -73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -12, -57, -1, -12, -48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -12, 65, 0, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -11, -43, 47, -7, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -11, -22, -4, -11, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -11, -15, -9, -11, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -11, 4, 34, -8, 4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -11, 55, 6, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, 71, 18, -9, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -58, -8, -8, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -55, 2, -8, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -28, -8, -8, -25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -24, -10, -6, -24, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -23, -10, -8, -23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -22, -10, -6, -22, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -21, -8, -8, -19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -18, -9, -8, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -16, -10, -6, -16, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -15, -10, -8, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -14, -10, -6, -14, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -13, -8, -8, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -8, -10, -6, -8, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -7, -10, -8, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -6, -10, -6, -6, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -5, -6, -8, -1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, 0, -10, -6, 0, Blocks.COARSE_DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, 2, 0, -8, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, 13, -6, -8, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, 25, -10, -6, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -74, -5, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -58, -8, -7, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -55, 1, -7, -38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -27, -10, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -23, -10, -7, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -21, -9, -7, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -15, -10, -7, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -13, -10, -7, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -5, -9, -7, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 1, -9, -7, 2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 3, -10, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 32, -10, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 33, -8, -7, 35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 36, -10, -5, 36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 37, 23, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 38, -8, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 39, -5, -7, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 45, -3, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, 64, 15, -7, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, -53, -7, -6, -50, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, -47, -7, -5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, -23, -10, -6, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, -15, -10, -6, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, 2, -6, -6, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, 33, -8, -6, 35, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, 37, -5, -6, 37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, 39, -5, -6, 44, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, 45, -3, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -5, -55, -10, -5, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -5, -46, -10, -5, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -5, -40, -10, -5, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -5, 2, -6, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -5, 25, -10, -5, 27, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, -5, 37, -10, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -5, 45, -4, -5, 45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, -55, -10, 0, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, -54, -10, -3, -54, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, -47, -10, -2, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, -40, -10, -4, -37, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, -32, -8, -4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, -28, -10, -4, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 2, -10, -4, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 3, -10, -4, 5, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, -4, 12, -3, -2, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 31, -10, -3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 36, -10, -2, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 45, -8, -2, 45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, -40, -10, -2, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, 1, -9, -3, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, 23, -9, -3, 23, Index.SHELF_OAK.getDefaultState().with(Shelf.FACING, Direction.NORTH));
        structure.fillWithBlocks(world, start, -10, -2, -54, -10, 0, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 1, -9, -2, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 31, -10, 0, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -48, -8, -1, -48, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -47, -10, 0, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -45, -6, -1, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -40, -10, 0, -39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -38, -8, -1, -34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -33, -9, -1, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -31, -6, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -4, -10, -1, 0, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 1, -9, -1, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 8, -10, -1, 11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, -1, 38, -9, -1, 39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 40, -8, -1, 44, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, -1, 45, -5, -1, 45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -48, -8, 0, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -37, -10, 0, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -21, -10, 0, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -3, -10, 0, 1, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -10, 0, 28, -10, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -10, 0, 38, -10, 5, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -10, 1, -55, -10, 4, -55, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -54, -10, 4, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -53, -10, 2, -52, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -10, 1, -51, -10, 2, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -49, -10, 4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -48, -9, 1, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -40, -10, 4, -40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -39, -10, 3, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -37, -10, 3, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -36, -10, 2, -36, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -35, -8, 1, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -21, -10, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -18, -9, 2, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 18, -10, 2, 18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -10, 1, 31, -10, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 37, -9, 2, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -48, -9, 2, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -38, -10, 3, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -35, -8, 2, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 22, -9, 3, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, -53, -10, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, -48, -9, 3, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, -36, -10, 3, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, -18, -6, 4, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, 17, -10, 5, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -10, 3, 18, -2, 4, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, 23, -9, 3, 24, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, 28, -8, 3, 30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -10, 3, 37, -6, 4, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -48, -8, 4, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -45, -6, 4, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -39, -10, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -27, -6, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -20, -9, 4, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -10, 4, -17, -8, 4, -14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, 4, -12, -9, 4, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, 22, -9, 4, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, 32, -10, 4, 33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, 4, 34, -8, 4, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, 5, -54, -10, 6, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -10, 5, -53, -10, 6, -53, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -10, 5, -47, -10, 5, -46, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -10, 5, -45, -9, 5, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 5, -42, -10, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 5, -31, -10, 5, -29, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -10, 6, -45, -10, 9, -45, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 6, -44, -9, 6, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 6, -42, -10, 9, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 6, -34, -10, 7, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -10, 6, -33, -10, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 6, -32, -10, 9, -32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 6, -28, -10, 7, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -10, 7, -54, -10, 7, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -10, 7, -44, -9, 7, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 8, -47, -9, 8, -46, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 8, -44, -9, 8, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 8, -34, -10, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 8, -29, -9, 8, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 9, -44, -10, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 9, -31, -9, 9, -30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 10, -43, -10, 10, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -10, 10, -35, -10, 10, -33, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -10, 12, -34, -10, 13, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -9, -14, 69, 96, -14, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -14, 70, -7, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -13, -78, 3, -9, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -13, -77, 26, -13, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -12, -72, 24, -12, -72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -12, -71, -7, -12, -61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -12, -60, -7, -12, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -12, 33, -4, -12, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -12, 64, 1, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, -42, -9, -11, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, -39, 3, -11, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, -26, -9, -11, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, -24, -1, -11, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, -2, -6, -11, 4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, 26, 1, -11, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, 50, -8, -11, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, 54, 6, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -10, 73, 17, -10, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, -24, -8, -8, -19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, -16, -9, -8, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, 25, 4, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, 69, 15, -8, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, -37, -6, -5, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, -36, -5, -7, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, -27, -8, -7, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, -26, -8, -7, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, -17, -9, -7, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, -3, -1, -7, 5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, 7, -9, -5, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, 8, -7, -7, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, 11, -9, -6, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, 25, -9, -5, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, 32, -4, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, -71, -7, -6, -69, Blocks.SAND.getDefaultState());

    }
    
    public static void generatePart13()
    {
        structure.fillWithBlocks(world, start, -9, -6, -58, -6, -6, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, -54, -5, -6, -50, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, -36, -8, -6, -34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, -26, -9, -5, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, -18, -9, -4, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, -15, -9, -5, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, 8, -7, -6, 10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, 24, -2, -6, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, 32, -5, -6, 37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -5, -59, -9, -3, -59, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, -5, -55, 0, -5, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -5, 11, -9, -5, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -56, -9, -3, -56, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, -4, -55, -4, -3, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -47, -7, -4, -47, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -37, 1, -4, -37, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -28, -9, -3, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -26, -8, -4, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -15, -8, -4, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -5, -9, -4, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 1, -5, -4, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 7, -9, -1, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 11, -9, -4, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 25, -9, -4, 27, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -9, -4, 28, -7, -4, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 31, -5, -2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -47, -7, -2, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -37, 2, -2, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -26, -8, -3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -20, -9, -2, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -18, -9, -3, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -4, -3, -3, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 3, -9, -3, 5, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -9, -3, 11, -9, -3, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 28, -7, -3, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -59, -9, -2, -56, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -55, -4, 0, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -49, -4, 0, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -27, -9, -2, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -26, -9, -2, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -21, -9, -1, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -17, -9, -2, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -5, -2, -2, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, 11, -9, -2, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, 28, -7, -2, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -54, -5, -1, -50, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -47, -7, 1, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -46, -1, -1, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -17, -6, -1, -13, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -12, -8, -1, -6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -5, -2, -1, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 10, -9, -1, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 37, -7, -1, 39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, -54, -9, 0, -53, Blocks.COMPOSTER.getDefaultState().with(ComposterBlock.LEVEL, 0));
        structure.fillWithBlocks(world, start, -9, 0, -51, -9, 0, -50, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -9, 0, -36, -5, 0, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, -21, -8, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 2, -7, 0, 2, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -9, 0, 22, -7, 0, 22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 24, -9, 2, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, 0, 31, -5, 0, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 37, -5, 0, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 38, -9, 5, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -9, 1, -55, -9, 4, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, -49, -5, 4, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, -36, -6, 4, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, -21, -9, 2, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -9, 1, 18, -5, 4, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 22, -9, 4, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 31, -7, 2, 31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -9, 3, -35, -7, 3, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -21, -6, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, 31, -6, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 4, -53, -6, 4, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -9, 4, -40, -2, 4, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 4, -32, -4, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 4, -10, -9, 4, -10, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -9, 4, -8, -8, 4, -6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -9, 4, 33, -8, 4, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -9, 5, -55, -9, 6, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -9, 5, -54, -9, 6, -54, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 5, -53, -9, 6, -53, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -9, 5, -48, 2, 5, -48, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -9, 5, -41, -9, 6, -40, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.EAST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, -9, 5, -28, -7, 5, -28, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -9, 5, -20, -8, 5, -19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -9, 5, -13, -9, 6, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, 6, -45, -8, 6, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 6, -38, -9, 8, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 6, -32, -4, 8, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 7, -55, -9, 7, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -9, 7, -45, -8, 7, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -45, -7, 8, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -45, -7, 9, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -44, -8, 9, -43, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -9, 9, -41, -5, 9, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -40, -6, 9, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -9, 9, -36, -5, 9, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -35, -9, 9, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -9, 9, -32, -7, 9, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 10, -42, -9, 10, -41, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -9, 10, -36, -7, 10, -36, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -9, 10, -35, -9, 11, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, 10, -34, -9, 11, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, 10, -33, -9, 11, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, 10, -32, -7, 10, -32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -9, 12, -35, -9, 13, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, -14, -84, -4, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -13, -83, -3, -13, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -12, -74, -6, -12, -72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -12, 63, 1, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -11, -42, 4, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -11, -14, -8, -11, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -11, 5, -8, -11, 5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -11, 6, -8, -11, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -11, 53, 6, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, -77, 0, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, -18, -6, -8, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, -15, -8, -8, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, 56, 5, -8, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, -21, -8, -7, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, -18, -6, -7, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, -15, -8, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, 6, -5, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, 13, -4, -7, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, 25, 4, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, -46, -2, -6, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, -27, -8, -3, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, -15, -8, -3, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, -6, -8, -6, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, 7, -4, -6, 11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -5, -54, -7, -5, -54, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -8, -5, -53, -7, -5, -53, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -8, -5, -6, -8, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -5, 25, -2, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -5, 32, -6, -3, 32, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -5, 43, -7, -5, 43, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -8, -5, 44, -7, -5, 44, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -8, -4, -28, -8, -3, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -4, -5, 2, -4, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -4, 25, -3, -4, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -3, -32, -8, -2, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -3, -6, 0, -3, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -3, -5, 2, -3, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -3, 25, -8, -3, 27, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -8, -2, -28, -8, -2, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, -19, 0, -1, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, -18, -6, -2, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, -15, -8, -2, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, 3, -8, -2, 5, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -8, -1, -59, -7, -1, -56, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, -33, -7, -1, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, -21, -8, -1, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, -18, -8, -1, -6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 6, -5, 0, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 7, -4, -1, 11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 12, 41, 0, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 19, -4, -1, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 28, -5, -1, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 32, -6, -1, 34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 35, -7, -1, 39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, -52, -6, 0, -52, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -8, 0, -50, -7, 0, -50, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -8, 0, 7, -8, 0, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -55, -7, 2, -55, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -8, 1, -48, -7, 1, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -37, -7, 2, -37, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.NORTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, -8, 1, -21, -8, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 6, -8, 4, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 7, -8, 2, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 9, -8, 2, 10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -8, 1, 11, -8, 4, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 12, -8, 4, 12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 22, -8, 4, 22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 37, -8, 2, 37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -8, 2, -48, -7, 2, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, -18, -6, 4, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -55, -5, 4, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -48, -7, 3, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, 7, -8, 4, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -54, -5, 4, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 4, -20, -7, 4, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -8, 4, -13, -6, 4, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 4, -12, -8, 4, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -10, -8, 4, -6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 4, 3, -8, 4, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -8, 4, 19, -7, 4, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, 32, -7, 4, 34, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 5, -54, -8, 6, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -8, 5, -53, -8, 6, -53, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -8, 5, -45, -7, 5, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 5, -43, -7, 5, -43, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.SOUTH).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 5, 2, -7, 5, 5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -8, 5, 7, -8, 5, 8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -8, 5, 18, -7, 5, 18, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 6, -43, -7, 6, -43, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 7, -43, -7, 7, -43, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 7, -38, 0, 8, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 7, -33, -5, 7, -33, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.NORTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 8, -47, -7, 8, -46, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 8, -29, -7, 8, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 9, -42, -6, 9, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 9, -35, -8, 9, -35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 9, -33, -7, 9, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 9, -31, -8, 9, -30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 10, -35, -8, 11, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -8, 10, -33, -8, 11, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -8, 12, -36, -8, 13, -36, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -8, 12, -35, -8, 12, -35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 12, -33, -7, 13, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 12, -32, -8, 13, -32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -8, 13, -35, -8, 13, -35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, -12, 62, 1, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, -14, -6, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, -12, -5, -11, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, -9, -7, -9, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, -8, -2, -11, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, 5, -6, -11, 6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, 7, -7, -11, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, 25, 1, -11, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, 50, -7, -11, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, 52, 6, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, 72, 12, -9, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, -68, -3, -8, -64, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, -63, -7, -6, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, -27, -1, -8, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, -6, 11, -8, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -7, -31, -7, -5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -7, -28, 17, -7, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -7, -27, -1, -7, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -7, -6, -5, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -7, 38, -7, -7, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -49, -7, -6, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -36, -7, -5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -35, -7, -6, -35, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -34, -7, -5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -28, -1, -3, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -21, -7, -5, -20, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -19, -7, -3, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -15, -7, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -14, -7, -5, -13, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -6, -1, -3, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, -5, 4, -6, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, 12, -1, -6, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, 19, -7, -6, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, 38, -7, -6, 44, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -6, 61, 3, -6, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -5, -49, -1, -5, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -5, -48, -7, -5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -5, -5, 4, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, -49, -7, -4, -47, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, -36, -7, -2, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, -34, -7, -2, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, 20, -7, -4, 22, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -7, -4, 45, -6, -3, 45, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -7, -3, -49, -7, -3, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -3, -35, -7, -2, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -3, 25, -2, -3, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -3, 38, -5, -2, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, -48, -7, -2, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, -27, -1, -2, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, -15, -1, -1, -15, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, -14, 0, -2, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, 25, -7, -2, 27, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -7, -2, 45, -5, -1, 45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -48, -7, 0, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -37, -7, -1, -37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -36, -7, 0, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -20, -5, -1, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -12, -5, -1, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -8, 2, -1, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 3, -7, -1, 5, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -7, -1, 40, -6, -1, 41, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, -1, 42, -6, -1, 43, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -7, -1, 44, -5, -1, 44, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 0, -46, 1, 0, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -18, -5, 0, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -12, -7, 0, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -8, -7, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 7, -7, 0, 10, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -7, 0, 23, -7, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -35, -5, 1, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -18, -6, 2, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -12, -7, 3, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -11, -7, 2, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -8, -7, 4, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -7, -7, 2, -7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -7, 1, -6, -7, 4, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -5, -7, 4, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 6, -5, 3, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 12, -7, 4, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 22, -7, 2, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 24, -7, 4, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 37, -6, 2, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, -35, -5, 2, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, -21, -5, 3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, -9, -7, 3, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, -11, -7, 3, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, 22, -7, 4, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, 26, -1, 3, 26, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, 28, -5, 3, 30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -7, 4, -48, -5, 4, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, -31, -5, 4, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, -17, -6, 4, -17, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 4, -16, -6, 4, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 4, -12, -6, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, -10, -7, 4, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, 3, -7, 4, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -7, 4, 6, -3, 4, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, 9, -6, 4, 9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 4, 10, -6, 4, 11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 4, 25, 0, 4, 25, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, 36, -6, 4, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 5, -49, -6, 5, -49, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -7, 5, -38, 1, 5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 5, -20, -6, 5, -19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -7, 5, -10, -7, 5, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -7, 5, 6, -6, 5, 6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -7, 5, 9, -6, 5, 9, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -7, 6, -45, -7, 6, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 6, -38, 0, 8, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 6, 7, -6, 6, 8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -7, 7, -45, -7, 7, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 7, -23, -7, 8, -23, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -7, 7, -22, -7, 8, -22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 8, -31, -6, 8, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 9, -44, -7, 9, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 9, -35, -7, 9, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 10, -35, -7, 11, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -7, 10, -34, -7, 11, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -7, 10, -33, -7, 11, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -7, 12, -35, -7, 13, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, -14, 70, 30, -14, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -14, 71, 1, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -13, 65, 31, -13, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, -81, 0, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, -71, 24, -12, -71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, -70, -5, -12, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, -61, -6, -8, -61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, -60, -5, -12, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, -58, 0, -12, -47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, 32, -5, -12, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, 55, -4, -12, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, 58, -6, -12, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -12, 61, 1, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -11, -9, 0, -11, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -11, 7, -5, -11, 8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -11, 9, -6, -11, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -11, 24, 1, -11, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -11, 50, 7, -11, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -28, -6, -7, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -27, 90, -9, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -8, -63, -2, -8, -59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -8, -58, -6, -6, -58, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -8, -57, 2, -8, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -8, 70, 11, -8, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, -68, -1, -7, -63, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, -62, -6, -5, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, -57, -6, -7, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, -31, -4, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, 18, -6, -7, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, 19, -6, -5, 23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, 24, 7, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, 38, -5, -6, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -7, 65, 11, -7, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -6, -71, -6, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -6, -68, -1, -6, -63, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -6, -49, -2, -6, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -6, -36, -1, -6, -29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -6, -19, -6, -1, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -6, -15, -6, -3, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -5, -63, -6, -5, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -5, -57, -6, -5, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -5, -48, -6, -2, -48, Index.CUT_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.NORTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, -5, 34, -6, -2, 34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -6, -5, 35, -6, 0, 35, Blocks.LADDER.getDefaultState().with(LadderBlock.FACING, Direction.WEST).with(LadderBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, -5, 36, -6, -2, 36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -6, -5, 38, 11, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, -63, -6, -1, -63, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, -62, -6, -1, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, -57, -6, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, -56, -6, -1, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, -49, -1, -4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, -38, -4, -4, -38, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -6, -4, 18, -6, -4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, 19, -6, -4, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, 24, 0, -4, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, 38, -5, -3, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -58, -6, -2, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -49, -4, -3, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, -28, -1, -2, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 18, -6, -2, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 19, -6, -2, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 24, 0, -2, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -58, -6, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -48, -2, -1, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -37, -6, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -21, -3, -1, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -9, 2, -1, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, 25, -6, -1, 27, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -6, -1, 36, -5, -1, 39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, -50, -5, 0, -50, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -6, 0, -48, -4, 0, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, -21, -1, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, -12, -3, 0, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 2, -6, 4, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 24, -4, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, -55, -5, 2, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, -48, -5, 1, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, -21, -5, 2, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, -12, -3, 3, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, 12, -4, 2, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -6, 1, 24, -4, 3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, 31, -6, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, -48, -5, 2, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, -30, -6, 2, -28, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.WEST).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, 3, -48, -5, 3, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 3, -35, -5, 3, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 3, -30, -6, 3, -28, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.WEST).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, 3, 12, -3, 4, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, -20, -5, 4, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -6, 4, -11, -6, 4, -7, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, 19, -6, 4, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, 4, 24, -2, 4, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, 33, -6, 4, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, 5, -47, -6, 7, -47, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -6, 5, -45, -6, 5, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 5, -23, -6, 8, -23, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 5, 2, -6, 5, 5, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, 6, -45, -6, 9, -45, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 6, -44, -6, 6, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 6, -28, -6, 7, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -6, 7, -44, -6, 7, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 7, -24, -6, 8, -24, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 7, -22, -6, 8, -22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 8, -47, -6, 8, -46, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 8, -44, -6, 8, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 9, -44, -6, 9, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 9, -35, -5, 9, -33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 9, -32, -5, 9, -32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 10, -35, -6, 10, -33, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -6, 10, -32, -5, 10, -32, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, 12, -34, -6, 13, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -5, -14, -79, 0, -10, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -13, 77, 15, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -12, -74, -2, -12, -71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -12, -61, -3, -12, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -12, 41, 4, -12, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -12, 59, 1, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -11, -80, 6, -11, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -11, -68, 3, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -11, -14, -4, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -11, -2, -1, -11, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -11, -1, 8, -11, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -11, 13, -5, -11, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -11, 75, 12, -11, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, -28, -4, -9, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -8, -58, 2, -8, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -8, -28, -4, -8, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -8, 13, -1, -8, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -8, 18, 15, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -7, -62, 0, -7, -57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -7, -56, 0, -5, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -7, -37, -5, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -7, 18, 14, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -6, -70, -4, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -6, -62, 0, -6, -57, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -6, -55, 0, -5, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -6, -37, 1, -5, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -6, 19, 7, -6, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -5, -63, 0, -5, -63, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -5, -48, -3, -3, -48, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -5, -31, -5, -5, -30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, -5, 19, 7, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -5, 35, -5, -1, 35, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -5, 39, -5, -4, 40, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.WEST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, -5, -4, -63, -4, -3, -63, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, -56, -5, -4, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, -15, -3, -4, -15, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -5, -4, 18, 7, -4, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, 45, -5, -1, 45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -56, -5, -3, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -19, -2, -1, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -15, -2, -3, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, 18, 7, -3, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, -63, -1, -1, -63, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, -56, -5, -1, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, -48, -3, -2, -48, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, -18, -2, -2, -15, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, 18, 7, -2, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -62, -1, -1, -57, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, -1, -37, -5, 0, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -36, -1, -1, -29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -28, -4, -1, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -14, -4, -1, -13, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 25, -1, -1, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 32, -5, -1, 39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 40, -5, -1, 44, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 0, -45, -4, 0, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -43, -5, 0, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -31, -4, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -17, -5, 0, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -11, -5, 2, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 0, -7, -5, 2, -7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 0, 28, -5, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 0, 32, -5, 0, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -45, -5, 1, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -37, -5, 4, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -36, -5, 1, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -32, -4, 1, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -18, -5, 4, -18, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -17, -5, 4, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -16, -5, 3, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 31, -5, 4, 31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 32, -5, 4, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 33, -5, 2, 34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 1, 35, -5, 2, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 37, -5, 4, 37, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -45, -5, 2, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -36, -5, 2, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -32, -4, 2, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -45, -5, 3, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -36, -5, 3, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -31, -4, 3, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -11, -4, 3, -10, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -9, -5, 3, -7, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, 33, -5, 4, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -45, -4, 4, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -43, -5, 5, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -42, -1, 4, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -27, -4, 4, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -26, -4, 4, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -21, -4, 4, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -15, -3, 4, -13, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -12, -4, 4, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, 4, -5, 4, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 4, 7, -5, 4, 8, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 4, 9, -3, 4, 11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 4, 19, -5, 4, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 4, 21, -4, 4, 22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 5, -31, -4, 5, -31, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -5, 5, -28, 1, 5, -28, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -5, 5, -27, -4, 5, -27, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 5, -21, -4, 5, -21, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 5, -20, -4, 5, -19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -5, 5, 3, -5, 5, 5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -5, 5, 7, -5, 5, 8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -5, 6, -43, -5, 8, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 7, -23, -5, 8, -23, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 7, -15, -5, 10, -15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -5, 8, -46, -2, 8, -46, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 9, -45, -4, 9, -44, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 9, -42, -5, 9, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 9, -40, -2, 9, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 9, -16, -5, 10, -15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -4, -12, -70, -4, -12, -70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -12, -69, -4, -12, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -12, -62, -1, -12, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -12, -46, -4, -12, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -12, -45, -4, -12, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -12, 40, 6, -12, 50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -12, 58, 2, -12, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -11, -81, 8, -11, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -11, -12, -3, -11, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -11, 13, -2, -11, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -11, 16, -4, -11, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -11, 23, 2, -11, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -10, 67, 2, -10, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -8, 39, -4, -8, 45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, -74, 1, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, -37, -1, -5, -37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, -36, -1, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, -6, -2, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, 6, -4, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, 7, -3, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, 38, 23, -7, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, 39, 9, -7, 52, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, 56, 5, -7, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -6, -54, -4, -6, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -6, -27, -4, -5, -27, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.EAST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, -6, -7, -4, -5, -7, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.EAST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, -6, 32, 10, -6, 52, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -5, -54, -4, -5, -50, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -4, -5, -36, -3, -5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -5, -31, -2, -5, -31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, -5, -30, -3, -5, -30, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -4, -5, -29, -3, -5, -29, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -4, -5, 32, 2, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -5, 39, -4, -5, 45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, -56, -4, -2, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, -53, -4, -4, -51, Index.HEDGE_OAK.getDefaultState().with(Hedge.STATE, HedgeState.STRAIGHT_X).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, -4, -36, -3, -4, -36, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, -4, 31, -4, -4, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, 32, -4, -2, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, 38, -4, -4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, 41, -4, -3, 43, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -4, -4, 44, -4, -1, 44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, 45, -4, -1, 45, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, -36, -3, -3, -36, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, -3, 31, -4, -3, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, 38, 10, -1, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, 39, -4, -2, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, -54, -4, -2, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, -53, -4, -2, -51, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, -2, -50, -3, -2, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, 31, -4, -2, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, 41, -4, -1, 44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -56, -1, -1, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -54, -4, -1, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -53, -4, -1, -51, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -50, -3, -1, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -37, -1, -1, -29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -12, -3, -1, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, 32, 2, -1, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, 40, -4, -1, 44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -50, -4, 0, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -36, -3, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -34, -4, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -17, -3, 0, -17, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -4, 0, -16, 0, 0, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, 2, -4, 4, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, 36, -4, 0, 37, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -4, 1, -55, -4, 4, -55, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -54, -4, 4, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -50, -4, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -49, -4, 4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -48, -1, 1, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -44, 0, 3, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -36, -4, 1, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -35, -4, 3, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -34, -4, 3, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -21, -4, 4, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -16, -3, 2, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, 18, -3, 2, 18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 2, -48, -1, 2, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 2, -36, -4, 2, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 2, 6, -3, 3, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -48, -1, 3, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -36, -4, 3, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -16, -1, 3, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -53, -4, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -48, 0, 4, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -43, -1, 4, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -31, -4, 4, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -18, -4, 4, -17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 4, -16, -4, 9, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, 7, -3, 4, 11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 4, 20, -4, 4, 22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 4, 23, -3, 4, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 5, -53, -4, 5, -51, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -4, 5, -43, -1, 5, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 5, -18, -3, 5, -17, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -4, 5, -15, -4, 5, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 5, 2, -4, 5, 5, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 6, -43, -3, 7, -43, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 6, -15, -4, 9, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 6, -14, -4, 7, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -4, 6, -13, -4, 9, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 6, -12, -4, 9, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 8, -43, -2, 9, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 8, -14, -4, 9, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 8, 21, -4, 9, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 9, -42, -2, 9, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 9, -32, 0, 9, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 10, -15, -4, 10, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -4, 10, 21, -4, 10, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, -14, -84, 1, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, -70, -2, -12, -69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, -68, -3, -9, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, -64, 2, -12, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, -46, -2, -12, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, -44, -3, -12, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, 34, -3, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, 39, 7, -12, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, 55, -3, -12, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -12, 57, 2, -12, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, -14, -2, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, 16, -1, -11, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, 19, -3, -11, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, 21, 3, -11, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -10, 74, 9, -10, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -9, -28, -1, -7, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -8, 39, 10, -8, 52, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -7, 6, -3, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -7, 13, -1, -7, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -6, -69, 107, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -6, -54, 0, -6, -50, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -6, -27, -2, -5, -27, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.SOUTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, -3, -6, -25, -3, -6, -22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -3, -6, -12, -3, -6, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -3, -6, -7, -2, -5, -7, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.NORTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, -3, -6, 7, -3, -6, 11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -6, 62, 2, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -5, -54, 0, -5, -50, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -5, 53, -3, -5, 53, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, -4, -63, -2, -3, -63, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -3, -4, -55, -2, -4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -4, 31, 4, -4, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -4, 53, -3, -4, 53, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, -3, -56, -1, -2, -56, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -3, -3, -55, 0, -3, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, 31, 4, -3, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, -55, 0, -2, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, 31, 4, -2, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -55, 0, -1, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -28, 3, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -17, -2, -1, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -14, -2, -1, -13, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, 6, 4, 0, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, 7, -2, -1, 11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, 19, -2, -1, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, -49, -2, 0, -49, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -3, 0, -48, 1, 0, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, -43, -2, 0, -43, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -3, 0, -42, -2, 0, -42, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -3, 1, -36, -2, 1, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, -21, -3, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 6, -3, 4, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 12, -3, 4, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, -36, -2, 2, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 24, -2, 3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 3, -36, -2, 3, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 3, -19, -2, 3, -19, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 3, -11, -2, 3, -10, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, -51, -3, 4, -49, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, -32, 2, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, -26, 1, 4, -22, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -3, 4, -20, 1, 4, -20, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, -16, -1, 4, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, -12, -1, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 4, -3, 4, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -3, 4, 19, -2, 4, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -3, 4, 22, -3, 4, 22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -3, 5, -41, -3, 5, -40, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -3, 5, -32, -2, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 5, -16, 0, 5, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 5, -12, 0, 5, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 5, 3, -3, 5, 5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -3, 5, 11, -3, 5, 12, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -3, 5, 21, -3, 9, 21, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 6, -32, -3, 7, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -3, 6, -16, -1, 8, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 6, -12, -3, 9, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 8, -45, -2, 8, -44, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 8, -32, 0, 9, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());

    }
    
    public static void generatePart14()
    {
        structure.fillWithBlocks(world, start, -3, 8, 20, -3, 9, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 8, 22, -3, 9, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 9, -16, -1, 9, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 9, -14, -2, 9, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -3, 10, 20, -3, 10, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, -13, -83, 1, -13, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -12, -82, 4, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -12, -68, 7, -12, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -12, -44, 6, -7, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -12, -43, -1, -12, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -12, -21, -1, -12, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -12, -19, -2, -12, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -12, 56, 3, -12, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -11, -12, -2, -9, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -11, -11, 4, -11, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -11, 19, 5, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -8, -68, 1, -8, -65, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -8, -64, 0, -6, -64, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -8, 53, -2, -6, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -8, 54, -1, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -7, 6, -2, -7, 6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -7, 7, -2, -5, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -7, 12, 89, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -7, 54, -1, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -6, -70, -1, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -6, -24, -2, -6, -23, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -2, -6, -19, -2, -1, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -6, -15, -2, -3, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -6, -11, -2, -6, -10, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -2, -6, 54, -1, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -5, -48, -2, -2, -48, Index.CUT_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.NORTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -2, -5, 52, -2, -5, 52, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, -5, 53, -2, -4, 53, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, 6, -2, -4, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, 7, -2, -2, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, 12, 41, 0, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, 52, -2, -4, 52, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, -3, 6, -2, -3, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -2, 6, -2, -2, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, -21, -1, -1, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, -11, 4, -1, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, 24, -1, -1, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, -36, -1, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, 7, -2, 0, 11, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -2, 0, 24, 3, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -21, -2, 2, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -2, 1, -16, -2, 2, -16, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -2, 1, 6, -2, 4, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, 12, -2, 4, 12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, 18, -2, 4, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, 24, -2, 4, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -12, -1, 3, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, -53, -1, 3, -51, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, -21, 1, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, -50, -1, 4, -49, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, -15, -1, 4, -14, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, 7, 2, 4, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, 21, -2, 4, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -2, 5, -46, -2, 7, -46, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -2, 5, -41, -2, 5, -40, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -2, 5, 4, -2, 5, 5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -2, 5, 8, -2, 5, 11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -2, 6, -43, -2, 9, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 6, -32, -2, 9, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 6, -12, -2, 7, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -2, 6, 9, -2, 6, 11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -2, 7, 11, -1, 7, 11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -2, 8, -31, -1, 8, -30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -2, 8, -12, -1, 9, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 8, 10, -2, 9, 10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -2, 8, 21, -2, 9, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, 9, -15, -1, 9, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -2, 9, 9, -2, 9, 10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -1, -13, 66, 32, -13, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -13, 67, 1, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, -74, 14, -12, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, -46, 1, -12, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, -29, 4, -12, -19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, -18, 11, -12, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, -4, 3, -12, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, 1, 0, -12, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, 4, -1, -12, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -12, 55, 3, -12, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -11, -14, -1, -10, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -11, -12, 4, -11, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -11, 13, 12, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -8, -63, 10, -8, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -8, 53, 1, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -7, -6, 1, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -7, 6, 5, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -7, 53, 1, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -7, 66, 3, -7, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -49, 1, -6, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -46, 0, -6, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -44, 0, -6, -43, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -42, -1, -6, -40, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -39, 0, -6, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -27, -1, -5, -27, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -1, -6, -24, -1, -6, -23, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -1, -6, -19, 0, -5, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -15, -1, -6, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, -11, -1, -6, -10, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -1, -6, -7, -1, -5, -7, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -1, -6, 7, 18, -6, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -6, 53, 1, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -5, -48, 0, -5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -5, -15, -1, -5, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -5, 7, 4, -5, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, -63, -1, -1, -63, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, -55, -1, -4, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, -54, -1, -1, -50, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, -48, -1, -4, -47, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, -19, 0, -4, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, -15, -1, -4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 6, 5, -4, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, -48, -1, -3, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, -15, -1, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 6, 5, -3, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, -48, -1, -2, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, -18, 1, -2, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 6, 5, -2, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, -48, 0, -1, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, -14, -1, -1, -13, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, -12, 4, -1, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 7, 2, -1, 11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 19, 1, -1, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, -53, -1, 2, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -1, 0, -13, -1, 4, -13, Blocks.LADDER.getDefaultState().with(LadderBlock.FACING, Direction.WEST).with(LadderBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -1, 0, -12, 0, 0, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, -11, -1, 2, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -1, 0, 19, 1, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 25, -1, 0, 25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 0, 26, -1, 2, 26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -1, 1, -36, -1, 1, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, -21, -1, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, -16, -1, 4, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, -12, -1, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 6, 1, 2, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -1, 1, 12, 3, 3, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 18, -1, 4, 18, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 19, 1, 1, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 24, -1, 4, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 25, -1, 1, 25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -1, 2, -36, -1, 2, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 2, 19, 1, 2, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, -36, -1, 3, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, -11, -1, 3, -10, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, 6, 3, 4, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, 19, -1, 4, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 4, -19, 1, 4, -19, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 4, 12, -1, 4, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 5, -42, -1, 5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 5, 6, 3, 5, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 5, 7, -1, 5, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, -43, -1, 9, -43, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, -42, -1, 9, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, -41, -1, 7, -41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -1, 6, -40, -1, 8, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, -12, -1, 9, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, 6, -1, 9, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, 7, -1, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, 8, -1, 7, 8, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, 9, -1, 9, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, 10, -1, 9, 10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, 11, -1, 7, 11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -1, 7, -32, 0, 8, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, -41, -1, 9, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, 8, 0, 8, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 9, -38, 0, 9, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 9, -37, 0, 9, -36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -1, 9, -34, 0, 9, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -1, 9, 8, 0, 9, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 10, -38, -1, 11, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -1, 10, -35, -1, 11, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -1, 12, -38, -1, 12, -35, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 0, -12, -43, 3, -9, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -12, -42, 12, -12, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -12, 4, 6, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -12, 11, 0, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -12, 54, 4, -12, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -11, -14, 2, -11, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -11, -2, 19, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -10, -80, 31, -10, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, -28, 95, -9, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -8, -28, 1, -8, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -8, -26, 14, -8, -9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -8, -8, 0, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -68, 3, -7, -65, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -63, 0, -5, -63, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -37, 2, -7, -35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -34, 0, -6, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -32, 0, -7, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -31, 0, -5, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -27, 4, -7, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -26, 14, -7, -9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -8, 0, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -7, -3, 35, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, -70, 1, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, -68, 4, -6, -64, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, -41, 1, -6, -40, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, -36, 7, -6, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, -27, 0, -3, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, -15, 0, -3, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, -6, 4, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -5, -49, 2, -5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -5, -43, 1, -5, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -5, -41, 1, -5, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -5, -36, 7, -5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -5, -6, 4, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -63, 0, -1, -63, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -56, 0, -1, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -55, 0, -4, -52, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -51, 0, -4, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -47, 1, -4, -47, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -36, 0, -2, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -28, 0, -4, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -6, 4, -4, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -48, 27, -2, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -47, 1, -2, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -28, 0, -3, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -19, 0, -1, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 13, 12, -3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -28, 1, -2, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -26, 5, -2, -21, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -20, 0, -2, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -15, 0, 0, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 13, 13, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -62, 0, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -46, 1, -1, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -44, 1, -1, -40, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -39, 1, -1, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -37, 2, -1, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -34, 12, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -20, 5, -1, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 13, 5, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 26, 1, -1, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, -43, 2, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 13, 5, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 29, 0, 0, 30, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 0, 1, -48, 0, 3, -46, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, -45, 0, 1, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, -36, 5, 3, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, -35, 14, 3, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, -16, 0, 9, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, -15, 0, 4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, -14, 0, 2, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 0, 1, -13, 0, 4, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, -12, 0, 9, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, 13, 4, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, 18, 1, 2, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, 24, 0, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -45, 0, 4, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -43, 1, 2, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -41, 0, 3, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -21, 1, 3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, 13, 4, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 3, -43, 1, 3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 3, -14, 0, 4, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 3, 13, 4, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 3, 18, 0, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 4, -43, 2, 4, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 4, -37, 0, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 4, 12, 1, 4, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 4, 14, 0, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 5, -40, 0, 5, -39, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 0, 5, -32, 1, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 5, -30, 0, 7, -30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 0, 5, -21, 0, 6, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 0, 5, -15, 0, 5, -12, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 5, 7, 2, 5, 9, Blocks.GLOWSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 5, 10, 3, 5, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 5, 13, 0, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, -32, 0, 9, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, -15, 0, 8, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, 6, 0, 9, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, 10, 0, 9, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, 13, 0, 14, 13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, 14, 0, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, 15, 0, 7, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 0, 6, 16, 0, 8, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, 24, 0, 9, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 7, -23, 2, 7, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 0, 8, -31, 0, 8, -30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 0, 8, 7, 2, 8, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 8, 11, 0, 8, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 0, 8, 15, 0, 9, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 9, -35, 0, 9, -33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 0, 9, -15, 0, 9, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 9, 7, 2, 9, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 9, 11, 1, 9, 12, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 0, 9, 17, 0, 9, 18, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 9, 19, 0, 9, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 10, 8, 0, 10, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 10, 14, 0, 10, 17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 10, 23, 0, 10, 23, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 0, 11, 8, 0, 11, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 11, 14, 0, 14, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 11, 15, 0, 12, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 0, 11, 16, 0, 14, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 11, 17, 0, 14, 17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 12, -38, 1, 12, -38, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 0, 12, -37, 1, 12, -35, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 0, 12, 8, 0, 12, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 13, 8, 0, 13, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 13, 15, 0, 14, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -14, -79, 4, -14, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -12, -58, 35, -12, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -12, -57, 2, -12, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -12, 1, 1, -12, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -12, 3, 10, -12, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -12, 13, 1, -12, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -12, 53, 5, -12, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -11, 38, 5, -11, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -11, 43, 1, -9, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -79, 30, -9, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -8, -77, 9, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -8, -64, 11, -8, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -8, -8, 3, -7, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -8, -7, 4, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -7, -64, 3, -7, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -7, -34, 6, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -7, -7, 4, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -6, -63, 3, -6, -52, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -6, -51, 5, -6, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -6, -46, 1, -6, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -6, -44, 1, -6, -43, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -6, -39, 1, -6, -38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -6, -28, 2, -6, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -6, -7, 3, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -5, -64, 11, -5, -64, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -5, -51, 2, -5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -5, -28, 2, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -5, -7, 3, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, -64, 1, -3, -64, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, -50, 3, -4, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, -36, 8, -4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, -28, 2, -4, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, -7, 3, -4, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -51, 1, -3, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -42, 1, -2, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -36, 8, -3, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -28, 2, -3, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -7, 3, -3, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -64, 1, 0, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -51, 2, -2, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -36, 9, -2, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -20, 3, -2, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -7, 4, -2, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -2, 2, -2, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -55, 2, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -53, 1, -1, -52, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -51, 2, -1, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -48, 1, 0, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -21, 5, -1, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -14, 2, -1, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, 25, 1, 0, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -52, 1, 0, -51, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 1, 0, -21, 6, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 38, 8, 0, 38, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 1, 1, -64, 1, 4, -64, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -63, 1, 4, -63, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -62, 1, 2, -61, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 1, 1, -60, 1, 2, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -58, 1, 2, -58, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 1, 1, -57, 1, 4, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -56, 1, 4, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -48, 1, 3, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -44, 1, 1, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -21, 1, 4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 24, 1, 2, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 31, 1, 4, 31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 2, -44, 2, 2, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 2, -41, 4, 2, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, -62, 1, 4, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, -44, 2, 3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, -41, 5, 3, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, 19, 1, 3, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, 24, 1, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, 25, 1, 3, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, -48, 1, 4, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, -34, 4, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, 14, 6, 4, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, 26, 1, 4, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 5, -37, 1, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 5, -15, 4, 5, -15, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 1, 5, -13, 3, 5, -13, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 1, 5, 21, 1, 6, 22, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 5, 27, 1, 5, 30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 1, 6, -38, 1, 9, -38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, -37, 1, 9, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, -36, 1, 7, -36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 1, 6, -35, 1, 9, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, -34, 1, 7, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 1, 6, -33, 1, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, -32, 1, 9, -32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, 6, 1, 7, 6, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, 10, 1, 7, 10, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, 13, 1, 9, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 6, 20, 1, 8, 20, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.SOUTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 1, 6, 23, 1, 8, 23, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.NORTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 1, 6, 24, 1, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 7, 21, 1, 8, 22, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 8, -36, 1, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 8, 6, 2, 8, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 8, 11, 2, 8, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 1, 9, 6, 2, 9, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 9, 17, 4, 9, 17, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 9, 18, 3, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 1, 10, -35, 1, 11, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 1, 10, 7, 1, 10, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 10, 13, 4, 10, 13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 10, 17, 4, 10, 17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 11, 7, 1, 11, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 11, 13, 1, 14, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 11, 17, 1, 14, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 12, 7, 1, 12, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 13, 7, 1, 13, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 14, 14, 2, 14, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, -14, -84, 6, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -14, 71, 2, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -14, 72, 2, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -13, -82, 5, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -13, 67, 5, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -13, 71, 6, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -12, 2, 12, -12, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -12, 13, 2, -12, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -12, 14, 2, -12, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -12, 66, 3, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -12, 67, 5, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -11, -3, 22, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -11, 32, 10, -11, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -11, 43, 3, -11, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -11, 45, 16, -11, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -8, -68, 5, -8, -65, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -8, -28, 3, -8, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -8, 53, 4, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -7, -74, 7, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -7, -51, 2, -7, -47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -7, -46, 2, -6, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -7, -42, 15, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -7, 53, 4, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -6, -70, 3, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -6, -44, 17, -6, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -5, -46, 4, -5, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -5, -42, 2, -4, -42, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -5, -40, 4, -5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -5, -37, 2, -2, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -64, 10, -3, -64, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -51, 2, -3, -51, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.SOUTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, -4, -47, 2, -4, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -46, 2, -4, -43, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -41, 2, -4, -38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, -50, 5, -3, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, -46, 2, -2, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -64, 9, 0, -64, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -56, 9, 0, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -53, 2, 0, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -47, 2, -2, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -27, 4, -2, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -63, 2, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -48, 5, -1, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -44, 2, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, 19, 6, -1, 30, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, 31, 9, -1, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, -59, 2, 0, -58, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 2, 0, -1, 2, 0, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 7, 3, 1, 7, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 8, 2, 0, 10, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, 0, 11, 3, 1, 11, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 20, 2, 1, 22, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.EAST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 2, 0, 25, 2, 0, 26, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.EAST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, 0, 31, 8, 0, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -64, 5, 4, -64, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -56, 2, 4, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -53, 2, 4, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -52, 2, 3, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -44, 2, 3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -41, 2, 1, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -21, 2, 4, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 6, 3, 2, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 18, 7, 3, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 24, 3, 2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 31, 2, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 2, -47, 2, 2, -46, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.EAST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 2, 2, 8, 3, 2, 8, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 2, 2, 10, 3, 2, 10, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 2, 2, 26, 2, 2, 29, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 2, 3, 24, 7, 3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -62, 6, 4, -58, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, 4, -57, 4, 4, -57, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, 4, -52, 2, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -48, 5, 4, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -44, 2, 4, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -26, 2, 4, -22, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, 4, 12, 2, 4, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, 13, 2, 4, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, 24, 14, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, 25, 7, 4, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, 26, 2, 9, 26, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, 4, 27, 3, 4, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, 5, -35, 2, 5, -34, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 2, 5, -23, 2, 6, -23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 2, 5, 25, 6, 5, 25, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 2, 5, 31, 6, 5, 31, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 2, 6, 6, 2, 9, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 6, 10, 2, 9, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 6, 24, 4, 7, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 2, 7, 13, 6, 9, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 8, 24, 13, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 9, 11, 3, 9, 12, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 2, 10, 8, 2, 13, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 10, 24, 4, 10, 24, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 2, 11, 13, 2, 12, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 2, 11, 17, 2, 12, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 2, 13, 13, 3, 14, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 13, 17, 3, 14, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 16, 16, 2, 16, 17, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -14, 71, 4, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -14, 73, 8, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -13, -83, 7, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -12, -57, 3, -12, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -12, -56, 3, -12, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -12, 1, 13, -12, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -12, 13, 4, -12, 14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -12, 15, 32, -12, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -12, 52, 6, -12, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -12, 62, 6, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -11, -14, 3, -9, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -11, -13, 4, -11, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -11, 30, 12, -11, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, -51, 6, -6, -51, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, -50, 25, -8, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -7, -50, 24, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -6, -46, 20, -6, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -6, -28, 3, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -5, -63, 3, -5, -62, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 3, -5, -51, 6, -2, -51, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -5, -50, 17, -5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -4, -47, 21, -4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -4, -28, 3, -3, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, -46, 20, -3, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, -1, 4, -3, 1, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 2, 3, -3, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, -53, 6, 0, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, -50, 17, -2, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, -2, 3, 0, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, -1, 4, -2, 1, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 2, 3, -2, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -63, 3, -1, -62, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 3, -1, -61, 3, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -55, 4, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -52, 5, -1, -42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -41, 6, -1, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -13, 4, -1, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -1, 4, -1, 1, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, 2, 3, -1, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, 8, 3, -1, 10, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -63, 3, 0, -62, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 3, 0, -59, 3, 0, -58, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 3, 0, -42, 5, 2, -42, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -41, 6, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -20, 4, 0, -20, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 3, 0, -16, 3, 2, -16, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 3, 0, -1, 4, 0, 1, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 3, 0, 2, 3, 0, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 8, 3, 0, 10, Blocks.FIRE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, -56, 3, 2, -56, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 3, 1, -53, 3, 4, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, -41, 8, 1, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, -40, 5, 1, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, -21, 6, 3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 31, 5, 2, 31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 3, 3, -56, 8, 4, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -42, 5, 3, -42, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 3, 3, -20, 3, 3, -16, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, 31, 7, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, -63, 8, 4, -58, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 3, 4, -52, 5, 4, -50, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 3, 4, -49, 5, 4, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, -42, 4, 4, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, -41, 5, 4, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, -26, 7, 4, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, -21, 6, 5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, 7, 4, 4, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, 12, 4, 4, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, 26, 5, 4, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 3, 5, -55, 3, 5, -54, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 3, 5, -27, 3, 5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 5, 7, 3, 5, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 5, 13, 7, 5, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 5, 15, 3, 5, 18, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 3, 6, -27, 3, 9, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, -26, 3, 9, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, -25, 3, 7, -24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 3, 6, -23, 3, 7, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, -21, 3, 9, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, 6, 3, 9, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, 7, 3, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, 8, 3, 7, 8, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, 9, 3, 9, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, 10, 3, 9, 10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, 13, 6, 9, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -25, 3, 9, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, 8, 3, 9, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, 11, 3, 8, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 3, 11, 13, 3, 14, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 11, 17, 3, 14, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 14, 15, 3, 14, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 3, 16, 14, 3, 17, 14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 3, 16, 15, 3, 17, 15, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -13, -78, 26, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -12, -57, 5, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -12, -55, 4, -12, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -12, -43, 17, -12, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -12, -4, 6, -12, -1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -12, 60, 9, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -12, 66, 5, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, -68, 4, -10, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, -66, 7, -11, -63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, -62, 4, -11, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, -14, 4, -11, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, -4, 25, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, 27, 4, -7, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, 28, 15, -11, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, 43, 5, -11, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -8, -78, 13, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -8, -8, 4, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -7, -68, 7, -7, -65, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -7, -64, 9, -7, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -7, -63, 5, -7, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -7, -61, 9, -7, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -7, -8, 4, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -6, -70, 5, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -6, -63, 5, -6, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -6, -61, 8, -6, -52, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -6, -28, 4, -5, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -6, -27, 4, -3, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -6, -19, 5, -5, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -6, -15, 4, -3, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -5, -63, 5, -5, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -63, 4, -4, -62, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, -4, -50, 16, -4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -28, 4, -3, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -19, 5, -4, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, -19, 6, -1, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, -6, 12, -3, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, -5, 6, -3, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, -2, 5, -3, -1, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 2, 6, -1, 2, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 3, 26, -3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, -20, 4, -2, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, -18, 5, -2, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, -15, 4, 0, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, -8, 4, -1, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, -2, 5, -2, -1, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 3, 27, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, -61, 6, -1, -61, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 4, -1, -60, 7, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, -2, 5, -1, -1, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 3, 7, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, -61, 5, 0, -61, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 4, 0, -3, 6, 0, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, -2, 5, 0, -1, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 4, 0, 2, 6, 0, 2, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 4, 0, 3, 7, 0, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 7, 7, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, -56, 5, 2, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, -53, 4, 2, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 4, 1, -15, 4, 4, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, -14, 4, 2, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, -12, 4, 2, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 4, 1, -10, 4, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, -9, 4, 4, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 0, 4, 3, 0, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 6, 4, 4, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 7, 4, 4, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 12, 9, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 2, 12, 4, 3, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 2, 24, 7, 3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 3, -53, 5, 4, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 3, -17, 4, 3, -16, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 3, -14, 4, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -20, 5, 4, -18, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, 0, 4, 4, 0, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, 30, 6, 4, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 4, 5, -27, 9, 5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 5, -13, 4, 5, -11, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 4, 5, -10, 4, 5, -10, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 4, 5, 6, 4, 5, 8, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 4, 6, -27, 4, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 6, -21, 4, 9, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 6, 7, 4, 6, 8, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 4, 9, -26, 8, 9, -26, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 4, 9, -25, 6, 9, -22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 4, 9, 11, 4, 9, 12, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 4, 9, 14, 4, 9, 17, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 9, 18, 6, 9, 18, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 4, 9, 19, 5, 9, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 4, 9, 21, 4, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 4, 10, -27, 8, 10, -27, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 4, 10, -26, 8, 10, -26, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 10, -25, 6, 10, -25, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 4, 10, 14, 4, 10, 17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 10, 18, 5, 10, 18, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 4, 10, 19, 4, 10, 19, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 11, -26, 8, 11, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 11, 13, 4, 14, 13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 11, 14, 4, 14, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 11, 15, 4, 12, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 4, 11, 16, 4, 14, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 11, 17, 4, 14, 17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 11, 19, 4, 11, 19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 11, 20, 4, 12, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 4, 12, 19, 4, 12, 19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 13, 15, 4, 14, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 13, 20, 4, 14, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 5, -14, -79, 7, -12, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -14, 71, 6, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, -82, 11, -12, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, -75, 24, -12, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, -54, 5, -12, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, -29, 76, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, -28, 10, -12, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, -19, 5, -9, -19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, 0, 15, -12, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, 13, 6, -12, 14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, 51, 8, -12, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -12, 58, 12, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -68, 5, -9, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -67, 10, -11, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -61, 5, -11, -37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -36, 6, -11, -35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -34, 5, -11, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -9, 6, -11, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -7, 5, -11, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, -5, 27, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, 27, 8, -11, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -8, -27, 11, -8, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -8, 13, 24, -8, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -8, 53, 7, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -7, -75, 11, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -7, -27, 11, -7, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -7, -6, 7, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -7, 53, 7, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -6, -68, 9, -6, -64, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -6, -28, 11, -3, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -6, -27, 5, -5, -27, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.EAST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, -6, -24, 5, -6, -23, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 5, -6, -15, 5, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -6, -11, 5, -6, -10, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 5, -6, -7, 5, -5, -7, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.EAST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, -6, -6, 11, -3, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -6, -5, 36, -6, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -6, 53, 7, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -5, -5, 36, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -5, 32, 10, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, -63, 6, -4, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, -5, 35, -4, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, 31, 9, -4, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, -63, 5, -3, -62, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, -3, 0, 5, -1, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 1, 6, -3, 2, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 31, 9, -3, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -27, 11, -2, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -15, 6, -1, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -14, 11, -2, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -6, 8, -2, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 1, 6, -2, 2, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 31, 10, -2, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -55, 6, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -14, 9, -1, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -9, 7, -1, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, 1, 6, -1, 2, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, -15, 6, 0, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, -9, 7, 0, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 0, 5, 1, 0, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 1, 6, 0, 2, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 5, 0, 6, 6, 0, 6, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 0, 24, 18, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 27, 5, 0, 29, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 5, 1, -53, 5, 4, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -15, 6, 2, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -9, 5, 4, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -1, 5, 3, -1, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 1, 5, 3, 1, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 7, 6, 1, 7, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 1, 8, 6, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 24, 7, 3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 2, -41, 5, 2, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 2, -40, 5, 5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 2, 8, 6, 2, 8, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 2, 9, 12, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 3, -34, 5, 3, -31, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 3, -15, 6, 4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 3, 9, 7, 3, 9, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 3, 10, 12, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -42, 5, 5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -30, 13, 4, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -17, 5, 4, -16, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -14, 9, 4, -10, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 4, -1, 5, 4, -1, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, 10, 7, 4, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 4, 11, 7, 4, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, 29, 5, 4, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 5, -55, 5, 5, -54, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));

    }
    
    public static void generatePart15()
    {
        structure.fillWithBlocks(world, start, 5, 5, -50, 5, 7, -50, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 5, 5, -43, 5, 5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, -26, 5, 5, -22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -43, 5, 9, -43, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -42, 5, 7, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -40, 5, 7, -40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 5, 6, -39, 5, 6, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -31, 5, 9, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -27, 6, 7, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 5, 6, -21, 6, 7, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 5, 6, 24, 13, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 7, -39, 5, 7, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 8, -42, 5, 9, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 8, -27, 8, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 8, -21, 8, 9, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 9, 14, 6, 9, 18, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 9, 22, 6, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 10, 19, 5, 10, 21, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 11, 19, 5, 11, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 12, -26, 8, 12, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 12, 19, 5, 12, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, -13, 69, 7, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, -54, 6, -12, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, -53, 6, -12, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, -19, 14, -12, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, 57, 14, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, 66, 6, -8, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, 67, 7, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, 69, 6, -9, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -12, 73, 9, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, -68, 13, -11, -61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, -60, 6, -11, -38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, -37, 9, -11, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, -33, 6, -11, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, -7, 27, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, 44, 19, -11, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -8, -68, 9, -8, -65, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -8, 56, 18, -8, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -7, -63, 7, -7, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -7, 56, 14, -7, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -6, -70, 7, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -6, -63, 7, -6, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -6, -50, 17, -6, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -6, -27, 7, -5, -27, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.SOUTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 6, -6, -25, 6, -6, -25, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, -6, -24, 6, -6, -23, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 6, -6, -22, 7, -6, -22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, -6, -19, 6, 0, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -6, -15, 6, 0, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -6, -12, 6, -6, -12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, -6, -11, 6, -6, -10, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 6, -6, -9, 7, -6, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, -6, -7, 7, -5, -7, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.NORTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 6, -5, -63, 7, -5, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, -63, 7, -3, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, -50, 16, -3, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, -2, 6, -3, 2, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, -63, 6, -2, -62, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 6, -2, -18, 7, -2, -17, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, -2, 6, -2, 2, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -52, 6, 0, -52, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -50, 7, -1, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -48, 6, 0, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -46, 9, -1, -43, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -42, 6, -1, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -21, 6, 0, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -18, 6, -1, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -17, 6, 0, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -2, 6, -1, 2, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, -50, 6, 0, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, -43, 6, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, -2, 6, 0, 2, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 6, 1, -64, 7, 2, -64, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 6, 1, -56, 7, 2, -56, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 6, 1, -53, 6, 4, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -52, 6, 4, -52, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -50, 6, 1, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -43, 6, 4, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -38, 6, 3, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -20, 6, 4, -20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -19, 6, 4, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -17, 6, 4, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -16, 6, 4, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -9, 6, 2, -9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 6, 1, -7, 6, 2, -7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 6, 1, 0, 6, 3, 0, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 31, 7, 2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 2, -51, 6, 3, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 2, -18, 6, 3, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, -64, 8, 4, -64, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, -31, 14, 3, -31, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 3, -9, 9, 4, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, -7, 10, 3, -7, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -57, 8, 4, -57, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 4, -51, 6, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -48, 12, 4, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -38, 6, 5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -37, 11, 4, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -31, 11, 5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -18, 7, 4, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -8, 10, 4, -8, Blocks.MAGENTA_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 5, -43, 11, 5, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 5, -20, 6, 5, -16, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 6, 5, -9, 8, 5, -9, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 6, 5, 3, 6, 5, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 5, 27, 6, 6, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 6, 6, -43, 10, 9, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 6, -38, 6, 7, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 6, -31, 7, 7, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 7, -35, 6, 7, -33, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 7, 16, 6, 7, 18, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 8, -38, 6, 8, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 8, -35, 6, 8, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 8, -31, 13, 9, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 8, 16, 6, 8, 18, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 6, 8, 19, 6, 8, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 9, -42, 10, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 9, 19, 6, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 10, 19, 6, 10, 21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 7, -14, -84, 10, -14, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -14, -80, 7, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -14, 71, 8, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -13, 71, 18, -13, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -13, 72, 8, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, -54, 8, -12, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, -52, 7, -12, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, -44, 22, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, -4, 8, -12, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, -1, 18, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, 13, 7, -11, 14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, 50, 10, -12, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, 55, 7, -9, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, 56, 18, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, 69, 8, -12, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -12, 71, 12, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, -82, 20, -11, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, -60, 7, -11, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, -59, 7, -11, -39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, -38, 12, -11, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, -32, 12, -11, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, -8, 27, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, 43, 19, -11, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, 65, 11, -11, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, 68, 13, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -10, -81, 27, -10, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -9, -80, 26, -9, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, -51, 30, -8, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -7, -51, 7, -5, -51, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -6, -25, 7, -6, -22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, -6, -12, 7, -6, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, -6, 61, 14, -6, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -5, 39, 7, -4, 39, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 7, -4, -63, 8, -4, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, -51, 7, -3, -51, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.SOUTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, -4, -19, 9, -4, -19, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 7, -4, -15, 9, -4, -15, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 7, -3, -19, 10, -3, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, -15, 10, -3, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, -5, 10, -3, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, -1, 7, -1, 1, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 2, 30, -3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, -63, 8, -2, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, -53, 7, -2, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, -19, 11, -2, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, -2, 7, -2, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 2, 31, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -61, 8, -1, -61, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 7, -1, -55, 8, -1, -52, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -48, 13, -1, -42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -41, 8, 0, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -40, 11, -1, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -35, 35, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -21, 12, -1, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -2, 7, -1, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, 2, 7, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, 19, 7, -1, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, 24, 7, -1, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, 25, 7, -1, 30, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, -49, 13, 0, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, -2, 7, 0, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, -1, 7, 0, 1, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 7, 1, -49, 13, 3, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, -9, 7, 4, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 2, 7, 4, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 3, 7, 2, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 5, 7, 2, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 7, 1, 7, 7, 4, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 8, 7, 4, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 9, 12, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 2, -41, 8, 3, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 3, -52, 8, 3, -50, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 7, 3, 3, 7, 4, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -53, 8, 4, -50, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 7, 4, -49, 12, 4, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -41, 10, 4, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -21, 12, 4, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -15, 9, 4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, 14, 11, 4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, 19, 7, 4, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, 26, 7, 4, 30, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 5, -21, 9, 5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 5, -15, 9, 5, -15, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 7, 5, 3, 7, 5, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 5, 14, 7, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 6, -27, 8, 7, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 6, -21, 8, 7, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 6, 13, 7, 9, 13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 6, 14, 7, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 7, -38, 13, 8, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 9, -25, 7, 9, -25, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, 9, -24, 7, 9, -22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, 9, 21, 9, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, 10, -24, 7, 10, -22, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 8, -14, -80, 8, -9, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -14, -79, 28, -14, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -13, -83, 11, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -13, 69, 10, -13, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, -83, 15, -12, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, -52, 8, -12, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, -51, 8, -12, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, -2, 20, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, 13, 11, -9, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, 14, 32, -12, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, 48, 9, -12, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -12, 55, 18, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -11, -60, 9, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -11, -58, 9, -11, -39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -11, -9, 27, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -11, 60, 9, -11, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -11, 62, 8, -7, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -11, 63, 10, -11, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -8, 53, 10, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -7, -68, 11, -7, -65, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -7, -63, 8, -6, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -7, -51, 27, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -7, -6, 10, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -7, 53, 10, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -6, -70, 9, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -6, -51, 17, -6, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -6, -27, 8, -5, -27, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, -6, -7, 8, -5, -7, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, -6, 27, 10, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -5, -63, 9, -5, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -5, -61, 8, -5, -60, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.WEST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, -5, -51, 17, -5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -5, 27, 10, -5, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 26, 9, -4, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, -63, 9, -3, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, -61, 8, -3, -60, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.WEST).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, -3, -51, 16, -3, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, -1, 34, -3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 26, 9, -3, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, -61, 8, -2, -60, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.WEST).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, -2, -59, 8, -2, -57, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, -2, -51, 17, -2, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, -2, 36, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 27, 10, -2, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -60, 8, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -51, 10, -1, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -8, 13, -1, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -1, 10, -1, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 3, 8, -1, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 8, 13, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, -1, 8, 0, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 8, 12, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 25, 8, 0, 28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 30, 8, 0, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, -64, 8, 4, -64, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, -56, 8, 4, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 2, 8, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 8, 8, 4, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 18, 8, 1, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 27, 8, 2, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 8, 1, 28, 8, 4, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 30, 8, 4, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 31, 8, 4, 31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 2, -9, 9, 3, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 2, 18, 8, 2, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 2, 19, 8, 3, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 2, 24, 8, 2, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 2, 29, 8, 3, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 3, -53, 8, 3, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 8, 3, 9, 12, 3, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 3, 24, 14, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 3, 25, 8, 3, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 4, 3, 8, 4, 4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, 4, 5, 8, 4, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, 4, 9, 11, 4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 4, 21, 10, 4, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 4, 26, 8, 4, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 5, -49, 13, 5, -49, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 8, 5, -38, 14, 5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 5, 2, 8, 5, 2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 8, 5, 9, 8, 5, 10, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 8, 5, 20, 14, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 5, 26, 8, 5, 30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 8, 6, -38, 13, 8, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 6, -31, 9, 7, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 8, 6, 20, 8, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 9, -25, 8, 9, -22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 8, 10, -25, 8, 10, -22, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 11, -25, 8, 11, -22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 8, 12, -24, 8, 12, -23, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, -14, -80, 26, -14, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -14, 71, 11, -14, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -14, 78, 15, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -13, 72, 12, -13, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -13, 73, 13, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -12, -54, 12, -12, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -12, -50, 9, -12, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -12, -4, 9, -12, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -12, 54, 18, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -12, 69, 10, -12, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -11, 27, 12, -8, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -11, 42, 19, -11, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -11, 62, 11, -11, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -7, -63, 9, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -6, -63, 9, -6, -57, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -6, -56, 17, -6, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -5, -61, 11, -5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -5, 39, 10, -5, 39, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 9, -4, -63, 10, -4, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -61, 9, -3, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -56, 9, -3, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -55, 9, -4, -52, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -51, 16, -4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, -55, 16, -3, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, -63, 9, 0, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, -55, 17, -2, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, -6, 41, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -55, 15, -1, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -41, 11, -1, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -9, 12, -1, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 3, 21, -1, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 7, 21, -1, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, -50, 11, 0, -50, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 9, 0, -9, 12, 0, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 2, 10, 0, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 37, 10, 0, 37, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 9, 0, 38, 10, 0, 38, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 9, 1, -64, 9, 4, -64, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, -63, 9, 4, -60, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, -59, 9, 2, -58, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 9, 1, -57, 9, 4, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, -56, 9, 4, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, -9, 9, 4, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, 2, 9, 2, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 9, 1, 8, 11, 2, 8, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, 18, 10, 1, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, 19, 13, 1, 23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, 24, 10, 2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 2, 18, 14, 2, 23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 3, -59, 9, 4, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 3, -55, 9, 3, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 3, -54, 9, 3, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 9, 3, -51, 9, 3, -50, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 9, 3, 2, 12, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 3, 8, 11, 3, 8, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 9, 3, 19, 14, 3, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 4, -52, 9, 4, -50, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 9, 4, 3, 10, 4, 4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 9, 4, 5, 9, 4, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 9, 4, 7, 13, 4, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 9, 4, 8, 12, 4, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 4, 25, 9, 4, 31, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 5, -41, 9, 5, -40, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 9, 5, -26, 9, 5, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 5, -23, 9, 5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 5, 9, 10, 5, 9, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 9, 5, 10, 10, 5, 10, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 9, 5, 23, 10, 6, 23, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.NORTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 9, 6, -27, 9, 9, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 6, -26, 9, 7, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 6, -23, 9, 7, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 6, -21, 9, 9, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 6, 20, 9, 7, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 9, 7, -24, 9, 9, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 8, -26, 9, 9, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 8, 20, 13, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 10, -26, 9, 10, -22, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 10, -13, -84, 14, -13, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -12, -50, 10, -12, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -12, -49, 10, -12, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -12, -45, 26, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -12, -3, 20, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -12, 48, 31, -12, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -12, 49, 12, -12, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -11, -60, 12, -11, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -11, -57, 10, -11, -39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -11, 41, 19, -11, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -11, 60, 10, -6, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -11, 61, 13, -11, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -8, -68, 13, -8, -65, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -7, -64, 12, -7, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -7, -61, 10, -7, -57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -7, -56, 11, -6, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -7, -55, 26, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -7, 39, 10, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -6, -70, 10, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -6, -68, 16, -6, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -6, -61, 10, -6, -57, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -6, -19, 10, -3, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -6, -15, 10, -3, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -5, -63, 11, -5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, -61, 10, -2, -57, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, -56, 10, -1, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, -55, 16, -4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, 27, 10, -3, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, 34, 10, -1, 38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, -63, 11, -3, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 26, 10, -3, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, -64, 10, -2, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -64, 10, -1, -64, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -63, 10, -1, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 4, 12, -1, 4, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 10, -1, 5, 12, -1, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 10, -1, 6, 12, -1, 6, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 10, 0, -64, 10, 0, -64, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 10, 0, -39, 10, 0, -38, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 10, 0, -7, 10, 2, -7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 0, -2, 10, 2, -2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 0, 26, 10, 0, 27, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 10, 0, 31, 10, 2, 31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 0, 35, 10, 4, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 1, -50, 12, 1, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 10, 1, -9, 10, 4, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, 2, 10, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, 36, 10, 4, 36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 3, -55, 10, 3, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 10, 3, -54, 10, 3, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 3, -2, 11, 3, -1, Blocks.BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 3, 25, 10, 3, 31, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 4, -62, 11, 4, -60, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 10, 4, -55, 10, 4, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 4, -14, 10, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 4, 1, 12, 4, 1, Blocks.BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 4, 6, 11, 4, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 10, 5, -55, 10, 5, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 5, -41, 10, 5, -40, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 10, 5, -37, 10, 5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 5, -33, 10, 5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 5, -13, 10, 5, -10, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 10, 6, -37, 10, 7, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 6, -33, 10, 8, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 6, 20, 11, 7, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 6, 26, 10, 6, 26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 6, 27, 10, 6, 27, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 8, -37, 10, 8, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 8, -26, 11, 8, -23, Blocks.RED_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 9, 21, 12, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 10, 10, 10, 10, 10, 10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, -14, -84, 14, -14, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -13, 69, 13, -13, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, -50, 12, -12, -49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, -48, 11, -10, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, -28, 75, -12, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, -27, 13, -12, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, -21, 12, -11, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, -20, 18, -12, -12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, -4, 20, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, 53, 18, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -12, 69, 11, -12, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -11, -57, 11, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -11, -56, 11, -11, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -11, -39, 17, -11, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -11, 60, 14, -11, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -8, 39, 12, -8, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -8, 41, 25, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -7, -61, 13, -7, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -7, -58, 11, -5, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -7, -6, 13, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -7, 39, 12, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -7, 41, 25, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, -61, 17, -6, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, -21, 11, -5, -20, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, -19, 12, -5, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, -15, 11, -6, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, -14, 11, -5, -13, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, 27, 16, -6, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, 34, 11, -5, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, 41, 25, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -5, -15, 11, -5, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -5, 29, 11, -4, 30, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.EAST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 11, -4, -64, 11, -1, -64, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -63, 11, -2, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -56, 11, -1, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -19, 12, -3, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -15, 11, -4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, 26, 16, -3, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, 34, 11, -3, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, 40, 11, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -15, 11, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -5, 41, -3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 34, 11, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -63, 11, -1, -56, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 2, 11, -1, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, -61, 11, 0, -56, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 11, 0, -55, 11, 3, -55, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, -62, 11, 2, -62, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 1, -9, 12, 2, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 18, 17, 1, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 34, 11, 4, 34, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 35, 11, 2, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 37, 11, 2, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 1, 39, 11, 4, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 40, 11, 4, 40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 2, -50, 12, 2, -50, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 11, 2, 2, 12, 3, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 2, 24, 14, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 3, -56, 11, 3, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 11, 3, -9, 14, 3, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 3, 35, 11, 4, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, -57, 11, 4, -57, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 4, -56, 11, 4, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 4, -40, 13, 4, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, -15, 12, 4, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, -12, 12, 4, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, -10, 11, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, -9, 11, 9, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, 0, 12, 4, 1, Blocks.BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, 3, 11, 4, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 11, 4, 21, 13, 4, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 5, -56, 11, 5, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 5, -42, 11, 5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 5, -23, 11, 7, -23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 5, -13, 11, 5, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 5, 9, 11, 5, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 5, 26, 11, 6, 26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 11, 6, -43, 11, 9, -43, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, -42, 11, 9, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, -31, 11, 9, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, -13, 11, 9, -13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, -12, 11, 9, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, -11, 11, 7, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 6, -10, 11, 9, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, 9, 11, 9, 9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, 10, 11, 9, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, 11, 11, 7, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 6, 14, 11, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, 15, 11, 9, 15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, 27, 11, 6, 27, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 7, 26, 11, 7, 26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 8, -11, 11, 9, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 8, 11, 11, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 8, 26, 11, 8, 26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 9, -37, 13, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 11, 10, 10, 11, 10, 10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 11, 10, 24, 12, 10, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 11, 11, 10, 11, 11, 10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, -14, -85, 14, -14, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -14, 71, 14, -14, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -13, -79, 19, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -12, -48, 32, -12, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -12, -8, 12, -12, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -12, -5, 20, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -12, 13, 32, -12, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -12, 69, 15, -12, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -12, 70, 17, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -11, -57, 13, -11, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -11, -55, 12, -11, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -11, 65, 20, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -8, -79, 19, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -8, -64, 16, -8, -60, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -8, -59, 23, -8, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -8, -8, 12, -8, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -7, -75, 18, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -7, -68, 18, -7, -60, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -7, -58, 16, -7, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -7, -27, 17, -7, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -7, -8, 12, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, -71, 12, -6, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, -28, 12, -6, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, -27, 12, -3, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, -15, 12, -3, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, -6, 44, -6, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, 34, 17, -6, 39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, 40, 27, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -5, -59, 17, -5, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -5, -6, 44, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -5, 34, 13, -5, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -5, 40, 17, -5, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -58, 16, -4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -28, 12, -3, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -6, 43, -4, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 34, 13, -3, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 40, 16, -3, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, -57, 16, -3, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, -56, 17, -2, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, -26, 14, -2, -24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, -23, 12, -2, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, -18, 12, -2, -17, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, -2, -16, 12, -2, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, -9, 12, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 34, 17, 0, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 40, 17, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, -41, 28, 0, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, -40, 13, -1, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 2, 13, 0, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, -39, 12, 0, -38, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 12, 0, -23, 12, 0, -20, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 12, 0, -19, 12, 0, -14, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, -10, 12, 5, -10, Blocks.LADDER.getDefaultState().with(LadderBlock.FACING, Direction.NORTH).with(LadderBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 0, -8, 12, 2, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 12, 0, 26, 12, 6, 26, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, -41, 13, 2, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 2, 12, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 8, 12, 4, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 34, 12, 4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 40, 12, 4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 3, -56, 12, 3, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 3, -41, 14, 3, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 3, -8, 14, 3, -8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 12, 4, -41, 34, 4, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, -31, 14, 4, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, -13, 14, 4, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, -9, 14, 4, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, -2, 12, 4, 1, Blocks.BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, 3, 12, 4, 3, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 4, 5, 13, 4, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 4, 9, 17, 5, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, 10, 16, 4, 14, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, 15, 17, 4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, 35, 16, 4, 35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 4, 36, 13, 4, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 4, 37, 14, 4, 39, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 5, -13, 15, 5, -13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 5, -9, 15, 5, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 5, 15, 17, 5, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 5, 25, 12, 6, 25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 5, 27, 12, 6, 27, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 6, -13, 14, 8, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 6, -9, 12, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 6, 9, 16, 9, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 6, 15, 12, 9, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 6, 20, 12, 7, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 12, 7, -31, 13, 8, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 7, 25, 12, 7, 25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 8, 25, 12, 8, 25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 9, -38, 13, 9, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 9, -13, 14, 9, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 9, -12, 13, 9, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 9, 11, 15, 9, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 12, 10, 8, 12, 10, 8, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 10, 9, 12, 10, 9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 10, 20, 12, 11, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 12, 11, 9, 12, 11, 9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 13, -13, 72, 17, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -12, -54, 36, -12, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -12, -21, 21, -12, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -12, -7, 20, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -12, 49, 13, -12, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -12, 50, 13, -11, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -12, 52, 18, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -12, 76, 14, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, -83, 22, -11, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, -60, 18, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, -54, 13, -11, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, -32, 28, -11, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, -31, 24, -11, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, -19, 23, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, 18, 15, -11, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, 24, 14, -11, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, 26, 13, -7, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, 27, 20, -11, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -11, 40, 19, -11, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -10, -82, 21, -10, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -8, -8, 15, -7, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -8, -7, 52, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -8, 39, 14, -8, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -7, -7, 16, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -7, 39, 14, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -6, -72, 16, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -6, -28, 14, -6, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -6, -26, 14, -6, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -6, -19, 14, -6, -19, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -6, -7, 46, -6, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -5, -60, 15, -5, -60, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -5, -27, 91, -2, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -5, -26, 14, -5, -21, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -5, -20, 14, -5, -20, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -5, -7, 46, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -5, 27, 14, -5, 27, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 13, -5, 28, 14, -5, 28, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 13, -4, -59, 15, -4, -59, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -4, -28, 14, -4, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, -26, 14, -4, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, -21, 14, -4, -21, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -4, -7, 45, -4, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, -58, 15, -3, -58, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -3, -28, 14, -3, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, -26, 14, -3, -23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, -22, 14, -3, -22, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -3, -8, 46, -3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, -57, 15, -2, -57, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -2, -23, 14, -2, -23, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -2, -16, 14, -2, -16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, -2, -15, 14, -2, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, -9, 13, -1, -9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, -8, 47, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, -56, 15, -1, -56, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -1, -34, 14, -1, -25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, -24, 14, -1, -24, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -1, -19, 14, -1, -19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, -1, -18, 14, -1, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, -1, 13, -1, -1, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 0, 13, 0, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, -19, 14, 0, -19, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 13, 0, -5, 13, 0, -2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 8, 14, 0, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 9, 13, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, -5, 13, 4, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, -4, 13, 4, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, -3, 13, 2, -3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 13, 1, -2, 13, 4, -2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 0, 13, 2, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 2, 13, 4, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 8, 13, 4, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 9, 13, 2, 10, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 11, 17, 1, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 34, 13, 2, 34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 13, 1, 40, 13, 2, 40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 13, 2, -21, 13, 3, -21, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, 2, -9, 14, 3, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 2, -1, 13, 3, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 2, 11, 19, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 3, -3, 13, 4, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 3, 9, 17, 5, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 3, 11, 19, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 3, 18, 17, 3, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 3, 34, 16, 4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 3, 40, 16, 4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, -49, 14, 4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, -48, 13, 4, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, -21, 15, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, 1, 13, 4, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, 3, 13, 4, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, 5, -46, 15, 5, -46, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 13, 5, -31, 14, 5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 5, -3, 13, 5, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 13, 5, 1, 13, 5, 2, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, 5, 26, 13, 6, 26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 13, 6, -31, 13, 9, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 6, -9, 13, 7, -9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 13, 6, 15, 14, 7, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 13, 6, 20, 13, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 6, 25, 13, 6, 25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 13, 8, -9, 14, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 8, 15, 16, 9, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 9, -10, 14, 9, -10, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, 9, 10, 16, 9, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, 9, 21, 13, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 13, 10, 20, 13, 11, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 13, 12, -16, 13, 13, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 13, 14, -15, 13, 14, -15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 14, -12, -27, 74, -12, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -12, -26, 15, -12, -24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -12, -23, 14, -9, -23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -12, -22, 23, -12, -13, Blocks.STONE.getDefaultState());

    }
    
    public static void generatePart16()
    {
        structure.fillWithBlocks(world, start, 14, -12, -8, 20, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -12, 12, 32, -12, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -12, 49, 19, -12, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -11, -68, 14, -11, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -11, -53, 14, -11, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -11, 26, 20, -11, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -11, 74, 19, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -8, -68, 19, -8, -63, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -7, -59, 17, -5, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -6, -73, 14, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -3, 34, 17, -3, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -2, -9, 49, -2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -1, -48, 27, -1, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -1, -9, 18, -1, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -1, -4, 21, -1, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -1, 9, 15, -1, 10, Blocks.GLOWSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -1, 11, 21, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -1, 19, 18, -1, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, -1, 31, 17, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, -49, 16, 2, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, -48, 16, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, -9, 15, 0, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, -8, 14, 2, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 14, 0, -5, 33, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, 9, 15, 0, 10, Blocks.WHITE_CARPET.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, 11, 21, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, 19, 18, 0, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 0, 28, 14, 2, 28, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 14, 1, -48, 14, 3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 1, -41, 14, 1, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 1, -40, 14, 3, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 1, -9, 14, 4, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 1, -5, 15, 2, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 1, 34, 14, 4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 1, 37, 14, 3, 37, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 1, 40, 14, 4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 2, -41, 14, 3, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 2, 10, 17, 2, 10, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 14, 3, -49, 15, 3, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 3, -34, 14, 3, -31, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 3, -5, 18, 4, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 3, 2, 14, 5, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 3, 10, 16, 3, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 4, -46, 17, 4, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 4, -34, 14, 5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 4, -30, 15, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 4, -8, 14, 4, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 14, 4, -4, 14, 4, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 4, 1, 18, 4, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 4, 21, 14, 4, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 4, 23, 15, 4, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 4, 36, 15, 4, 37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 5, -37, 14, 5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 5, -8, 14, 5, -6, Blocks.BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 5, 11, 14, 5, 13, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 5, 16, 15, 5, 16, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 14, 5, 23, 14, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, -38, 14, 9, -38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, -37, 14, 7, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, -35, 14, 7, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 14, 6, -33, 14, 7, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, -31, 14, 9, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, -9, 14, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 2, 14, 9, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 3, 14, 9, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 4, 14, 7, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 14, 6, 7, 14, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 8, 14, 9, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 20, 14, 9, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 21, 14, 9, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 23, 14, 9, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 24, 14, 9, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 7, 22, 14, 8, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 8, -37, 14, 9, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 8, 4, 14, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 9, -11, 14, 9, -10, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 9, 22, 14, 9, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 10, 20, 14, 10, 20, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 10, 21, 14, 11, 21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 14, 10, 22, 14, 11, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 14, 12, -16, 14, 12, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 14, 12, -14, 15, 13, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 14, 13, -16, 14, 13, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 14, 14, -16, 14, 14, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 15, -14, -85, 17, -14, -83, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -14, -82, 15, -14, -82, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -14, -81, 15, -10, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -14, 71, 17, -14, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -13, -84, 18, -13, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -13, -80, 16, -12, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -12, -84, 21, -12, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -12, -23, 25, -12, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -12, -10, 20, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -11, -68, 94, -9, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -11, -67, 16, -11, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -11, -52, 15, -11, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -11, -40, 23, -11, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -11, 24, 22, -11, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -11, 60, 15, -11, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -11, 61, 15, -11, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -8, -26, 20, -8, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -8, -20, 15, -7, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -8, 39, 16, -8, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -7, -26, 17, -7, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -7, 33, 17, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -7, 56, 22, -7, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -6, -28, 63, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -5, -26, 62, -5, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -5, 34, 17, -5, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -4, -28, 60, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -4, 34, 17, -3, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -3, -28, 60, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -2, -26, 58, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -1, -34, 35, -1, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, -1, 8, 15, -1, 8, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 0, -34, 35, 0, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 0, 8, 17, 0, 8, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 0, 25, 18, 0, 28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 0, 29, 17, 0, 29, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 15, 1, -48, 15, 1, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 1, -35, 15, 1, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 1, -9, 15, 9, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 1, 25, 17, 1, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 1, 28, 17, 1, 28, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 15, 1, 34, 15, 2, 34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 15, 1, 40, 15, 2, 40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 15, 2, -48, 15, 2, -47, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 15, 2, -46, 26, 2, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 2, -34, 15, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 2, 18, 17, 2, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 2, 27, 17, 2, 27, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 15, 3, -46, 26, 3, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 3, -8, 15, 3, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 15, 3, 2, 20, 5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 3, 8, 16, 3, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 3, 25, 17, 3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 3, 26, 17, 3, 26, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 15, 4, -8, 15, 4, -6, Blocks.BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 4, -4, 18, 4, -4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 4, -3, 17, 4, -1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 15, 4, 0, 17, 4, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 4, 8, 16, 4, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 4, 21, 18, 4, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 4, 25, 17, 4, 25, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 15, 4, 38, 15, 4, 39, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 5, -12, 15, 5, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 5, -5, 17, 5, -5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 15, 5, -1, 16, 5, -1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 15, 5, 0, 17, 5, 0, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 5, 8, 16, 5, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 5, 38, 15, 7, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 15, 5, 39, 15, 7, 39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 15, 6, -13, 15, 9, -13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 6, -12, 15, 9, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 6, -11, 15, 7, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 15, 6, -10, 15, 9, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 6, 0, 17, 6, 0, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 15, 6, 2, 15, 9, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 6, 8, 16, 6, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 6, 15, 16, 7, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 7, 8, 16, 7, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 8, -11, 15, 9, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 8, 8, 16, 8, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 8, 38, 16, 8, 39, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 15, 9, 3, 15, 9, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 9, 8, 16, 9, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 15, 10, -13, 15, 10, -13, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 10, 21, 17, 10, 21, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 10, 23, 17, 10, 23, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 15, 12, -16, 15, 13, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 16, -14, -82, 21, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -12, -26, 29, -12, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -12, -11, 21, -12, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -12, 11, 24, -12, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -12, 69, 21, -12, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, -52, 20, -11, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, -51, 25, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, -41, 17, -10, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 18, 16, -9, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 21, 24, -11, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 35, 18, -11, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 38, 17, -11, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 39, 20, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 60, 17, -11, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 62, 16, -11, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -11, 64, 25, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -8, -20, 68, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -7, -20, 17, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -3, 30, 16, -3, 32, Index.SHELF_OAK.getDefaultState().with(Shelf.FACING, Direction.WEST));
        structure.fillWithBlocks(world, start, 16, -1, -55, 17, -1, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -1, 8, 16, -1, 9, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 16, -1, 10, 19, -1, 10, Blocks.GLOWSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 0, -9, 18, 0, -9, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 16, 0, 10, 19, 0, 10, Blocks.WHITE_CARPET.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 1, -48, 16, 1, -47, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 16, 1, -46, 34, 1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 1, -10, 18, 1, -10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 16, 1, -5, 17, 2, -5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 16, 1, 34, 16, 4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 1, 40, 16, 4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 2, -34, 34, 2, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 2, -11, 18, 2, -11, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 16, 3, -34, 34, 3, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 3, -12, 18, 3, -12, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 16, 4, -34, 18, 4, -14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 4, -13, 18, 4, -13, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 16, 4, 36, 16, 4, 37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 16, 5, -46, 20, 5, -46, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 16, 5, 1, 17, 5, 1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 16, 5, 38, 16, 7, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 16, 6, 2, 18, 7, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 16, 7, 0, 17, 7, 0, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 16, 8, 2, 19, 9, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 9, 3, 16, 9, 6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 16, 9, 7, 19, 9, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 16, 10, -12, 18, 10, -12, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 16, 10, -10, 18, 10, -10, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 16, 10, 3, 16, 10, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 16, 11, 2, 16, 12, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 16, 11, 6, 16, 12, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 16, 13, 2, 18, 13, 4, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 16, 13, 5, 17, 13, 5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 16, 13, 6, 19, 13, 6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 17, -13, -80, 19, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -11, -67, 17, -11, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -11, -66, 17, -11, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -11, 18, 18, -10, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -11, 19, 25, -11, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -11, 62, 17, -11, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -8, -62, 23, -8, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -8, 40, 17, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -7, -58, 17, -5, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -6, -72, 20, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -6, -68, 23, -6, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -6, 27, 23, -6, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -5, -62, 17, -5, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -5, 38, 17, -5, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -4, -62, 17, -1, -62, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -4, -61, 17, -3, -61, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -4, -60, 17, -3, -60, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 17, -4, -59, 17, -3, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -4, -49, 17, -4, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -4, 27, 17, -3, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -4, 38, 17, -3, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -4, 40, 17, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -3, -49, 17, -3, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -2, -61, 17, -2, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -1, -61, 17, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -1, 9, 18, -1, 10, Blocks.GLOWSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, -1, 35, 17, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 0, -55, 20, 0, -55, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 17, 0, -49, 17, 1, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 0, -48, 17, 0, -47, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 17, 0, -46, 35, 0, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 0, 9, 18, 0, 10, Blocks.WHITE_CARPET.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 0, 33, 17, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 1, 34, 17, 4, 34, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 1, 35, 17, 2, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 1, 37, 17, 2, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 17, 1, 39, 17, 4, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 1, 40, 17, 4, 40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 2, 31, 17, 2, 32, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 17, 3, 8, 17, 5, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 3, 35, 17, 4, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 4, 12, 23, 4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 5, -44, 17, 5, -44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 17, 5, 12, 17, 5, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 5, 17, 8, 5, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 17, 6, 8, 19, 8, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 9, 17, 9, 9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 10, 17, 9, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 12, 17, 9, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 13, 17, 7, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 17, 6, 14, 17, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 15, 17, 9, 15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 7, 11, 17, 8, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 8, 13, 17, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 9, 3, 18, 9, 4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 17, 9, 6, 19, 9, 6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 17, 9, 8, 19, 9, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 9, 11, 17, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 10, 2, 18, 10, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 17, 10, 6, 19, 10, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 17, 10, 11, 17, 10, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 18, -14, -85, 20, -14, -83, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -14, 72, 20, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -14, 73, 22, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -13, -85, 18, -13, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -13, 72, 22, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -11, -67, 19, -11, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -11, -65, 18, -11, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -11, -41, 27, -11, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -11, 38, 23, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -11, 60, 31, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -8, 40, 33, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -7, -59, 22, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -7, 33, 24, -5, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -7, 34, 22, -7, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -7, 39, 21, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -6, -61, 22, -6, -50, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -6, -49, 28, -6, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -6, 34, 22, -6, 38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -6, 39, 21, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -6, 61, 23, -6, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -5, -62, 23, -5, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -5, -61, 18, -5, -60, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.EAST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, -5, -49, 28, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -5, 34, 19, -5, 34, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.SOUTH).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, -5, 39, 21, -5, 39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -5, 40, 19, -5, 40, Blocks.COMPOSTER.getDefaultState().with(ComposterBlock.LEVEL, 0));
        structure.fillWithBlocks(world, start, 18, -4, -62, 18, -3, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -4, -49, 26, -3, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -4, -48, 27, -4, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -4, 32, 19, -3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -4, 39, 18, -1, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -3, -59, 18, -3, -57, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, -3, -47, 27, -3, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -2, -62, 22, -2, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -2, -49, 27, -2, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -2, 33, 23, -2, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -2, 41, 23, -2, 41, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, -62, 22, -1, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, -61, 22, -1, -57, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, -1, -56, 20, -1, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, -49, 27, -1, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, 8, 19, -1, 8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, 31, 23, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, 32, 53, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, 34, 18, -1, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, -1, 40, 19, -1, 40, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 0, 8, 18, 0, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 0, 29, 18, 0, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 1, -54, 18, 2, -54, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 18, 1, -5, 19, 2, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 1, 11, 19, 1, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 1, 12, 23, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 1, 19, 18, 3, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 1, 32, 18, 4, 32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 2, 10, 19, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 2, 18, 18, 3, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 3, -54, 18, 3, -50, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 3, 8, 20, 5, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 3, 10, 19, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 4, -46, 19, 4, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 4, -43, 21, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 4, -35, 18, 5, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 4, -3, 18, 4, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, 4, 9, 19, 4, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 4, 10, 19, 4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 4, 19, 18, 4, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 4, 26, 18, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 5, -45, 18, 5, -45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 18, 5, -36, 18, 5, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 5, -31, 18, 5, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 5, 20, 18, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, -45, 18, 6, -45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 18, 6, -36, 18, 9, -36, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, -35, 18, 8, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, -31, 18, 8, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, -28, 18, 9, -28, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, 20, 18, 9, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, 21, 18, 9, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, 22, 18, 7, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 18, 6, 23, 18, 9, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, 24, 18, 9, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 7, -32, 18, 9, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 8, 17, 22, 8, 17, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 8, 22, 18, 9, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 9, -35, 18, 9, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 9, 5, 19, 9, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, 9, 9, 19, 9, 15, Blocks.LIGHT_GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 9, 18, 19, 9, 19, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 13, 5, 18, 13, 6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 19, -13, -84, 22, -13, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -13, 71, 24, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -12, -12, 19, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -12, 55, 20, -12, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -12, 57, 19, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -12, 64, 19, -12, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -12, 65, 19, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -11, -65, 19, -11, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -11, -64, 19, -11, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -11, 18, 24, -11, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -11, 36, 26, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -8, 56, 31, -8, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -7, -75, 24, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -7, -68, 25, -7, -62, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -7, -61, 22, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -4, -62, 21, -3, -62, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 19, -4, 33, 19, -1, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -4, 39, 19, -1, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -1, 19, 23, -1, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -1, 25, 19, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -1, 26, 23, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 19, -1, 34, 20, -1, 35, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 19, -1, 36, 21, -1, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, -1, 37, 20, -1, 38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, 0, -9, 23, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 0, 2, 19, 0, 5, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, 0, 36, 20, 0, 36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 19, 1, -10, 23, 1, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 1, 18, 23, 3, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 1, 25, 19, 3, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 1, 32, 20, 2, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 2, -11, 24, 2, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 3, -12, 25, 3, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 3, 32, 23, 4, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, -54, 20, 4, -49, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, -44, 21, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, -35, 25, 4, -29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, -28, 23, 4, -24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, -23, 19, 4, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, -4, 19, 4, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, 19, 23, 4, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, -36, 33, 5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, -28, 27, 5, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, -23, 19, 5, -21, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, 5, -16, 19, 5, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, -6, 20, 5, -6, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 19, 5, 24, 25, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, -36, 20, 7, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, -28, 21, 8, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, -16, 19, 9, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, -15, 19, 9, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, -14, 19, 7, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 19, 6, -12, 19, 7, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, -10, 19, 7, -10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 19, 6, -9, 19, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, -8, 19, 9, -8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 2, 19, 9, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 20, 19, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 24, 19, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 8, -36, 33, 9, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 8, -14, 19, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 9, -35, 22, 9, -29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, 9, -28, 25, 9, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 9, 3, 19, 9, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, 9, 21, 21, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, 11, 2, 19, 12, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 19, 13, 2, 20, 13, 5, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 20, -13, -79, 30, -9, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -13, 69, 20, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -12, -12, 37, -12, -12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -12, 54, 25, -12, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -12, 60, 20, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -12, 64, 22, -12, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -12, 67, 20, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -11, -67, 23, -11, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -11, -63, 21, -11, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -11, 35, 28, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -11, 44, 22, -11, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -11, 47, 20, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -8, -78, 27, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -8, -68, 25, -8, -63, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -6, 62, 21, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -5, 36, 22, -5, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, -5, 37, 22, -5, 37, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 20, -4, 32, 21, -3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -4, 33, 21, -4, 33, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 20, -4, 39, 20, -3, 39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 20, -3, 33, 21, -3, 33, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, -2, 39, 23, -1, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -1, 8, 30, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -1, 25, 22, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -1, 33, 23, -1, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, -1, 40, 23, -1, 40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 20, -1, 41, 23, -1, 41, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 20, 0, -48, 27, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 0, -4, 20, 2, -4, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 0, 0, 20, 2, 0, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 0, 1, 33, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 0, 39, 21, 0, 39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 20, 0, 40, 24, 0, 40, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 20, 1, -48, 27, 1, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 1, -5, 20, 5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 1, 1, 20, 2, 10, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 1, 11, 26, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 2, -48, 27, 2, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 2, 11, 26, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 3, -48, 27, 3, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 3, -4, 20, 5, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 3, 9, 20, 4, 10, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 3, 11, 26, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, -48, 21, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, -23, 20, 4, -21, Blocks.SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, -20, 23, 4, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, -16, 21, 5, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, -15, 24, 4, -9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, -8, 23, 4, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, 11, 25, 4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 5, -27, 21, 5, -27, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 20, 5, -24, 22, 5, -24, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 5, -22, 20, 5, -22, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 5, -20, 22, 5, -20, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 5, -18, 20, 7, -18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 5, -8, 25, 5, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 5, 9, 20, 7, 9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 6, -16, 21, 7, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, -8, 20, 9, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, -5, 20, 9, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, -4, 20, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, -2, 20, 7, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 6, 0, 20, 9, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 1, 20, 7, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 3, 20, 9, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 4, 20, 7, 4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 6, 5, 20, 9, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 6, 20, 7, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 6, 7, 20, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 8, 20, 9, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 15, 20, 7, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 6, 24, 20, 7, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 20, 7, 20, 25, 8, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 8, -18, 21, 8, -17, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 20, 8, -16, 24, 9, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 8, -7, 20, 8, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 8, -4, 20, 9, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 8, 1, 20, 9, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 8, 4, 20, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 8, 9, 20, 8, 15, Blocks.LIGHT_GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 8, 24, 24, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 9, -15, 20, 9, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 9, -7, 21, 9, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 20, 9, 18, 21, 9, 19, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 9, 20, 21, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 10, -3, 20, 10, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 10, 1, 20, 10, 2, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 10, 4, 20, 10, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 11, 6, 20, 12, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 12, -46, 20, 12, -45, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 13, -45, 20, 13, -45, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 13, -9, 21, 13, -9, Blocks.GREEN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -14, -85, 23, -14, -83, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -14, 72, 26, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -13, -80, 22, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -13, 70, 27, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -12, -4, 26, -12, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -12, 2, 21, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -12, 53, 28, -12, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -12, 61, 21, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -12, 67, 28, -12, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -11, -52, 31, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -11, 33, 31, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -11, 47, 22, -11, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -11, 48, 43, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -6, -72, 22, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -5, -55, 27, -5, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -4, -55, 21, -2, -55, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -4, 39, 21, -1, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -1, -56, 22, -1, -56, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -1, -55, 26, 0, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -1, -54, 21, -1, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, -1, 34, 21, -1, 36, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, -1, 37, 22, -1, 38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 0, -54, 21, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 0, 34, 21, 0, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 21, 1, -55, 21, 4, -55, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 1, -54, 21, 4, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 1, -53, 21, 2, -52, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 21, 1, -51, 21, 2, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 1, -49, 21, 4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 1, -5, 25, 2, -5, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 1, 1, 25, 2, 1, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 1, 2, 32, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 1, 32, 22, 2, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 21, 2, 2, 32, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 3, -53, 21, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 3, 1, 28, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 4, -23, 21, 4, -23, Blocks.SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 4, -21, 22, 4, -21, Blocks.SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 4, 1, 25, 4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 5, -53, 21, 5, -51, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 21, 5, -48, 22, 5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 5, -46, 21, 5, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 5, -23, 21, 5, -23, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 5, -11, 23, 5, -11, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 5, -5, 28, 5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 5, 1, 27, 5, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 5, 20, 26, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, -48, 21, 9, -48, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, -47, 21, 7, -46, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, -45, 21, 7, -44, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 21, 6, -43, 21, 9, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, -42, 21, 9, -42, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, -36, 23, 7, -36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 21, 6, -8, 22, 7, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 21, 6, -5, 25, 9, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, 1, 22, 7, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, 20, 25, 8, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, 24, 24, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 8, -47, 21, 9, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 8, -8, 24, 9, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 8, -7, 22, 8, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 21, 8, 1, 25, 9, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 9, -14, 21, 9, -14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 9, -13, 21, 9, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 9, -4, 21, 9, 0, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 9, 2, 21, 9, 8, Blocks.LIGHT_GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 10, -43, 21, 11, -43, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 21, 12, -44, 21, 13, -44, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 12, -43, 21, 13, -43, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 22, -14, -82, 23, -14, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -14, 71, 28, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -13, 69, 29, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -12, -83, 27, -12, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -12, -11, 22, -12, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -12, -10, 22, -9, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -12, -6, 30, -12, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -12, 3, 22, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -12, 61, 22, -12, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -12, 62, 22, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -11, -63, 22, -11, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -11, -62, 22, -11, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -11, -53, 33, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -11, 32, 33, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -7, 40, 33, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -5, 34, 23, -5, 34, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.SOUTH).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, -4, -62, 22, -3, -62, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -4, -55, 26, -3, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -4, 32, 51, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -4, 33, 22, -1, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -3, 39, 23, -2, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -2, -55, 26, 0, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -1, -54, 25, -1, -50, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -1, -4, 25, -1, 0, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -1, 1, 33, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, -1, 34, 23, -1, 38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 0, -52, 22, 0, -52, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 0, -49, 27, 0, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 0, -4, 25, 0, -4, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 0, 0, 25, 0, 0, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 1, -55, 22, 4, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 1, -49, 22, 4, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 4, -54, 22, 4, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 4, -48, 22, 5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 4, -46, 25, 4, -43, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 4, -42, 24, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 4, -23, 22, 4, -21, Blocks.SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 4, -16, 22, 4, -9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 5, -42, 24, 5, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 5, -41, 23, 5, -41, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 22, 5, 17, 22, 7, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 22, 6, -48, 26, 9, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 6, -42, 22, 9, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 6, -28, 23, 7, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 22, 7, -16, 24, 9, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 8, -39, 27, 8, -39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 8, -28, 25, 9, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 8, -18, 23, 8, -17, Blocks.GREEN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 8, 2, 22, 8, 8, Blocks.LIGHT_GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 9, -47, 23, 9, -43, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 9, -41, 23, 9, -40, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 9, -15, 22, 9, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 9, -12, 23, 9, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 9, -10, 22, 9, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 9, -7, 23, 9, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 22, 9, -4, 25, 9, -4, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 9, -3, 22, 9, -1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 22, 9, 0, 25, 9, 0, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 9, 18, 22, 9, 19, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 9, 20, 23, 9, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 9, 21, 23, 9, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 10, -5, 24, 10, -5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 22, 10, 1, 24, 10, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 22, 10, 20, 23, 10, 20, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 10, 24, 23, 10, 24, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 13, -10, 22, 14, -10, Blocks.GREEN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -13, -84, 26, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -12, -11, 37, -12, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -12, 4, 24, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -12, 61, 24, -12, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -12, 63, 27, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -12, 64, 28, -12, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -11, -82, 27, -11, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -11, -61, 24, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -11, 31, 36, -11, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -11, 45, 23, -11, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -11, 47, 43, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -7, -61, 23, -7, -61, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -7, -59, 26, -7, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -7, -28, 71, -7, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -7, 34, 23, -7, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -7, 39, 33, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -7, 56, 30, -7, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -6, -71, 25, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -6, -61, 23, -6, -61, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -6, -59, 27, -6, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -6, -54, 26, -6, -50, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -6, 34, 23, -6, 38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -6, 39, 33, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -5, -65, 23, -5, -63, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 23, -5, -59, 23, -5, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -5, 39, 24, -5, 39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -4, -62, 23, -1, -62, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -4, -61, 23, -3, -61, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -4, -59, 23, -3, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -4, -58, 23, -3, -58, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 23, -4, -57, 23, -3, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -4, 39, 23, -1, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -3, -60, 23, -3, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -2, -61, 23, -2, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -1, -61, 23, -1, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, -1, 25, 23, -1, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 0, -52, 23, 0, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 0, 25, 23, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 1, -55, 25, 2, -55, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 23, 1, -49, 25, 2, -49, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 23, 1, 25, 23, 1, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 1, 32, 25, 3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 2, 25, 23, 2, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 3, -55, 26, 4, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 3, -49, 26, 4, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 3, 25, 23, 3, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 4, -54, 26, 4, -54, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 4, -53, 23, 4, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 4, -48, 27, 5, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 4, -47, 25, 4, -43, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 4, -23, 29, 4, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 5, -52, 23, 5, -51, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 23, 5, -47, 25, 7, -47, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 5, -23, 23, 5, -21, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 5, -16, 25, 5, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 5, -2, 23, 7, -2, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 6, -42, 23, 7, -42, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 23, 6, -16, 24, 7, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, -8, 24, 7, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, 1, 23, 7, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 23, 8, -42, 26, 9, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 8, -7, 24, 8, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 23, 9, -35, 26, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 9, -31, 23, 9, -29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 9, -15, 24, 9, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 9, -9, 24, 9, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 9, -3, 23, 9, -3, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 23, 9, -1, 24, 9, -1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 23, 10, -47, 23, 10, -47, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 23, 10, -30, 23, 11, -30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 23, 10, -29, 23, 11, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));

    }
    
    public static void generatePart17()
    {
        structure.fillWithBlocks(world, start, 23, 11, -10, 23, 12, -10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 23, 12, -30, 23, 12, -29, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 23, 13, -10, 23, 14, -10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, -14, -85, 26, -14, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -11, -54, 36, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -11, -19, 25, -11, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -11, -17, 25, -11, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -11, 30, 38, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -8, -62, 30, -8, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -8, -55, 27, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -7, -61, 29, -7, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -7, 34, 29, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -6, -68, 35, -6, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -6, 34, 30, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -5, -66, 25, -5, -66, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, -5, 34, 24, -5, 39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -5, 40, 24, -2, 40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, -5, 41, 24, -3, 41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, -4, 33, 24, -1, 33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -4, 34, 24, -3, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -4, 36, 24, -3, 37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, -4, 38, 24, -1, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -4, 39, 24, -1, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -2, -61, 25, -2, -60, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, -2, -59, 25, -2, -59, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, -2, 34, 24, -1, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -1, -62, 26, -1, -59, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 24, -1, 19, 24, 0, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -1, 20, 26, -1, 22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -1, 23, 24, 0, 23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -1, 24, 24, -1, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -1, 25, 24, 0, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -1, 28, 25, -1, 29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 24, -1, 30, 24, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 0, 24, 24, 0, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 0, 35, 24, 0, 37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 1, 18, 24, 1, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 1, 23, 24, 3, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 1, 30, 24, 3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 2, 18, 24, 4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 2, 19, 24, 3, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 4, -53, 26, 4, -53, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 4, -52, 25, 4, -51, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 24, 4, -50, 26, 4, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 4, -28, 27, 4, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 4, -8, 27, 4, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 4, 19, 24, 4, 19, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 4, 20, 24, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 4, 21, 26, 4, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 4, 24, 24, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 4, 25, 24, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 5, -53, 25, 5, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, 5, -50, 25, 5, -50, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, 5, -17, 25, 5, -17, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 24, 5, -6, 25, 5, -6, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 24, 5, 2, 25, 5, 2, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 24, 5, 12, 24, 6, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 5, 15, 24, 6, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 6, -42, 24, 9, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 6, -36, 28, 9, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 6, -28, 27, 8, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 6, -18, 24, 7, -18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 6, 1, 25, 7, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 7, 12, 24, 7, 15, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 8, -18, 24, 8, -17, Blocks.GREEN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 8, 2, 24, 8, 8, Blocks.LIME_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 9, -46, 26, 9, -43, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 9, -41, 25, 9, -40, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 9, -31, 25, 9, -31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 9, -30, 25, 9, -29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 9, -10, 24, 9, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 9, -7, 24, 9, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 24, 9, -3, 24, 9, -1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 24, 9, 20, 26, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 9, 21, 24, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 10, -49, 24, 10, -49, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 24, 10, -48, 24, 10, -48, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 24, 10, -31, 24, 11, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 10, -28, 24, 11, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 11, -48, 24, 11, -48, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 24, 12, -31, 25, 12, -31, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 24, 12, -30, 25, 12, -29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 13, -30, 25, 13, -29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 14, -30, 25, 14, -29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 15, -30, 24, 16, -30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 15, -29, 24, 16, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 24, 17, -30, 25, 17, -29, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 25, -12, -75, 25, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -12, -74, 25, -12, -73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -12, -72, 28, -12, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -12, -68, 25, -12, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -12, 5, 28, -12, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -12, 11, 27, -10, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -12, 49, 27, -12, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -12, 61, 26, -12, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -11, -61, 53, -9, -61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -11, -60, 26, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -11, -31, 36, -11, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -11, 18, 54, -7, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -11, 28, 38, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -8, 33, 29, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -7, -74, 30, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -7, 33, 29, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -6, -72, 28, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -5, 33, 25, -4, 33, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 25, -2, -62, 26, -2, -61, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 25, -1, -63, 27, -1, -61, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 25, -1, 19, 30, -1, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -1, 25, 25, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 25, -1, 33, 28, -1, 36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 25, -1, 37, 26, -1, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 25, -1, 39, 26, -1, 39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 0, -3, 25, 0, 0, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 0, 25, 47, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 0, 33, 28, 0, 36, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 25, 0, 37, 26, 0, 38, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 25, 1, 18, 30, 3, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 1, 25, 30, 3, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, -40, 29, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, -15, 30, 4, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, 19, 30, 4, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, 25, 25, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, 26, 30, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, 32, 41, 4, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 5, -15, 25, 5, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 5, 16, 25, 5, 17, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 25, 5, 26, 25, 5, 29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, -16, 25, 9, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, -15, 25, 7, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, -13, 25, 7, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 25, 6, -10, 25, 7, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, -8, 25, 9, -8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, 24, 25, 8, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, 25, 25, 7, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, 27, 25, 7, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 25, 6, 28, 25, 9, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, 29, 25, 9, 29, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 7, -42, 26, 8, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 8, -27, 25, 8, -24, Blocks.YELLOW_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 8, -15, 25, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 8, -7, 25, 8, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 25, 8, 12, 25, 8, 15, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 8, 25, 25, 8, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 8, 31, 26, 8, 32, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 9, -47, 26, 9, -43, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 9, -3, 25, 9, 0, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 9, 2, 25, 9, 8, Blocks.LIME_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 9, 21, 26, 9, 21, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 9, 22, 26, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 9, 26, 25, 9, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 9, 30, 29, 9, 30, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 10, -49, 25, 10, -49, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 25, 10, -31, 25, 11, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 25, 10, -28, 25, 11, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 25, 15, -30, 25, 16, -30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 25, 15, -29, 25, 16, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 26, -12, -75, 33, -12, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -12, -67, 26, -12, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -12, 52, 36, -12, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -11, -19, 27, -11, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -11, -16, 38, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -11, 19, 26, -11, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -11, 26, 38, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -8, -68, 34, -8, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -7, -68, 35, -7, -56, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -5, -59, 26, -3, -59, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, -5, -54, 26, 0, -54, Blocks.LADDER.getDefaultState().with(LadderBlock.FACING, Direction.WEST).with(LadderBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 26, -5, -52, 26, -4, -52, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 26, -5, -51, 26, -4, -50, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -5, 38, 26, -5, 39, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 26, -3, -52, 26, -3, -50, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 26, -2, -63, 26, -2, -61, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 26, -1, -64, 27, -1, -61, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 26, -1, -53, 26, -1, -50, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -1, -4, 33, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -1, 25, 28, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, -1, 26, 30, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 0, -4, 33, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 1, -55, 26, 4, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 1, -49, 26, 4, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 1, -5, 26, 1, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 1, -4, 26, 2, 0, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 1, 1, 32, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 1, 32, 26, 2, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 26, 2, -5, 26, 2, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 2, 1, 32, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 3, -4, 32, 3, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 3, 32, 31, 3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, -52, 26, 4, -50, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 26, 4, -47, 34, 5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, -46, 29, 4, -43, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, -42, 27, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, -35, 26, 4, -29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, -4, 27, 4, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, 3, 26, 5, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, 6, 35, 4, 6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, 7, 27, 4, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, 12, 26, 5, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, 13, 26, 4, 13, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, 14, 26, 5, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 4, 25, 28, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 5, -52, 26, 5, -51, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 5, -42, 27, 5, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 5, -27, 26, 7, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 5, -4, 27, 5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 5, 7, 27, 5, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 5, 9, 26, 5, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 26, 5, 11, 26, 5, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 5, 19, 26, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 5, 24, 28, 5, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 26, 5, 32, 28, 5, 32, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 26, 6, -42, 26, 9, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, -5, 27, 7, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, -4, 27, 6, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 1, 26, 6, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 3, 26, 9, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 4, 26, 7, 4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 6, 5, 26, 9, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 7, 26, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 8, 26, 9, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 11, 26, 9, 11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 12, 26, 9, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 14, 26, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 15, 26, 7, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 6, 16, 26, 8, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 20, 26, 8, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 29, 26, 9, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 7, -4, 27, 7, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 7, 1, 26, 7, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 7, 6, 26, 8, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 7, 13, 26, 8, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 8, -5, 27, 9, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 8, -4, 27, 8, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 8, 1, 26, 8, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 8, 4, 26, 9, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 8, 15, 26, 9, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, -41, 27, 9, -40, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, -31, 27, 9, -29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, -26, 26, 9, -24, Blocks.YELLOW_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, -4, 27, 9, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, 1, 26, 9, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, 13, 26, 9, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, 18, 26, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, 24, 27, 9, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, 26, 26, 9, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 26, 10, -30, 26, 11, -30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 10, -29, 26, 11, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 10, -5, 27, 10, -5, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 26, 10, -3, 26, 10, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 10, 1, 26, 10, 2, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, -14, -84, 31, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -13, -83, 31, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -13, -78, 27, -13, -76, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -13, -75, 48, -8, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -13, 67, 28, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -12, -67, 44, -9, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -12, -66, 28, -12, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -11, -60, 27, -11, -60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -11, -59, 27, -11, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -11, -55, 40, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -11, -17, 40, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -11, 19, 27, -11, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -11, 20, 27, -11, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -11, 23, 39, -11, 35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -7, -55, 27, -7, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -7, -54, 27, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -6, -54, 28, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -5, -54, 28, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -4, -55, 27, 4, -55, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -4, -54, 27, -4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -4, -49, 27, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -3, -56, 27, -2, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 27, -3, -54, 27, -3, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -2, -54, 27, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, -1, 37, 27, -1, 38, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 0, 19, 28, 0, 19, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 1, -54, 27, 2, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 1, -52, 27, 2, -51, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 27, 1, -50, 27, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 1, -49, 27, 4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 1, -5, 32, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 1, 19, 28, 1, 19, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.SOUTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 27, 1, 32, 27, 3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 2, -5, 32, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 3, -54, 27, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 4, -35, 27, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 4, -31, 28, 4, -30, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 4, -29, 27, 5, -24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 4, 3, 30, 4, 6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 4, 12, 33, 4, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 5, -39, 27, 7, -39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 27, 5, -22, 27, 7, -22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 27, 5, -19, 27, 7, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 27, 5, 9, 29, 5, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, -48, 27, 9, -48, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, -47, 30, 8, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, -42, 27, 8, -42, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, -35, 27, 8, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, -29, 27, 8, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, -24, 27, 9, -24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, 1, 27, 8, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, 2, 27, 8, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, 7, 27, 8, 7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, 8, 28, 7, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, 9, 27, 6, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 27, 6, 11, 29, 8, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 7, -31, 27, 7, -30, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 27, 7, 17, 27, 7, 19, Index.SHELF_SPRUCE.getDefaultState().with(Shelf.FACING, Direction.EAST));
        structure.fillWithBlocks(world, start, 27, 7, 29, 28, 8, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 8, -31, 27, 8, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 8, -23, 28, 8, -19, Blocks.YELLOW_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 8, -6, 30, 8, -6, Blocks.LIME_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 8, 8, 31, 9, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 8, 31, 28, 8, 32, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 9, -46, 28, 9, -42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 9, -35, 30, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 9, -28, 27, 9, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 9, 3, 29, 9, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 9, 11, 31, 9, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 9, 12, 27, 9, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 9, 17, 30, 9, 20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 9, 21, 28, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 9, 26, 28, 9, 26, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 9, 27, 28, 9, 27, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 9, 28, 28, 9, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 9, 29, 28, 9, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 10, -48, 27, 10, -48, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 10, -42, 27, 10, -42, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 13, 21, 27, 14, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 27, 13, 22, 27, 13, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 28, -13, -78, 31, -13, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -12, -82, 31, -12, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -12, 11, 35, -12, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -12, 49, 29, -12, 50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -12, 51, 38, -12, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -12, 63, 28, -8, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -11, -81, 31, -11, -59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -11, -57, 44, -11, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -11, -40, 28, -11, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -11, -19, 43, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -11, -3, 29, -11, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -11, -1, 34, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -8, -77, 33, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -8, -55, 34, -6, -55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -8, -54, 41, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -7, -54, 28, -5, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -7, -47, 57, -7, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -5, -64, 28, -3, -64, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 28, -4, -54, 28, -1, -54, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -4, -53, 28, -1, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -4, -52, 28, -4, -50, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 28, -4, -49, 28, -1, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -4, -48, 28, -1, -48, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -4, -47, 28, -2, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -4, -38, 28, -4, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -3, -52, 28, -3, -50, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 28, -3, -38, 28, -3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -2, -56, 29, -2, -55, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -2, -52, 28, -1, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -2, -38, 28, -2, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -1, -64, 28, -1, -63, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 28, -1, -47, 28, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, -1, 37, 28, -1, 37, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 0, -53, 28, 0, -53, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 28, 1, -53, 28, 1, -53, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 28, 1, 32, 28, 2, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 28, 4, -42, 33, 4, -42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 4, -35, 32, 4, -30, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 4, -29, 32, 5, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 4, -28, 31, 4, -25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 4, -24, 30, 4, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 4, -5, 28, 5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 4, -4, 32, 4, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 4, 8, 28, 4, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 5, -41, 34, 5, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 5, -34, 28, 6, -33, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 5, -28, 28, 5, -26, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 5, -24, 30, 5, -24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 5, -23, 29, 5, -23, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 28, 5, 8, 28, 5, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 5, 29, 29, 5, 29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 6, -41, 28, 9, -41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 6, -29, 35, 8, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 6, -28, 28, 6, -26, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 28, 6, -24, 29, 7, -24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 6, -5, 28, 9, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 6, 9, 29, 6, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 6, 29, 28, 9, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 7, 9, 28, 7, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 28, 8, -24, 29, 9, -24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 9, -31, 29, 9, -26, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 28, 9, -4, 29, 9, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 28, 9, 1, 29, 9, 2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 9, 12, 29, 9, 12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 28, 9, 13, 31, 9, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 28, 9, 24, 28, 9, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 10, -45, 28, 10, -43, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 28, 10, 11, 29, 10, 11, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 28, 10, 12, 29, 10, 12, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 10, 13, 29, 10, 13, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 28, 11, 12, 29, 11, 12, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 28, 12, 12, 29, 12, 12, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 28, 13, -5, 28, 14, -5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 28, 13, -4, 28, 14, -4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 28, 13, -3, 28, 14, -3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 28, 13, 20, 28, 14, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 28, 13, 21, 28, 14, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 28, 13, 22, 28, 14, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 28, 15, 21, 28, 15, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 28, 16, 21, 28, 16, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 29, -14, -79, 30, -14, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -14, 59, 39, -14, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -14, 72, 34, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -13, 67, 30, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -12, -66, 44, -9, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -12, -65, 30, -12, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -12, 6, 29, -8, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -12, 63, 29, -12, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -12, 65, 34, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -11, -58, 47, -11, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -11, -39, 29, -11, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -11, -32, 48, -11, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -11, 74, 64, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -9, 71, 86, -9, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -7, -54, 29, -5, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -7, -53, 33, -7, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -7, -48, 29, -5, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -7, 64, 92, -7, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -6, -71, 29, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -6, -53, 33, -6, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -6, -47, 34, -6, -39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -6, -38, 73, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -6, 27, 36, -6, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -5, -38, 73, -5, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -5, 27, 34, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -4, -54, 29, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -4, -48, 29, -1, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -4, -44, 29, -4, -43, Index.CUT_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 29, -4, -38, 34, -2, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -4, -37, 72, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -4, 26, 35, -4, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -3, -37, 72, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -3, 26, 35, -3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -2, -44, 29, -2, -43, Index.CUT_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 29, -2, -37, 72, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -2, 27, 34, -2, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -1, -56, 29, -1, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 29, -1, -53, 33, -1, -49, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 29, -1, -47, 34, -1, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -1, -38, 35, -1, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -1, -7, 33, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -1, 25, 29, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 29, -1, 33, 29, -1, 37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 29, -1, 38, 29, -1, 38, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 0, -55, 29, 0, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 0, -54, 29, 0, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 29, 0, -47, 35, 0, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 0, -7, 33, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 0, 21, 29, 0, 22, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 29, 0, 33, 29, 0, 37, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 29, 1, -54, 29, 1, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 1, -47, 34, 1, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 1, -8, 32, 1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 1, 32, 30, 2, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 2, -47, 34, 2, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 2, -8, 32, 2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 3, -47, 34, 3, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 3, -8, 32, 3, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 3, 8, 31, 5, 8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 3, 9, 36, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 4, -5, 29, 4, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 4, 9, 31, 4, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 4, 25, 29, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 5, 24, 29, 5, 29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 6, -41, 33, 9, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 6, -36, 29, 7, -36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 29, 6, 8, 31, 7, 8, Blocks.SUGAR_CANE.getDefaultState().with(SugarCaneBlock.AGE, 0));
        structure.fillWithBlocks(world, start, 29, 6, 24, 29, 8, 24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 6, 25, 29, 7, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 6, 27, 29, 7, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 29, 6, 28, 29, 9, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 6, 29, 29, 9, 29, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 6, 32, 29, 7, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 29, 7, -5, 32, 9, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 7, 9, 30, 7, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 8, -40, 30, 8, -39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 8, -14, 29, 8, -10, Blocks.LIGHT_BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 8, 9, 29, 8, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 29, 8, 25, 29, 9, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 8, 31, 29, 8, 32, Blocks.PINK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 9, -47, 33, 9, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 9, -46, 30, 9, -43, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 29, 9, -42, 30, 9, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 29, 9, -23, 29, 9, -19, Blocks.YELLOW_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 9, 22, 30, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 29, 9, 24, 29, 9, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 10, 21, 29, 14, 21, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 12, 3, 29, 12, 4, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 29, 13, -6, 29, 14, -6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 29, 13, -5, 29, 15, -5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 13, -4, 29, 15, -4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 29, 13, -3, 29, 15, -3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 13, -2, 29, 14, -2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 29, 13, 19, 29, 14, 19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 13, 20, 29, 14, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 29, 13, 22, 29, 14, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 29, 13, 23, 29, 14, 23, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 15, 20, 29, 15, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 16, -4, 29, 16, -4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 29, 16, 20, 29, 16, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 30, -14, 71, 34, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -13, 69, 30, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -12, 6, 41, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -12, 50, 39, -12, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -12, 63, 34, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -11, -39, 32, -11, -37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -11, -36, 30, -11, -35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -11, -34, 51, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -11, -3, 30, -11, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -8, 33, 31, -8, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -8, 35, 30, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -7, -54, 30, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -7, 35, 30, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -6, -70, 31, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -6, -54, 30, -6, -39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -5, 33, 31, -5, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -5, 35, 30, -5, 35, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 30, -4, 33, 31, -4, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -3, -54, 31, -2, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -3, -48, 33, -1, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -3, 33, 31, -3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -2, -56, 31, -2, -55, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -2, 33, 31, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -1, -54, 33, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -1, 25, 30, -1, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -1, 33, 31, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, -1, 35, 31, -1, 38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 30, -1, 39, 31, -1, 39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 0, 21, 30, 0, 22, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 30, 0, 30, 30, 0, 31, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.WEST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 0, 33, 31, 0, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 0, 35, 31, 0, 38, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 30, 1, 33, 31, 1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 2, 26, 30, 2, 27, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 2, 28, 30, 2, 29, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.WEST).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 2, 30, 30, 2, 31, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 2, 33, 31, 2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 3, 26, 31, 3, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 3, 28, 30, 3, 29, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.WEST).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 3, 30, 31, 3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 3, 33, 31, 3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, -46, 33, 4, -42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, -40, 33, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, -21, 30, 4, -21, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, -20, 30, 5, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, -16, 31, 4, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, -5, 32, 5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, 25, 30, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 4, 33, 31, 4, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 5, -23, 30, 5, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 5, -16, 30, 6, -15, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 30, 5, -9, 30, 6, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 5, -8, 30, 5, -7, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 30, 5, -6, 30, 6, -6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 5, 9, 31, 5, 9, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 5, 10, 31, 5, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 5, 24, 37, 5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 5, 25, 32, 5, 25, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 30, 5, 27, 30, 5, 28, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 30, 6, -36, 30, 9, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, -24, 30, 8, -24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, -23, 30, 7, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, -20, 30, 9, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, -19, 30, 7, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 30, 6, -18, 30, 9, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, -17, 30, 9, -17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, -5, 32, 8, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, 9, 31, 6, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, 11, 33, 6, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, 24, 33, 8, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 7, -21, 30, 8, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 8, -38, 30, 8, -38, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 8, -23, 30, 8, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 8, 9, 31, 8, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 8, 11, 31, 9, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 9, -31, 31, 9, -30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 9, -28, 31, 9, -25, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 9, -22, 30, 9, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 9, -14, 30, 9, -10, Blocks.LIGHT_BLUE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 9, -3, 32, 9, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 9, 1, 31, 9, 2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 9, 3, 31, 9, 4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 9, 5, 31, 9, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 9, 9, 30, 9, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 30, 9, 12, 31, 9, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 9, 21, 31, 9, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 9, 24, 32, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 10, -41, 31, 10, -41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 30, 10, -4, 30, 15, -4, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 10, 3, 30, 11, 3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 30, 10, 4, 30, 11, 4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 30, 12, 3, 31, 12, 4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 13, -6, 30, 14, -6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 30, 13, -5, 30, 15, -5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 30, 13, -3, 30, 15, -3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 30, 13, -2, 30, 14, -2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 30, 13, 3, 31, 13, 4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 13, 20, 30, 14, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 30, 13, 21, 30, 14, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 30, 13, 22, 30, 14, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 30, 16, -5, 30, 16, -5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 31, -14, -79, 32, -14, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -14, 70, 34, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -13, 67, 32, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -13, 70, 35, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -12, -65, 44, -9, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -12, -64, 32, -12, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -12, 49, 38, -12, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -11, -36, 54, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -11, -3, 35, -11, 2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -9, -78, 37, -9, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -8, 35, 31, -8, 35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -8, 36, 31, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -8, 69, 87, -8, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -7, -74, 32, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -7, -54, 35, -5, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -7, -48, 34, -5, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -7, 33, 32, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -7, 56, 39, -7, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -5, -57, 31, -3, -57, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 31, -5, -47, 31, -3, -47, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 31, -5, -40, 32, -5, -40, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 31, -5, -39, 32, -5, -39, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 31, -4, -54, 31, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -4, -48, 35, -2, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -2, -57, 31, -2, -55, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 31, -1, 19, 45, -1, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 0, 19, 44, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 1, 18, 31, 1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 1, 19, 31, 3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 1, 25, 31, 1, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 1, 32, 33, 1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 2, 18, 31, 2, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 2, 26, 31, 3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 3, 18, 31, 3, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 3, 25, 31, 3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 4, -24, 35, 4, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 4, -17, 31, 5, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 4, -12, 31, 4, -12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 4, -11, 31, 5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 4, 24, 35, 4, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 5, -37, 31, 7, -37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 31, 5, -33, 31, 5, -32, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 31, 5, -28, 31, 5, -28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 5, 15, 31, 5, 19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 5, 23, 32, 6, 23, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 5, 34, 35, 5, 34, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 31, 6, -47, 31, 7, -47, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 31, 6, -36, 31, 7, -36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 31, 6, -17, 31, 6, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 6, -11, 31, 7, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 6, -9, 31, 9, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 6, -8, 31, 6, -7, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 31, 6, -6, 55, 9, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 7, -17, 34, 9, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 7, -16, 31, 8, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 7, -14, 31, 8, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 7, 9, 32, 7, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 7, 11, 33, 8, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 8, -47, 33, 9, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 8, -38, 32, 8, -37, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 9, -45, 32, 9, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 9, -44, 32, 9, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 9, -40, 32, 9, -39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 9, -35, 34, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 9, -29, 32, 9, -28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 9, -24, 32, 9, -23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 9, -21, 34, 9, -18, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 9, -16, 31, 9, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 9, -13, 31, 9, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 9, -4, 32, 9, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 9, 9, 32, 9, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 9, 17, 33, 9, 20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 10, -15, 31, 10, -10, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 31, 10, 3, 31, 11, 3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 31, 10, 4, 31, 11, 4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 31, 13, -6, 31, 14, -6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 31, 13, -5, 31, 15, -5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 31, 13, -4, 31, 15, -4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 31, 13, -3, 31, 15, -3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 31, 13, -2, 31, 14, -2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 31, 13, 21, 31, 14, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 32, -14, -84, 38, -14, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -13, -82, 39, -13, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -13, 65, 32, -8, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -13, 69, 33, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -12, -81, 44, -12, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -12, 48, 37, -12, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -11, -80, 51, -11, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -10, 67, 38, -10, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -8, 33, 38, -8, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -8, 56, 45, -8, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -7, 35, 32, -5, 39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -6, -70, 33, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -6, 60, 98, -6, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -5, -47, 34, -3, -47, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -5, 33, 34, -5, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -5, 40, 32, -5, 41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 32, -4, -54, 32, -3, -54, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 32, -4, 33, 33, -4, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -4, 35, 32, 4, 35, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -4, 36, 32, -2, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -4, 39, 32, 4, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -3, 33, 33, -3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -2, -54, 33, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -2, 33, 33, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -1, -57, 34, -1, -55, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -1, 34, 34, 1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, -1, 36, 32, -1, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 0, 33, 33, 0, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 0, 36, 32, 0, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 1, 18, 45, 1, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 1, 36, 32, 3, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 2, 18, 45, 2, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 2, 33, 33, 2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 3, 8, 40, 3, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 3, 18, 36, 3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 3, 33, 33, 3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 4, -28, 35, 4, -18, Blocks.SPRUCE_PLANKS.getDefaultState());

    }
    
    public static void generatePart18()
    {
        structure.fillWithBlocks(world, start, 32, 4, -17, 35, 5, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 4, -16, 38, 4, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 4, -9, 33, 4, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 4, -7, 32, 5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 4, 8, 35, 4, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 4, 36, 32, 4, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 5, -33, 32, 5, -32, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 32, 5, -27, 35, 5, -27, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 32, 5, -9, 36, 5, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 5, 8, 35, 5, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 5, 19, 33, 5, 19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, -47, 33, 7, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, -36, 32, 6, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, -17, 35, 8, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, -9, 33, 6, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, -8, 34, 6, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, 8, 32, 8, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, 9, 33, 6, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 6, 25, 32, 7, 25, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 32, 7, -36, 32, 7, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 7, -9, 32, 7, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 7, -8, 32, 7, -7, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 32, 8, -9, 56, 9, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 8, 9, 33, 8, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 8, 38, 32, 9, 38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 32, 9, -46, 32, 9, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 32, 9, -31, 33, 9, -30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 32, 9, -27, 32, 9, -26, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 32, 9, -22, 32, 9, -18, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 32, 9, -16, 34, 9, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 9, 1, 35, 9, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 9, 12, 33, 9, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 32, 9, 37, 32, 9, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 32, 10, -16, 34, 10, -16, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 32, 10, -9, 33, 10, -9, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 32, 10, -6, 33, 10, -6, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 32, 12, 3, 32, 12, 4, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 32, 13, -5, 32, 14, -5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 32, 13, -4, 32, 14, -4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 32, 13, -3, 32, 14, -3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 33, -13, -74, 47, -8, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -13, -73, 37, -13, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -13, 66, 34, -12, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -13, 67, 34, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -12, -64, 33, -12, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -12, -63, 33, -12, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -12, 23, 35, -12, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -12, 26, 33, -12, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -12, 47, 36, -12, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -11, -39, 47, -11, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -7, -73, 37, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -7, 33, 34, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -7, 35, 52, -5, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -7, 36, 35, -7, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -7, 65, 88, -7, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -6, 36, 35, -6, 38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -5, 39, 37, -5, 39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -5, 40, 33, -5, 40, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 33, -4, -54, 34, -3, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -4, 35, 40, -2, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -4, 39, 33, -1, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, -4, 40, 33, -4, 40, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 33, -1, 35, 35, -1, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 0, 35, 35, 0, 35, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 0, 39, 37, 0, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 1, -8, 33, 7, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 1, -7, 33, 3, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 1, -4, 33, 2, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 1, 4, 33, 1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 1, 35, 35, 3, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 1, 39, 33, 4, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 2, 4, 33, 2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 3, -4, 33, 5, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 3, 1, 33, 4, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 3, 4, 33, 3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 4, -35, 33, 5, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 4, -29, 33, 8, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 4, -7, 35, 4, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 4, 4, 35, 4, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 4, 35, 35, 4, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 4, 36, 33, 4, 38, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 33, 5, -40, 33, 5, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 5, 1, 33, 5, 7, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 5, 25, 37, 9, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, -40, 33, 8, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, -34, 33, 7, -31, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 33, 6, -30, 34, 6, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, -5, 33, 6, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, -4, 33, 9, -1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, 0, 33, 8, 0, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, 8, 33, 8, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 7, -30, 33, 7, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 7, -9, 37, 7, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 7, 9, 34, 7, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 8, -34, 33, 8, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 8, -8, 33, 8, -7, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 33, 8, -5, 33, 8, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 8, 36, 33, 10, 36, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 33, 8, 37, 33, 10, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 33, 8, 38, 33, 10, 38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 33, 9, -46, 33, 9, -44, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 33, 9, -39, 33, 9, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 9, -29, 34, 9, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 9, 8, 36, 9, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 9, 24, 33, 9, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 10, 4, 37, 10, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 10, 12, 33, 10, 13, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 33, 10, 14, 33, 14, 14, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 10, 15, 33, 10, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 11, 4, 33, 19, 4, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 11, 5, 33, 13, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 11, 8, 33, 19, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 11, 15, 33, 14, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 11, 23, 33, 12, 23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 33, 11, 24, 33, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 11, 25, 33, 14, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 11, 37, 33, 11, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 33, 13, 23, 33, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 14, 5, 33, 14, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 15, 5, 33, 15, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 16, 5, 33, 16, 7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 33, 19, 5, 33, 19, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -14, -77, 66, -9, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -14, 58, 45, -14, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -13, 69, 55, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -12, -64, 35, -12, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -12, -62, 34, -12, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -12, 20, 41, -12, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -12, 28, 34, -12, 45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -12, 46, 34, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -8, -76, 39, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -8, 40, 34, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -8, 41, 36, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -7, -53, 38, -7, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -7, 39, 34, -7, 39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -7, 41, 38, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -6, -70, 35, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -6, -53, 38, -6, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -6, 39, 34, -6, 39, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -6, 41, 38, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -5, 37, 34, -1, 37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -4, 33, 35, -4, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -4, 39, 34, -3, 39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 34, -3, 33, 35, -3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -2, 33, 35, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -2, 39, 35, -1, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -1, -54, 34, -1, -54, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -1, -53, 34, -1, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -1, -7, 36, -1, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -1, -4, 34, -1, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -1, 4, 41, -1, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, -1, 38, 35, -1, 38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 0, -54, 34, 0, -54, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 0, -4, 34, 0, 0, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 34, 0, 4, 40, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 0, 33, 35, 0, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 1, -8, 40, 4, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 1, 4, 40, 4, 4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 1, 5, 40, 1, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 1, 33, 34, 2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 1, 39, 34, 2, 39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 34, 2, 5, 40, 2, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 3, 5, 40, 3, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 3, 33, 34, 4, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 3, 39, 35, 4, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, -46, 34, 5, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, -39, 40, 4, -33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, -32, 38, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, -31, 37, 4, -28, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, -9, 40, 5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, -4, 38, 4, 0, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, 1, 35, 4, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, 12, 38, 4, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, 17, 36, 4, 28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, 36, 34, 4, 36, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 4, 38, 36, 4, 38, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 5, -39, 34, 5, -38, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.EAST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 5, -34, 34, 5, -33, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.EAST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 5, -31, 35, 5, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 5, -4, 38, 5, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 5, 12, 38, 5, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 5, 17, 36, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 5, 37, 34, 10, 37, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, -47, 34, 9, -47, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, -46, 34, 7, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, -44, 34, 7, -44, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 34, 6, -43, 34, 7, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, -41, 34, 9, -41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, -40, 35, 7, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, -39, 34, 6, -38, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 34, 6, -34, 34, 6, -33, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 34, 6, -32, 36, 6, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, -9, 34, 6, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, 0, 35, 7, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, 8, 35, 7, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, 9, 36, 6, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, 12, 34, 6, 23, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, 24, 35, 6, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 7, -39, 34, 7, -38, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 7, -37, 34, 7, -35, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 7, -34, 34, 7, -33, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 7, -32, 44, 8, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 7, -31, 35, 7, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 7, -4, 37, 7, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 7, 11, 34, 7, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 7, 12, 34, 7, 23, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 7, 24, 35, 7, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, -46, 34, 9, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, -40, 40, 9, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, -39, 34, 8, -38, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 8, -37, 34, 8, -35, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 34, 8, -34, 34, 8, -33, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 8, -31, 35, 8, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, -8, 41, 8, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, 0, 35, 8, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, 8, 35, 8, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, 9, 40, 8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, 16, 35, 8, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 8, 35, 34, 9, 35, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 34, 8, 36, 34, 10, 36, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 34, 8, 38, 34, 10, 38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 34, 8, 39, 34, 9, 39, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 34, 9, -39, 35, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 9, -31, 35, 9, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 9, -8, 34, 9, -7, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 34, 9, -5, 36, 9, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 9, -2, 35, 9, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 9, 12, 36, 9, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 9, 15, 40, 9, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 9, 23, 35, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 10, -45, 34, 10, -44, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 34, 10, -30, 34, 10, -29, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 34, 10, -20, 34, 10, -19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 34, 10, 14, 35, 10, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 10, 25, 37, 10, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 11, -25, 34, 14, -25, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 34, 11, 4, 36, 13, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 11, 5, 36, 11, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 11, 8, 36, 13, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 11, 14, 35, 12, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 11, 25, 34, 14, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 11, 36, 34, 11, 36, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 34, 12, 5, 36, 12, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 13, 5, 36, 13, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 13, 9, 34, 13, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 34, 13, 14, 41, 14, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 14, 4, 36, 14, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 14, 5, 36, 14, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 14, 8, 36, 14, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 14, 9, 35, 14, 13, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 34, 14, 15, 35, 14, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 14, 21, 36, 14, 21, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 14, 22, 34, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 15, 4, 37, 15, 4, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 15, 5, 36, 15, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 15, 8, 37, 15, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 16, 4, 36, 16, 4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 34, 16, 8, 36, 16, 8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 34, 19, 4, 36, 19, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 19, 5, 34, 19, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 34, 19, 8, 36, 19, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -14, 70, 36, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -14, 72, 35, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -13, 66, 38, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -12, -62, 38, -12, -59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -12, -57, 35, -12, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -12, 19, 44, -12, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -12, 29, 35, -12, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -12, 65, 35, -7, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -12, 66, 64, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -12, 67, 37, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -11, 3, 41, -11, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -11, 10, 35, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -8, -68, 43, -8, -60, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -8, -59, 41, -8, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -8, 40, 36, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -7, -55, 35, -6, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -7, -48, 35, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -7, 39, 37, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -7, 66, 64, -7, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -6, -71, 37, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -6, -48, 58, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -6, 39, 37, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -5, -59, 35, -5, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -5, -48, 58, -5, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -5, 27, 43, -5, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -4, -59, 35, -1, -59, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -4, -58, 35, -1, -58, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -4, -57, 35, -3, -57, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, -4, -56, 35, -3, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -4, -54, 35, -2, -54, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -4, -47, 35, -2, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -4, -38, 72, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -4, 39, 36, -3, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -3, -38, 72, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -2, -57, 35, -1, -55, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -2, -38, 72, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -2, 27, 42, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -1, -54, 35, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -1, -52, 38, -1, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -1, -48, 35, 0, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -1, -4, 39, -1, 0, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -1, 1, 37, -1, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -1, 34, 35, 0, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, -1, 37, 35, -1, 38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 0, -51, 35, 0, -50, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 35, 0, -49, 35, 0, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 0, -5, 38, 0, -5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 35, 0, -4, 39, 0, 0, Blocks.NETHER_WART.getDefaultState().with(NetherWartBlock.AGE, 3));
        structure.fillWithBlocks(world, start, 35, 0, 1, 38, 0, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 35, 1, -52, 35, 2, -52, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 1, -49, 35, 4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 1, -48, 35, 4, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 1, -41, 35, 3, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 1, -33, 35, 1, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 1, 34, 35, 2, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 1, 39, 36, 2, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 2, -33, 35, 2, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 2, 33, 35, 3, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 3, -52, 39, 3, -52, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 3, -33, 35, 3, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 4, -51, 36, 4, -50, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 4, -40, 35, 5, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 4, 36, 36, 4, 38, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 5, -48, 35, 5, -45, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 35, 5, -43, 35, 5, -42, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 35, 5, -23, 35, 5, -21, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 5, 28, 35, 5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 6, -23, 35, 7, -23, Blocks.SPRUCE_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 35, 6, -21, 35, 7, -21, Blocks.SPRUCE_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 35, 6, -8, 42, 6, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 6, 12, 38, 6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 6, 16, 35, 8, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 6, 28, 35, 9, 28, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 6, 29, 35, 9, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 6, 30, 35, 7, 30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 6, 31, 35, 9, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 6, 32, 35, 9, 32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 7, 9, 41, 7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 8, -16, 35, 10, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 8, 30, 35, 9, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 8, 36, 35, 10, 36, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 35, 8, 37, 35, 10, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 35, 8, 38, 35, 10, 38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 35, 9, -28, 35, 9, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 9, -17, 35, 10, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 9, -8, 39, 9, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 9, 33, 36, 9, 34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 35, 10, -31, 41, 10, -31, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 35, 10, -28, 35, 10, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 10, -3, 35, 10, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 10, 13, 35, 12, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 11, -28, 35, 14, -28, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, -27, 35, 14, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, -26, 35, 12, -26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 11, -25, 35, 14, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, -20, 35, 12, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 11, -18, 35, 14, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, -12, 35, 12, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 11, -11, 35, 14, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, -10, 35, 14, -10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, -3, 35, 14, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, -2, 35, 14, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, 3, 35, 14, 3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 11, 25, 35, 12, 25, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 35, 13, -26, 35, 14, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 13, -5, 41, 13, -5, Blocks.BLACK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 13, 9, 35, 13, 10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 35, 13, 11, 35, 13, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 35, 13, 25, 36, 14, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 14, -4, 41, 14, -4, Blocks.BLACK_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 14, 22, 36, 14, 23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 14, 24, 36, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 15, -22, 35, 15, -21, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 15, -11, 35, 15, -11, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 35, 15, 22, 35, 17, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 15, 23, 35, 17, 23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 18, 22, 35, 18, 23, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 35, 19, 5, 36, 19, 6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 19, 7, 36, 19, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 35, 20, 5, 35, 23, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 20, 6, 35, 23, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 35, 24, 5, 36, 24, 6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 36, -14, 72, 56, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -14, 73, 40, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -13, 70, 55, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -13, 71, 39, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -12, -64, 44, -12, -56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -12, -55, 36, -12, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -12, -18, 41, -12, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -12, 4, 49, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -12, 29, 46, -7, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -12, 30, 52, -12, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -12, 65, 37, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -11, -3, 39, -11, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -11, 1, 37, -10, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -11, 2, 46, -11, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -11, 13, 37, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -9, 72, 58, -9, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -8, 70, 60, -8, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -7, -68, 44, -7, -60, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -7, -59, 37, -6, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -7, -58, 40, -7, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -7, -48, 40, -5, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -7, 26, 44, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -7, 36, 38, -7, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -6, -68, 44, -6, -60, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -6, -58, 40, -6, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -6, 36, 38, -6, 38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -6, 61, 36, -6, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -5, -59, 37, -5, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -4, -63, 36, -3, -63, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 36, -4, -60, 36, -3, -60, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 36, -4, -59, 37, -3, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -4, -47, 57, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -4, 26, 43, -4, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -4, 34, 42, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -3, -61, 36, -3, -60, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 36, -3, -47, 57, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -3, 26, 43, -3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -2, -63, 37, -2, -62, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -2, -59, 40, -1, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -2, -48, 40, -2, -48, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 36, -2, -47, 57, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -2, 39, 36, -2, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, -61, 37, -1, -60, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, -58, 40, -1, -54, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, -1, -53, 40, -1, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, -48, 41, -1, -43, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, -42, 37, 0, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, -41, 42, -1, -34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, -33, 61, -1, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, 34, 40, -1, 38, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, -1, 39, 36, 0, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 0, -52, 42, 0, -52, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 36, 0, -49, 43, 0, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 0, -38, 36, 1, -37, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 0, -33, 59, 0, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 0, -9, 37, 0, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 0, 33, 42, 0, 33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 1, -49, 42, 4, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 1, -42, 37, 2, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 1, -33, 42, 3, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 1, -32, 58, 1, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 1, -9, 40, 5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 1, 33, 42, 3, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 2, -32, 58, 2, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 3, -42, 37, 3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 3, -32, 41, 3, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 3, -26, 38, 3, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 3, 1, 36, 4, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 3, 39, 36, 3, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, -48, 40, 4, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 4, -41, 42, 4, -34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, -27, 36, 5, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, -7, 40, 4, 0, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, 3, 37, 4, 4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, 5, 40, 4, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, 29, 38, 4, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, 33, 42, 4, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, 34, 42, 4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 4, 35, 37, 4, 35, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 5, -40, 41, 5, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 5, -31, 36, 5, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 5, -17, 37, 5, -17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 5, 1, 51, 5, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 5, 28, 40, 5, 28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 5, 32, 41, 5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, -40, 38, 7, -40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 36, 6, -28, 36, 8, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, -17, 36, 8, -17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 0, 36, 6, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 1, 36, 7, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 3, 36, 7, 5, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 36, 6, 6, 36, 7, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 8, 43, 6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 16, 36, 7, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 17, 36, 9, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 23, 36, 6, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 28, 36, 9, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 6, 32, 36, 9, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 7, -31, 36, 7, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 7, 0, 36, 7, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 7, 8, 43, 7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 7, 23, 36, 7, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, -31, 36, 9, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, -16, 71, 8, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, -10, 45, 8, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, 1, 36, 8, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, 8, 43, 8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, 16, 37, 8, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, 23, 36, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 8, 33, 42, 8, 33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 36, 8, 34, 42, 8, 34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 36, 8, 37, 36, 9, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 36, 9, -39, 37, 9, -38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 9, -37, 36, 9, -35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 9, -34, 38, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 9, -28, 36, 10, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 9, -27, 41, 9, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 9, -10, 42, 9, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 9, -2, 40, 9, 2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 9, 3, 37, 9, 4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 9, 6, 43, 9, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 9, 29, 36, 9, 29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 9, 30, 36, 9, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 10, -27, 37, 11, -27, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 10, -10, 45, 10, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 10, 3, 37, 10, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 11, -28, 39, 14, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 11, -10, 36, 14, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 11, -3, 36, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 11, 3, 36, 12, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 11, 25, 36, 14, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 12, -27, 37, 12, -27, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 12, 14, 37, 13, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 13, 3, 36, 14, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 14, -27, 41, 14, -21, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 14, -20, 37, 14, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 14, -2, 37, 14, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 14, 9, 36, 14, 10, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 36, 14, 15, 36, 14, 21, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 36, 15, 16, 36, 15, 18, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 36, 15, 19, 36, 15, 19, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 36, 15, 20, 36, 15, 20, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 36, 15, 22, 36, 17, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 36, 15, 23, 36, 17, 23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 36, 20, 5, 36, 23, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 36, 20, 6, 36, 23, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 37, -14, 70, 39, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, -55, 37, -12, -55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, -54, 37, -12, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, -38, 38, -12, -37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, -36, 50, -12, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, -22, 37, -12, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, -20, 43, -12, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, 18, 47, -12, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, 47, 37, -12, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -12, 64, 39, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -8, 40, 38, -8, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -8, 42, 43, -8, 48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -8, 49, 42, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -6, 27, 45, -6, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -6, 61, 38, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -5, 40, 37, -5, 41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -4, -48, 39, -4, -48, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.SOUTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, -4, 39, 37, -2, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -4, 40, 37, -1, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -4, 41, 37, 4, 41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -3, -48, 39, -3, -48, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.NORTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, -1, -7, 39, -1, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, -1, 39, 37, -1, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 0, 40, 37, 0, 41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 1, 39, 37, 3, 39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 1, 40, 37, 4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 2, -48, 38, 2, -48, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 3, 17, 42, 3, 22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 3, 23, 37, 3, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 3, 25, 40, 3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, -51, 38, 4, -50, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, -27, 38, 4, -26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, -25, 42, 4, -20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, -19, 41, 4, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, 1, 40, 4, 4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, 17, 42, 4, 22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, 23, 37, 4, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, 26, 39, 4, 28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 4, 36, 37, 4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 5, -37, 37, 5, -35, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 37, 5, -25, 42, 5, -20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 5, -8, 45, 5, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 5, 21, 37, 5, 22, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.EAST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 5, 23, 37, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 5, 35, 41, 5, 35, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 37, 5, 38, 37, 5, 39, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 37, 5, 40, 37, 5, 40, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 37, 6, -32, 38, 7, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, -25, 45, 7, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, -24, 40, 6, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, -20, 41, 8, -20, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, 0, 45, 6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, 16, 40, 9, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, 23, 39, 7, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, 24, 37, 7, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, 28, 37, 7, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 37, 6, 32, 37, 7, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 37, 7, -24, 40, 7, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 7, 0, 43, 7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 7, 19, 37, 8, 20, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 8, -25, 41, 8, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 8, 1, 43, 8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 8, 22, 37, 9, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 8, 23, 37, 10, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 8, 28, 38, 9, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 8, 32, 45, 9, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 9, -37, 37, 9, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 9, -35, 38, 9, -35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 9, -31, 43, 9, -23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 9, -3, 37, 9, 2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 9, 5, 38, 9, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 9, 29, 37, 9, 29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 9, 30, 37, 9, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 9, 33, 38, 9, 34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 37, 10, -28, 44, 10, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 10, 0, 39, 10, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 10, 13, 37, 12, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 37, 10, 14, 42, 10, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 10, 20, 37, 10, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, -10, 37, 12, -10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 37, 11, 3, 40, 14, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, 4, 37, 19, 4, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, 5, 37, 13, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, 8, 37, 19, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, 14, 37, 14, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, 20, 37, 12, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, 23, 37, 12, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 11, 25, 37, 14, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 12, -3, 38, 13, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 12, 22, 37, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 12, 30, 37, 13, 30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 37, 13, -10, 44, 14, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 13, 13, 37, 15, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 37, 13, 20, 37, 13, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 14, -3, 40, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 14, 5, 37, 14, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 14, 15, 38, 14, 15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 14, 16, 40, 14, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 37, 14, 20, 41, 14, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 15, 5, 37, 15, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 15, 15, 37, 17, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 37, 16, 5, 37, 16, 7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 37, 16, 14, 37, 17, 14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 37, 18, 14, 38, 18, 14, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 37, 19, 5, 37, 19, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -13, -73, 46, -8, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -13, 52, 55, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, -55, 39, -12, -54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, -53, 48, -12, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, -22, 40, -12, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, -21, 44, -12, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, -12, 38, -7, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, -11, 66, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, 47, 39, -12, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, 63, 42, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -12, 68, 41, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -11, 1, 48, -11, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -11, 13, 42, -11, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -11, 14, 52, -11, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -9, -76, 108, -9, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -7, -72, 41, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -7, -59, 38, -7, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -7, 39, 39, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -7, 67, 53, -7, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -6, -71, 40, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -6, -59, 38, -6, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -6, 39, 39, -6, 40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -6, 63, 59, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -4, 41, 38, -1, 41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -3, -59, 40, -1, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -2, -63, 39, -2, -62, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -1, -61, 39, -1, -60, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -1, -42, 40, -1, -34, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -1, 1, 40, -1, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 38, -1, 39, 39, -1, 40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 0, -59, 40, 0, -59, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 38, 0, -58, 40, 0, -58, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 0, -57, 40, 0, -57, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 38, 0, -9, 39, 0, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 0, 40, 38, 2, 40, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 0, 41, 43, 0, 41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 1, -58, 40, 1, -58, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 38, 1, 41, 42, 4, 41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 3, 23, 40, 5, 23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 3, 24, 39, 3, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 4, -31, 43, 4, -26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 4, 24, 39, 4, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 4, 35, 42, 4, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 4, 36, 39, 4, 40, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 5, -17, 40, 5, -17, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 6, 28, 39, 7, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 6, 32, 41, 9, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 7, -9, 45, 7, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 8, 23, 39, 9, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 9, -39, 39, 9, -38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 9, -37, 38, 9, -35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 9, -3, 41, 10, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 9, 3, 39, 9, 4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 10, 3, 41, 10, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 10, 5, 38, 10, 5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 38, 10, 20, 42, 10, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 10, 23, 39, 10, 23, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 38, 11, -27, 38, 12, -27, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 11, -10, 44, 14, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 11, -3, 38, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 11, 14, 40, 12, 14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 38, 11, 20, 41, 14, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 12, 30, 38, 13, 30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 13, 13, 38, 15, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 38, 13, 21, 38, 13, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 38, 14, -20, 39, 14, -19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 14, -18, 41, 14, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 14, -12, 39, 14, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 14, -2, 40, 14, -2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 14, -1, 39, 14, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 14, 1, 39, 14, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 38, 14, 21, 39, 14, 22, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 38, 15, -20, 38, 17, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 38, 15, -19, 38, 17, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 38, 15, -1, 39, 15, 0, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 38, 15, 15, 38, 17, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 38, 15, 20, 40, 15, 20, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 38, 16, 14, 38, 17, 14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 38, 18, -20, 39, 18, -19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 39, -14, -84, 46, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -13, -83, 47, -13, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -12, -38, 54, -12, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -12, -12, 68, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -12, 49, 105, -12, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -12, 60, 46, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -11, 36, 42, -11, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -11, 40, 39, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -10, 67, 45, -10, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -8, 40, 40, -8, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -7, -59, 41, -5, -59, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -7, 36, 43, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -7, 42, 44, -7, 48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -7, 49, 42, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -6, 36, 43, -6, 40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -6, 42, 44, -6, 48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -6, 49, 42, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -6, 61, 41, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -4, -59, 40, -3, -59, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -3, 41, 40, -2, 41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, -1, 41, 43, -1, 41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 0, 34, 40, 0, 34, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 39, 0, 35, 40, 0, 35, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 39, 3, -25, 54, 3, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 4, -51, 40, 4, -50, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 4, -32, 39, 4, -26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 4, 29, 41, 4, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 5, -49, 40, 5, -49, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 39, 5, 41, 40, 5, 41, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));

    }
    
    public static void generatePart19()
    {
        structure.fillWithBlocks(world, start, 39, 6, -40, 40, 7, -40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 6, -9, 39, 6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 9, -37, 40, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 39, 9, 29, 40, 9, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 9, 33, 40, 9, 34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 39, 10, 4, 39, 10, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 39, 10, 32, 40, 10, 32, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 39, 11, -3, 39, 12, -3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 39, 11, 4, 39, 11, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 39, 12, 29, 40, 12, 29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 13, -3, 40, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 13, 21, 40, 13, 21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 39, 14, 15, 41, 14, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 39, 15, -20, 39, 17, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 39, 15, -19, 39, 17, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 39, 20, -19, 39, 21, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 40, -14, -76, 40, -9, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -14, -75, 107, -14, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -14, 70, 42, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -13, 71, 53, -13, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -13, 72, 41, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -12, -55, 50, -9, -55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -12, -54, 46, -12, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -12, 47, 42, -12, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -12, 50, 40, -9, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -12, 57, 50, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -11, -3, 41, -11, -1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -11, 0, 40, -7, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -11, 35, 45, -11, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -11, 41, 40, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -10, 74, 56, -10, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -8, -72, 43, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -8, 71, 53, -8, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -7, 41, 44, -7, 48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -7, 56, 51, -7, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -6, 41, 44, -6, 48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -6, 64, 44, -6, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -5, 41, 44, -5, 41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -4, 41, 40, -1, 41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -2, -63, 40, -2, -62, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -2, -61, 40, -2, -60, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 40, -1, -61, 40, -1, -60, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -1, -7, 40, -1, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 40, -1, 39, 41, -1, 40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 0, -50, 41, 0, -50, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 40, 0, -9, 40, 0, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 2, -48, 41, 2, -48, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 40, 3, -26, 56, 3, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 3, 24, 40, 5, 28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 4, -32, 45, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 4, 36, 40, 4, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 4, 38, 40, 4, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 4, 39, 40, 4, 40, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 40, 6, -32, 44, 8, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 6, -9, 41, 6, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 6, 23, 40, 8, 23, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 6, 24, 40, 9, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 6, 28, 40, 8, 28, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 9, -39, 40, 9, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 40, 9, 3, 43, 9, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 9, 23, 44, 9, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 10, -13, 41, 10, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 40, 10, 25, 40, 10, 25, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 40, 11, -28, 42, 12, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 40, 11, -3, 40, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 12, -11, 42, 12, -11, Index.SHELF_OAK.getDefaultState().with(Shelf.FACING, Direction.NORTH));
        structure.fillWithBlocks(world, start, 40, 13, -28, 43, 14, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 14, -20, 41, 14, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 40, 14, -12, 40, 14, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 40, 14, -1, 40, 14, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 40, 14, 21, 40, 14, 22, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 41, -14, -76, 105, -14, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -14, 73, 53, -14, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -12, -22, 44, -12, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -12, 50, 42, -12, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -12, 52, 41, -10, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -12, 55, 53, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -11, 0, 49, -11, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -11, 41, 50, -11, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -11, 42, 42, -11, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -9, 73, 53, -9, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -8, -76, 48, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -8, 40, 42, -8, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -7, -58, 46, -7, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -7, -52, 49, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -6, -70, 42, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -6, -58, 58, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -5, -58, 41, -5, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -4, -59, 41, -1, -59, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -4, -58, 41, -3, -57, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -4, -56, 41, -3, -56, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 41, -4, -55, 41, -2, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -4, -48, 57, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -4, 35, 42, -3, 35, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 41, -4, 41, 41, -3, 41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 41, -3, -48, 57, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -2, -58, 41, -1, -54, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -2, -48, 57, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -2, 35, 42, -2, 35, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 41, -2, 41, 43, -1, 41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -1, -52, 44, -1, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -1, -42, 43, 0, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -1, -7, 57, -1, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, -1, 34, 42, -1, 40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 0, -9, 41, 4, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 0, -1, 41, 4, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 0, 8, 42, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 0, 10, 41, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 1, -42, 42, 2, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 1, 8, 41, 2, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 1, 10, 41, 3, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 1, 16, 41, 1, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 2, 16, 41, 2, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 3, -42, 42, 3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 3, -2, 41, 4, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 3, 8, 41, 4, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 3, 16, 41, 5, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 3, 23, 44, 3, 26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 3, 27, 46, 3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 4, -48, 42, 4, -47, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 4, -45, 42, 4, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 4, -33, 42, 4, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 4, 10, 41, 8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 4, 23, 45, 4, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 4, 36, 41, 4, 39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 4, 40, 42, 4, 40, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 5, -46, 41, 7, -46, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 41, 5, -37, 41, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 5, -9, 47, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 5, 18, 41, 5, 20, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 41, 5, 24, 41, 6, 27, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 5, 41, 42, 5, 41, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 41, 6, -40, 41, 9, -40, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 6, -39, 41, 9, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 6, -37, 41, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 6, -24, 44, 6, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 6, 16, 47, 8, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 7, -38, 41, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 7, -24, 44, 7, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 8, -46, 41, 10, -46, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 41, 8, 28, 45, 8, 28, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 9, -32, 42, 9, -32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 9, -2, 45, 9, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 9, 15, 41, 9, 16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 9, 17, 47, 9, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 9, 28, 43, 9, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 9, 31, 43, 9, 31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 9, 33, 42, 9, 34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 41, 10, -8, 41, 12, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 41, 10, -2, 41, 10, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 10, 13, 42, 10, 13, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 41, 10, 30, 43, 10, 30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 41, 10, 31, 43, 10, 31, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 10, 32, 43, 10, 32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 41, 11, -3, 41, 14, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 11, -2, 41, 14, -2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 11, -1, 41, 12, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 41, 11, 2, 41, 14, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 11, 3, 41, 14, 3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 11, 14, 41, 14, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 11, 31, 43, 11, 31, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 41, 12, 16, 41, 12, 18, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 13, -8, 45, 13, -8, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 13, -1, 41, 14, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 13, 16, 42, 13, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 14, -12, 42, 14, -12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 14, -11, 44, 14, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 14, -9, 45, 14, -9, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 15, -13, 42, 15, -13, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 41, 15, -12, 42, 15, -12, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 15, -11, 42, 15, -11, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 41, 15, -3, 41, 15, -3, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 41, 15, 14, 41, 15, 14, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 41, 16, -12, 42, 16, -12, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 41, 17, -12, 42, 17, -12, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 41, 19, -15, 41, 19, -15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 41, 19, -14, 41, 19, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 42, -13, 72, 43, -13, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -12, -13, 72, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -12, 52, 56, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -12, 68, 42, -8, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -12, 69, 44, -12, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -12, 72, 46, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -11, -3, 42, -10, -2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -11, -1, 50, -11, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -8, -59, 48, -8, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -8, -52, 49, -8, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -7, -72, 45, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -7, -59, 48, -7, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -6, -59, 58, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -6, 61, 44, -6, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -5, -52, 49, -5, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -5, 49, 42, -5, 49, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 42, -4, -52, 49, -4, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -4, 41, 43, -3, 41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -4, 49, 42, -4, 49, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 42, -3, -52, 49, -3, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -2, -52, 49, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -1, -48, 42, -1, -43, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -1, 10, 48, -1, 16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 42, -1, 17, 46, -1, 17, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 0, -9, 44, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 0, 11, 44, 0, 11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 0, 12, 42, 0, 13, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 42, 0, 14, 44, 0, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 0, 16, 47, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 0, 37, 42, 1, 37, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.WEST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 42, 1, -9, 51, 4, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 1, -8, 45, 1, -8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 1, -7, 44, 1, -7, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 1, -5, 42, 2, -5, Blocks.CHEST.getDefaultState().with(ChestBlock.FACING, Direction.EAST).with(ChestBlock.WATERLOGGED, false).with(ChestBlock.TYPE, ChestType.LEFT));
        structure.fillWithBlocks(world, start, 42, 1, -4, 42, 2, -4, Blocks.CHEST.getDefaultState().with(ChestBlock.FACING, Direction.EAST).with(ChestBlock.WATERLOGGED, false).with(ChestBlock.TYPE, ChestType.RIGHT));
        structure.fillWithBlocks(world, start, 42, 1, 8, 51, 4, 8, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 1, 9, 51, 3, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 1, 12, 42, 1, 13, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 42, 1, 16, 48, 3, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 1, 17, 46, 1, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 2, 12, 42, 2, 13, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.EAST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 42, 2, 17, 46, 2, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 2, 39, 42, 2, 40, Index.SHELF_OAK.getDefaultState().with(Shelf.FACING, Direction.WEST));
        structure.fillWithBlocks(world, start, 42, 3, -32, 64, 3, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 3, 1, 42, 4, 3, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 42, 4, -46, 42, 4, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 4, -19, 51, 4, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 4, 9, 68, 6, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 4, 10, 47, 4, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 4, 36, 42, 4, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 4, 38, 42, 4, 38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 4, 39, 42, 4, 40, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 5, -36, 42, 7, -33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 5, -19, 56, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 6, -20, 42, 6, -20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 6, -19, 42, 6, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 6, -17, 42, 7, -17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 6, -16, 42, 7, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 6, -10, 49, 6, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 7, -20, 43, 7, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 7, -10, 49, 7, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 7, 32, 43, 8, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 8, -35, 42, 8, -33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 8, -25, 51, 8, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 8, -15, 42, 8, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 9, -39, 45, 9, -39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 42, 9, -38, 46, 9, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 42, 9, -37, 44, 9, -37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 42, 9, -34, 42, 9, -32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 9, -22, 48, 9, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 9, -15, 44, 9, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 9, -3, 45, 9, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 9, 15, 43, 9, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 10, -39, 44, 10, -37, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 42, 10, -33, 42, 10, -32, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 42, 10, -22, 42, 10, -20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 10, -18, 42, 10, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 10, 15, 42, 10, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 10, 26, 44, 10, 26, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 42, 11, -22, 42, 13, -22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 11, -21, 42, 12, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 11, -18, 42, 12, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 11, -16, 42, 13, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 11, 14, 42, 14, 14, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 11, 15, 42, 14, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 11, 20, 42, 14, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 12, -19, 42, 14, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 13, -21, 42, 14, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 14, -27, 43, 14, -23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 14, -22, 42, 14, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 14, -15, 42, 14, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 15, -2, 44, 15, -2, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 15, 0, 44, 15, 0, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 42, 15, 16, 42, 15, 18, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 42, 19, -16, 42, 20, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 42, 19, -15, 42, 20, -15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 42, 19, -14, 42, 20, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 42, 21, -15, 42, 21, -15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 43, -14, 70, 47, -14, 74, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -12, 47, 62, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -12, 68, 46, -12, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -11, -3, 50, -11, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -11, 13, 52, -11, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -11, 42, 49, -11, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -11, 43, 44, -11, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -11, 75, 58, -11, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -8, 49, 43, -7, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -8, 50, 48, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -7, 50, 48, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -6, -70, 44, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -6, 50, 48, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -5, 48, 43, -5, 48, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 43, -4, 34, 44, -4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -4, 35, 44, -3, 35, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 43, -2, 35, 44, -2, 35, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 43, -1, -48, 46, -1, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -1, -44, 43, 0, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -1, -41, 45, -1, -39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -1, -38, 73, -1, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -1, 34, 52, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -1, 35, 44, -1, 35, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, -1, 36, 44, -1, 40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 0, -48, 43, 0, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 0, -38, 72, 0, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 0, 12, 43, 0, 13, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 43, 0, 33, 43, 0, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 0, 34, 43, 0, 41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, -49, 43, 4, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, -48, 43, 4, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, -47, 43, 2, -47, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 43, 1, -46, 43, 1, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, -42, 43, 3, -42, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, -38, 43, 3, -38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, -37, 43, 3, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, -33, 66, 1, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, 33, 43, 1, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, 34, 43, 3, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 1, 41, 43, 4, 41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 2, -46, 43, 2, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 2, -33, 66, 2, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 2, 33, 43, 2, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 3, -47, 43, 4, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 3, -44, 43, 3, -43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 3, -33, 66, 3, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 3, 17, 46, 3, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 4, -44, 44, 4, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 4, -35, 45, 4, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 4, -25, 55, 4, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 4, 32, 46, 5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 4, 33, 43, 4, 34, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 43, 4, 36, 43, 4, 40, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 5, -41, 44, 5, -41, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 43, 5, -40, 55, 5, -40, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 43, 5, -36, 44, 5, -36, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 43, 5, -35, 45, 5, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 5, -29, 43, 5, -28, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 43, 5, -25, 56, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 5, 36, 43, 5, 37, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 43, 5, 39, 43, 5, 40, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 43, 6, -35, 44, 6, -35, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 43, 6, -34, 44, 6, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 6, -20, 55, 6, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 6, -2, 45, 6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 6, 32, 43, 9, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 7, -34, 44, 7, -34, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 43, 7, -33, 44, 7, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 7, -18, 55, 7, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 8, -33, 44, 8, -33, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 43, 8, -15, 55, 8, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 9, -32, 44, 9, -32, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 43, 9, -10, 49, 9, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 9, 33, 43, 9, 34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 43, 10, -22, 44, 10, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 10, -17, 44, 10, -17, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 43, 10, -16, 45, 10, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 10, 7, 43, 10, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 11, -28, 43, 14, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 11, -22, 43, 14, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 11, -16, 44, 12, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 13, -16, 44, 14, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 14, -21, 44, 14, -17, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 14, -15, 43, 14, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 43, 14, -12, 44, 14, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 43, 15, -15, 43, 20, -15, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 43, 19, -17, 43, 19, -17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 43, 19, -16, 43, 20, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 43, 19, -14, 43, 20, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 43, 21, -16, 43, 21, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 44, -13, 72, 45, -13, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -12, -14, 75, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -11, -11, 45, -11, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -11, -9, 44, -7, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -11, -8, 53, -11, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -11, 67, 45, -11, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -11, 70, 49, -11, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -9, -78, 102, -9, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -8, -68, 58, -8, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -8, 42, 45, -8, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -8, 44, 55, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -7, 36, 48, -7, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -7, 49, 50, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -7, 68, 48, -7, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -6, 36, 48, -6, 40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -6, 49, 50, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -5, 42, 44, -5, 43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -4, 41, 44, -2, 41, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -4, 42, 44, -1, 42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -4, 43, 44, -1, 43, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -3, 34, 44, -3, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, -1, -55, 44, -1, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 44, -1, -44, 47, -1, -39, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 0, -55, 44, 0, -55, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 44, 0, -52, 48, 0, -52, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 44, 0, -48, 44, 0, -46, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 44, 0, -45, 48, 0, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 0, 12, 44, 0, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 44, 0, 33, 45, 0, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 0, 37, 44, 0, 41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 44, 1, -45, 45, 2, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 1, -38, 47, 3, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 1, -37, 71, 1, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 1, 33, 45, 1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 2, -37, 71, 2, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 2, 33, 44, 2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 3, -45, 47, 3, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 3, -37, 71, 3, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 3, 33, 44, 3, 34, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 44, 4, -31, 44, 4, -26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 5, -29, 44, 5, -28, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 44, 6, 32, 44, 7, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 44, 7, -20, 55, 7, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 7, 6, 44, 10, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 7, 7, 45, 7, 9, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 7, 10, 44, 7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 8, 1, 48, 8, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 8, 7, 45, 8, 9, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 8, 10, 44, 8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 9, -31, 44, 9, -26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 9, -25, 50, 9, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 9, 7, 45, 9, 9, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 9, 10, 44, 9, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 9, 28, 45, 9, 31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 44, 10, -27, 44, 10, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 10, 7, 45, 10, 9, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 44, 10, 10, 44, 10, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 10, 19, 44, 12, 19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 44, 11, -28, 44, 14, -28, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 11, -27, 44, 14, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 11, -26, 44, 12, -24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 44, 11, -23, 44, 14, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 11, -22, 44, 14, -22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 13, -26, 44, 14, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 13, 19, 44, 13, 19, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 44, 14, -15, 44, 14, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 44, 19, -17, 44, 19, -17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 44, 19, -16, 44, 20, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 44, 19, -15, 44, 20, -15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 44, 19, -14, 44, 20, -14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 45, -14, -85, 45, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -81, 53, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -72, 46, -12, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -70, 45, -6, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -69, 50, -12, -64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -63, 45, -9, -55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -22, 61, -12, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -21, 46, -12, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -12, -15, 45, -7, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -11, -9, 54, -11, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -11, 43, 47, -11, 43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -11, 44, 51, -11, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -11, 52, 49, -11, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -7, -73, 49, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -7, -68, 59, -7, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -7, 41, 46, -7, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -7, 43, 45, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -6, -68, 60, -6, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -6, 41, 46, -6, 42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -6, 43, 45, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -6, 61, 47, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -5, -55, 45, -1, -55, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -4, 34, 52, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -4, 35, 51, -1, 35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -4, 43, 45, -1, 43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -2, -57, 46, -2, -57, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 45, -2, -56, 46, -2, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 45, -2, -54, 46, -2, -54, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 45, -1, -56, 45, -1, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 45, -1, -52, 49, -1, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, -1, 36, 51, -1, 42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 45, -1, 45, 45, -1, 45, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 45, 0, -56, 45, 0, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 45, 0, -7, 45, 2, -7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 0, -6, 60, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 0, 35, 46, 0, 35, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 45, 0, 44, 46, 0, 45, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 45, 1, 5, 47, 1, 5, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 45, 2, -8, 45, 2, -7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 2, 33, 45, 2, 34, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 45, 3, -8, 45, 3, -7, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 45, 3, 25, 45, 4, 26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 4, -45, 47, 4, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 4, -44, 45, 4, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 45, 4, -41, 47, 4, -37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 4, -36, 45, 5, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 6, -36, 45, 9, -36, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 6, -35, 45, 7, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 6, -24, 56, 6, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 6, 31, 45, 7, 31, Index.HEDGE_SPRUCE.getDefaultState().with(Hedge.STATE, HedgeState.NONE).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 45, 6, 32, 45, 9, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 7, -24, 52, 7, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 7, 6, 46, 7, 7, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 7, 10, 47, 9, 10, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 7, 11, 49, 7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 8, -35, 45, 8, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 8, 6, 46, 8, 7, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 8, 11, 49, 8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 9, -37, 48, 9, -37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 45, 9, -35, 45, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 9, -31, 45, 9, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 9, 6, 46, 9, 7, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 9, 11, 50, 9, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 9, 26, 46, 9, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 10, -39, 46, 10, -37, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 45, 10, -15, 45, 10, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 10, -3, 45, 10, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 10, 5, 47, 10, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 10, 6, 46, 10, 7, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 45, 10, 10, 47, 10, 10, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 45, 10, 11, 47, 10, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, -16, 45, 14, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, -15, 45, 14, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, -14, 45, 12, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 45, 11, -11, 45, 14, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, -10, 45, 14, -10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, -3, 45, 14, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, -2, 45, 14, -2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, -1, 45, 12, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 45, 11, 0, 45, 14, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, 1, 45, 14, 1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 11, 8, 45, 13, 8, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 13, -21, 45, 13, -17, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 13, -14, 45, 14, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 13, -1, 45, 14, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 13, 19, 45, 13, 21, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 45, 14, 8, 45, 14, 8, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -13, 72, 47, -13, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -13, 77, 60, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -12, -70, 54, -12, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -12, -61, 46, -9, -55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -12, -15, 78, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -11, -11, 46, -7, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -11, -10, 55, -11, -1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -11, 35, 49, -11, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -11, 67, 47, -11, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -10, 67, 53, -10, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -8, 42, 47, -8, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -8, 56, 60, -8, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -7, 44, 57, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -6, -71, 48, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -6, 27, 52, -6, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -6, 44, 57, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -3, 43, 48, -1, 43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -1, -56, 46, -1, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 46, -1, 19, 47, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, -1, 44, 47, -1, 45, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 46, 0, -8, 47, 0, -8, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 0, -7, 62, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 0, 33, 46, 0, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 0, 43, 50, 0, 43, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 46, 0, 46, 48, 0, 46, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 46, 1, -45, 46, 2, -45, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 46, 1, -8, 47, 1, -8, Blocks.FIRE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 1, -7, 47, 1, -7, Blocks.CAULDRON.getDefaultState().with(CauldronBlock.LEVEL, 3));
        structure.fillWithBlocks(world, start, 46, 1, 10, 46, 2, 10, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.EAST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 46, 1, 25, 46, 2, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 1, 30, 46, 3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 1, 33, 46, 1, 34, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 46, 3, 26, 46, 5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 4, -44, 46, 4, -44, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 46, 4, -42, 47, 4, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 46, 4, -36, 46, 5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 4, -35, 48, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 4, -26, 51, 4, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 4, -8, 47, 4, -8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 5, -26, 51, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 5, 25, 46, 8, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 6, -36, 46, 7, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 6, -26, 51, 7, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 6, -25, 58, 6, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 6, 1, 60, 6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 6, 26, 46, 7, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 6, 28, 46, 7, 30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 46, 6, 31, 46, 9, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 6, 32, 46, 9, 32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 7, -25, 52, 7, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 7, 1, 50, 7, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 7, 8, 46, 9, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 7, 9, 47, 7, 10, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 8, -36, 48, 8, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 8, -26, 52, 8, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 8, -2, 46, 8, -1, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 46, 8, 9, 47, 8, 10, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 8, 26, 46, 9, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 9, -36, 48, 9, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 9, -35, 48, 9, -33, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 46, 9, -32, 48, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 9, -26, 52, 9, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 9, -15, 51, 9, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 9, -3, 46, 10, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 9, 1, 50, 9, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 9, 9, 47, 9, 10, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 10, -31, 47, 10, -31, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 46, 10, -12, 46, 10, -11, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 46, 10, -6, 46, 12, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 46, 10, 1, 49, 10, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 10, 8, 46, 11, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 10, 9, 47, 10, 10, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 46, 11, -3, 46, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 11, 1, 46, 14, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 11, 7, 46, 13, 7, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 11, 9, 46, 13, 9, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 13, -5, 46, 13, -4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 46, 14, -6, 47, 14, -4, Blocks.CYAN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 14, -2, 46, 14, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 46, 14, 7, 46, 14, 7, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 46, 14, 19, 47, 14, 22, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -14, -84, 54, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -14, 78, 61, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -13, -73, 58, -13, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, -72, 59, -12, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, -59, 47, -12, -54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, -21, 47, -12, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, -20, 47, -9, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, -16, 60, -12, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, 29, 73, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, 68, 49, -12, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -12, 72, 51, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -11, -11, 55, -11, -1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -11, 12, 52, -11, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -7, -74, 52, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -7, 41, 48, -7, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -7, 43, 59, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -6, 21, 52, -6, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -6, 41, 48, -6, 42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -6, 43, 59, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -5, 43, 52, -5, 43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -4, 43, 48, -3, 43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -2, -56, 47, -2, -56, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 47, -1, 17, 47, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, -1, 46, 48, -1, 46, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 47, 0, 33, 47, 0, 34, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 47, 0, 35, 50, 0, 35, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 47, 0, 44, 48, 0, 46, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 47, 1, -45, 47, 4, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 1, -1, 47, 8, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 1, 17, 47, 3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 1, 25, 47, 3, 25, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 47, 1, 26, 47, 3, 28, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 1, 29, 47, 3, 29, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 47, 1, 30, 47, 2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 1, 32, 47, 4, 32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 2, -46, 48, 2, -46, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 47, 3, -46, 48, 3, -46, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 47, 3, 30, 47, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 4, -44, 47, 4, -42, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 47, 4, 25, 47, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 4, 27, 47, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 6, 17, 47, 7, 17, Index.HEDGE_SPRUCE.getDefaultState().with(Hedge.STATE, HedgeState.NONE).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 47, 6, 19, 47, 6, 22, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 47, 6, 24, 47, 7, 24, Index.HEDGE_SPRUCE.getDefaultState().with(Hedge.STATE, HedgeState.NONE).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 47, 6, 25, 47, 9, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 7, -36, 48, 7, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 7, 6, 47, 7, 10, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 7, 19, 47, 7, 22, Index.SHELF_SPRUCE.getDefaultState().with(Shelf.FACING, Direction.WEST));
        structure.fillWithBlocks(world, start, 47, 8, 6, 47, 8, 10, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 9, -2, 48, 9, -2, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 47, 9, 6, 47, 9, 10, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 10, -38, 48, 10, -37, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 47, 10, 2, 48, 10, 2, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 47, 10, 6, 47, 10, 10, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 47, 11, 1, 47, 12, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 47, 11, 8, 47, 13, 8, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 12, -3, 48, 13, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 13, -6, 47, 13, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 47, 13, -5, 47, 13, -4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 47, 13, 1, 48, 14, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 14, -3, 48, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 14, -2, 47, 14, -2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 47, 14, 0, 48, 14, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 47, 14, 23, 47, 14, 24, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 47, 15, -3, 47, 16, -3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 47, 15, -1, 47, 16, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 47, 17, -3, 47, 17, -1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 48, -14, 70, 52, -14, 74, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -13, -83, 54, -13, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -13, -76, 48, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -13, -74, 57, -13, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -13, 72, 49, -13, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -12, -82, 57, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -12, -59, 48, -12, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -12, -58, 48, -12, -54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -12, -21, 58, -12, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -12, 19, 48, -12, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -11, -43, 51, -11, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -11, -38, 48, -11, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -11, 43, 54, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -11, 67, 48, -11, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -8, 42, 49, -8, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -6, 61, 50, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -5, 46, 48, -3, 46, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 48, -1, -44, 48, -1, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -1, -42, 53, -1, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -1, 17, 59, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -1, 33, 49, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, -1, 44, 48, -1, 45, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 48, 0, -42, 48, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 0, 10, 49, 1, 10, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 0, 22, 56, 0, 22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, -45, 48, 4, -45, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, -44, 48, 4, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, -42, 48, 3, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, -38, 74, 1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, -8, 48, 2, -7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, 6, 48, 1, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, 22, 52, 3, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 1, 32, 48, 4, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 2, -43, 48, 3, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 2, -38, 74, 2, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 2, 10, 49, 2, 10, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 3, -38, 74, 3, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 3, -8, 48, 3, -7, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 48, 3, 10, 49, 3, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 48, 4, -43, 48, 4, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, -40, 56, 4, -40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, -39, 50, 4, -37, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, -36, 48, 4, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, 10, 51, 4, 15, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, 16, 51, 6, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, 17, 56, 4, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, 26, 52, 4, 26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 4, 27, 51, 4, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 48, 4, 31, 50, 4, 31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 48, 5, -36, 48, 5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 5, 17, 56, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 6, -36, 48, 7, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 6, 17, 48, 8, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 6, 25, 61, 10, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 7, 6, 48, 7, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 7, 7, 48, 9, 9, Blocks.SOUL_SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 7, 10, 53, 7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 7, 16, 48, 8, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 8, 6, 48, 8, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 8, 10, 53, 8, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 9, -38, 48, 9, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 48, 9, -3, 48, 9, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 9, 6, 48, 9, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 9, 10, 52, 9, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 9, 20, 48, 10, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 9, 21, 48, 9, 21, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 9, 22, 48, 10, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 10, -31, 49, 10, -31, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 48, 10, -3, 48, 10, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 10, 6, 48, 10, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 10, 7, 48, 10, 9, Blocks.BUBBLE_COLUMN.getDefaultState().with(BubbleColumnBlock.DRAG, false));
        structure.fillWithBlocks(world, start, 48, 10, 19, 48, 10, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 11, -3, 48, 14, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 11, 1, 48, 14, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 11, 19, 48, 14, 19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 11, 20, 48, 14, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 11, 22, 48, 14, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());

    }
    
    public static void generatePart20()
    {
        structure.fillWithBlocks(world, start, 48, 11, 23, 48, 12, 23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 48, 11, 24, 48, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 11, 25, 48, 14, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 12, 21, 48, 13, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 13, 23, 48, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 14, -5, 48, 14, -4, Blocks.CYAN_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 14, -2, 48, 14, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 48, 14, 21, 48, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 48, 15, 24, 48, 15, 24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 48, 17, -3, 49, 17, -3, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 48, 17, -2, 49, 17, -1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 48, 17, 21, 48, 17, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 48, 17, 22, 48, 17, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 49, -13, -76, 50, -12, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -13, -75, 55, -13, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -12, -59, 50, -12, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -12, -57, 49, -9, -53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -12, -52, 49, -12, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -12, 20, 49, -7, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -12, 28, 73, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -11, -38, 50, -11, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -11, -37, 73, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -11, -12, 53, -11, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -11, 10, 52, -11, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -11, 67, 57, -11, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -8, -76, 56, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -8, -53, 49, -8, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -7, -53, 49, -7, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -7, 36, 51, -7, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -6, -71, 51, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -6, 36, 51, -6, 42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -5, 38, 49, -5, 40, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 49, -4, 43, 50, -3, 43, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 49, -2, 43, 51, -1, 43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -1, -44, 53, -1, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -1, 10, 51, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 49, -1, 44, 49, -1, 46, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 0, -51, 49, 0, -49, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 49, 0, -40, 56, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 1, -40, 56, 1, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 1, -8, 51, 1, -8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 1, -7, 51, 1, -7, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 49, 1, 32, 51, 2, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 49, 2, -40, 56, 2, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 3, -40, 56, 3, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 3, 32, 52, 4, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 4, -45, 49, 4, -41, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 4, -36, 49, 5, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 4, -33, 54, 4, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 4, -27, 50, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 5, -2, 60, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 6, -36, 49, 9, -36, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 6, -35, 49, 7, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 6, -34, 49, 8, -34, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 6, -2, 60, 6, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 7, -2, 60, 7, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 8, -37, 54, 8, -37, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 8, -35, 49, 8, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 8, -2, 60, 8, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 9, -35, 49, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 9, -31, 49, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 9, -3, 54, 9, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 9, 20, 53, 9, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 10, -19, 49, 10, -18, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 49, 10, -3, 49, 10, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 10, 7, 49, 10, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 10, 19, 52, 10, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 11, -3, 49, 14, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 11, -2, 49, 13, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 11, 1, 49, 14, 1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 11, 19, 49, 14, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 11, 25, 49, 14, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 14, -2, 49, 14, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 49, 14, 20, 49, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 49, 15, -1, 49, 16, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 49, 17, 21, 49, 19, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 49, 17, 22, 49, 17, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 49, 20, 21, 49, 20, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 50, -13, 72, 51, -13, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, -57, 51, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, -54, 50, -12, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, -51, 63, -12, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, 19, 52, -12, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, 22, 50, -9, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, 26, 71, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, 68, 51, -12, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -12, 70, 50, -12, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, -81, 63, -11, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, 8, 53, -11, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, 35, 54, -9, 35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, 36, 51, -11, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, 42, 56, -11, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, 52, 50, -10, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, 54, 55, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -11, 60, 56, -11, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -8, -53, 53, -8, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -8, -48, 76, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -8, 33, 52, -8, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -7, -53, 54, -7, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -7, -48, 57, -7, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -7, 26, 51, -7, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -6, 64, 51, -6, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -5, 22, 52, -5, 35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -4, 18, 51, -4, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -3, 18, 51, -3, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -2, 18, 51, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -2, 44, 50, -2, 46, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -1, -48, 56, -1, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, -1, 33, 51, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 0, -48, 54, 0, -48, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 50, 3, -45, 50, 3, -41, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 4, -36, 51, 4, -35, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 4, -34, 55, 5, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 6, -35, 51, 6, -35, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 50, 6, -34, 54, 7, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 8, -34, 50, 10, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 9, -36, 51, 9, -35, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 9, -29, 52, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 10, -26, 50, 12, -26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 50, 10, -20, 51, 10, -20, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 50, 10, -19, 50, 10, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 10, -13, 50, 12, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 50, 10, -1, 50, 10, 0, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 50, 11, -34, 50, 14, -34, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, -33, 50, 14, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, -32, 50, 12, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 50, 11, -31, 50, 14, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, -30, 50, 14, -30, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, -21, 50, 12, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 50, 11, -19, 50, 14, -19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, -18, 50, 14, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, -17, 50, 12, -17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 50, 11, -16, 50, 14, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, -15, 50, 14, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 11, 19, 50, 12, 19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 50, 11, 25, 52, 12, 25, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 50, 13, -32, 50, 14, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 13, -26, 50, 13, -21, Blocks.GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 13, -17, 50, 14, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 13, -13, 54, 13, -13, Blocks.GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 13, 19, 52, 14, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 13, 25, 60, 14, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 14, -14, 54, 14, -14, Blocks.GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 14, 20, 50, 14, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 50, 14, 22, 52, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 50, 15, 21, 50, 19, 21, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 50, 15, 25, 52, 15, 25, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 50, 17, 19, 50, 17, 19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 50, 17, 20, 50, 19, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 50, 17, 22, 50, 19, 22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 50, 20, 20, 50, 20, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 51, -14, -85, 59, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -13, -76, 51, -13, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -12, -59, 56, -12, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -12, -53, 51, -11, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -12, 22, 70, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -12, 70, 57, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -11, -38, 75, -11, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -11, 2, 52, -11, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -11, 5, 56, -11, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -11, 41, 56, -11, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -11, 52, 58, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -6, 61, 53, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 51, -4, 43, 51, -1, 43, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 0, -41, 52, 0, -41, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 51, 0, 16, 73, 0, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 1, 10, 51, 2, 10, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 51, 1, 16, 51, 3, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 4, -39, 54, 4, -35, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 4, -27, 51, 5, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 4, 31, 52, 4, 31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 51, 5, -35, 53, 5, -35, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 51, 5, -33, 51, 8, -33, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 51, 5, 31, 52, 5, 31, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 5, 32, 52, 5, 32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 51, 6, 31, 52, 6, 31, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 51, 7, 31, 52, 7, 31, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 51, 8, -34, 54, 10, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 8, -30, 54, 10, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 9, -33, 51, 9, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 9, -18, 53, 9, -16, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 10, -19, 52, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 11, -34, 51, 14, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 11, -30, 51, 14, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 11, -19, 52, 12, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 11, -15, 51, 14, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 11, 19, 52, 12, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 13, -29, 51, 13, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 51, 13, -19, 52, 14, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 14, -33, 53, 14, -31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 51, 14, -29, 53, 14, -27, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 51, 14, -26, 51, 14, -21, Blocks.GRAY_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 51, 14, -18, 53, 14, -16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 51, 14, 20, 53, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 51, 17, 19, 51, 17, 19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 51, 17, 20, 51, 17, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 51, 17, 21, 51, 19, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 52, -13, -76, 66, -8, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -13, 72, 57, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -12, -53, 67, -12, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -12, 68, 59, -12, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, -67, 52, -9, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, -66, 55, -11, -63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, -62, 52, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, -40, 78, -11, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, 4, 58, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, 36, 53, -10, 36, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, 37, 52, -11, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, 40, 55, -11, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, 50, 52, -9, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -11, 51, 60, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -7, 26, 52, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -7, 32, 53, -7, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -7, 36, 60, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -7, 56, 62, -7, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -6, -71, 54, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -6, 36, 60, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -5, 36, 52, -5, 43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 18, 52, -4, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 20, 52, -2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 25, 52, -2, 28, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 52, -4, 29, 52, -2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 32, 53, -4, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 35, 52, -1, 35, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 36, 52, -3, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 38, 52, -3, 40, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 52, -4, 41, 52, -3, 42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -4, 43, 52, -1, 43, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -3, 18, 52, -3, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -3, 32, 52, -3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -3, 33, 52, -2, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -2, 18, 52, -2, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -2, 32, 52, -1, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -2, 36, 52, -1, 42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, -1, 10, 58, -1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 0, 10, 58, 0, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 0, 37, 52, 0, 41, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 52, 1, -9, 52, 1, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 1, -8, 52, 4, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 1, -4, 52, 1, 3, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 52, 1, 4, 53, 2, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 1, 5, 52, 2, 6, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 1, 7, 52, 4, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 1, 8, 53, 1, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 1, 10, 52, 3, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 1, 16, 56, 1, 16, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 52, 1, 32, 52, 4, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 2, -9, 52, 2, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 2, 8, 53, 2, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 3, -9, 52, 3, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 3, -4, 52, 3, 3, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 52, 3, 4, 52, 4, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 3, 5, 52, 3, 6, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 52, 3, 8, 53, 3, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 4, -9, 52, 4, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 4, -4, 52, 4, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 4, 8, 59, 4, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 4, 16, 56, 4, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 4, 27, 52, 4, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 52, 5, -33, 52, 10, -33, Blocks.LADDER.getDefaultState().with(LadderBlock.FACING, Direction.SOUTH).with(LadderBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 52, 7, -26, 61, 7, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 9, -36, 53, 9, -35, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 9, -32, 53, 9, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 9, -14, 55, 9, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 9, -10, 53, 9, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 10, -26, 53, 10, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 10, -24, 52, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 10, 10, 52, 10, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 11, -34, 52, 12, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 52, 11, -30, 52, 12, -30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 52, 11, -26, 52, 17, -26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 11, -25, 52, 15, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 11, -20, 52, 17, -20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 11, 10, 52, 14, 10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 11, 11, 52, 14, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 11, 12, 52, 12, 14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 52, 11, 15, 52, 14, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 12, -15, 53, 13, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 13, -34, 53, 14, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 13, -30, 53, 14, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 13, -29, 53, 13, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 52, 13, 12, 52, 14, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 14, -15, 53, 14, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 15, 11, 52, 15, 13, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 52, 16, -25, 52, 19, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 18, -26, 52, 20, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 18, -20, 52, 20, -20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 52, 20, -25, 52, 20, -21, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, -14, 70, 55, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -14, 74, 57, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -12, 19, 70, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, -67, 55, -11, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, -60, 54, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, 2, 61, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, 13, 55, -11, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, 16, 53, -7, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, 34, 54, -11, 35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, 37, 53, -11, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, 38, 53, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -11, 50, 62, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -8, 34, 60, -8, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -8, 35, 60, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -7, -74, 58, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -7, 34, 60, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -6, 21, 62, -6, 30, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -6, 31, 53, -6, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -6, 34, 60, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -5, 26, 53, -5, 27, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 53, -5, 32, 64, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -5, 33, 59, -2, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -5, 34, 60, -5, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -4, 18, 68, -2, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -4, 19, 54, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -4, 21, 68, -4, 21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -4, 34, 59, -1, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -3, 19, 54, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -3, 21, 69, -2, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -3, 32, 55, -3, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -2, 19, 54, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -2, 32, 55, -2, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, -1, 33, 59, -1, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 0, 19, 55, 0, 19, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, 0, 26, 53, 0, 29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 0, 31, 53, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, -9, 56, 1, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, -5, 53, 2, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, -4, 53, 1, 3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, 5, 63, 1, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, 22, 53, 3, 22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, 26, 53, 4, 26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, 27, 53, 4, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, 28, 53, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 53, 1, 29, 53, 4, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, 31, 53, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 1, 32, 53, 4, 32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 2, -9, 56, 2, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 2, 5, 63, 2, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 2, 16, 55, 2, 16, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, 2, 30, 53, 3, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 3, -9, 57, 3, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 3, -4, 53, 3, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 3, 4, 64, 3, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 3, 16, 55, 4, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 3, 28, 53, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 4, -27, 53, 4, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 5, -33, 53, 8, -33, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 53, 5, -27, 53, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 6, -26, 60, 7, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 7, -25, 53, 10, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 7, -24, 53, 9, -24, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 7, -23, 62, 7, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 8, -26, 53, 9, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 8, -23, 63, 8, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 9, -33, 53, 9, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 9, -29, 55, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 9, -22, 57, 9, -16, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 9, -15, 55, 9, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 9, 11, 61, 9, 19, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 10, -15, 55, 10, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 10, -10, 53, 10, -10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 53, 10, 6, 53, 12, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 53, 11, -34, 53, 14, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 11, -30, 53, 14, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 11, -26, 57, 15, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 11, -15, 53, 14, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 11, -10, 53, 11, -10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 53, 11, 10, 53, 14, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 11, 25, 58, 14, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 13, 2, 53, 13, 2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 53, 13, 6, 53, 13, 7, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 14, -23, 57, 18, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 14, -20, 58, 14, -20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 14, 8, 54, 14, 9, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 14, 11, 53, 14, 13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, 14, 14, 54, 14, 15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, 14, 16, 56, 14, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, 14, 17, 57, 14, 21, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, 15, -20, 57, 19, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 15, 11, 53, 15, 13, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 16, -26, 57, 19, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 16, 11, 53, 16, 13, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 53, 17, 11, 53, 17, 13, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 53, 19, -25, 55, 19, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 53, 19, -22, 54, 19, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 53, 20, -26, 53, 20, -26, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 53, 20, -20, 57, 20, -20, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 54, -14, 73, 59, -14, 78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -13, -84, 62, -13, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -13, 71, 60, -13, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -12, 67, 62, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -11, -61, 54, -11, -61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -11, -12, 72, -7, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -11, 1, 63, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -11, 12, 59, -11, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -11, 19, 54, -11, 35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -11, 36, 56, -11, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -11, 39, 55, -11, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -10, 67, 60, -10, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -8, -53, 71, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -8, 33, 55, -8, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -7, -75, 58, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -7, 26, 59, -7, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -7, 32, 59, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -7, 33, 60, -7, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -6, -72, 57, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -6, 31, 59, -6, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -6, 33, 60, -6, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -6, 61, 56, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -5, -53, 58, -5, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -5, 26, 54, -5, 27, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 54, -4, -53, 54, -1, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -4, -52, 54, -2, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -4, -49, 54, -1, -49, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -4, 32, 56, -4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -1, -52, 54, -1, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -1, -40, 73, -1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, -1, 32, 55, -1, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 0, -42, 54, 0, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 54, 0, 25, 55, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 0, 26, 55, 0, 26, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 54, 1, -5, 54, 1, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 1, -4, 54, 2, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 1, 4, 65, 1, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 1, 22, 55, 2, 22, Index.HEDGE_OAK.getDefaultState().with(Hedge.STATE, HedgeState.STRAIGHT_Z).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 54, 1, 25, 55, 2, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 2, -5, 54, 2, -5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 2, 4, 65, 2, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 3, -4, 73, 3, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 3, 22, 55, 3, 22, Index.HEDGE_OAK.getDefaultState().with(Hedge.STATE, HedgeState.STRAIGHT_Z).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 54, 3, 25, 55, 3, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 4, -27, 60, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 4, -26, 64, 4, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 4, -9, 55, 4, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 4, 26, 55, 4, 31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 54, 4, 32, 55, 4, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 54, 5, -38, 54, 5, -37, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 54, 5, -26, 64, 5, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 5, 26, 55, 5, 28, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 54, 5, 29, 55, 5, 32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 54, 7, -25, 54, 9, -25, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 7, -24, 56, 7, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 8, -33, 54, 10, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 8, -26, 54, 8, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 8, -24, 56, 8, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 9, -36, 54, 9, -35, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 9, -26, 58, 10, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 9, -24, 55, 9, -23, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 9, -8, 56, 9, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 9, 10, 54, 9, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 10, -11, 54, 10, -11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 54, 11, -34, 54, 14, -34, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 11, -33, 54, 14, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 11, -32, 54, 12, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 54, 11, -31, 54, 14, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 11, -30, 54, 14, -30, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 11, -15, 54, 14, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 11, -11, 54, 11, -11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 54, 12, 10, 62, 14, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 13, -32, 54, 14, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 13, -29, 54, 13, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 54, 13, -23, 54, 18, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 13, 1, 54, 14, 1, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 54, 13, 2, 54, 14, 2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 54, 13, 3, 54, 14, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 54, 14, -29, 54, 14, -27, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 54, 14, -22, 56, 14, -22, Blocks.RED_WALL_BANNER.getDefaultState().with(WallBannerBlock.HORIZONTAL_FACING, Direction.SOUTH));
        structure.fillWithBlocks(world, start, 54, 14, -19, 55, 14, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 14, 11, 55, 14, 15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 54, 14, 22, 54, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 54, 15, -19, 55, 15, -19, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 54, 15, 2, 54, 15, 2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 54, 15, 11, 54, 15, 13, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 54, 20, -26, 54, 20, -25, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 54, 20, -24, 54, 24, -24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 54, 25, -24, 54, 25, -24, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 55, -12, -37, 58, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, -61, 56, -11, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, -59, 55, -11, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, 0, 65, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, 18, 56, -11, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, 20, 55, -7, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, 32, 55, -10, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, 34, 59, -11, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -11, 49, 65, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -7, -53, 57, -5, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -7, -52, 60, -7, -47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -5, -55, 55, -5, -54, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 55, -4, -53, 57, -2, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -4, -52, 57, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -4, 19, 56, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -3, -52, 57, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -3, 19, 56, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -2, -52, 57, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -2, 19, 56, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -1, -53, 57, -1, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -1, -52, 58, -1, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, -1, -41, 58, -1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 0, -53, 55, 0, -52, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 55, 0, -51, 55, 0, -49, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 55, 1, -5, 73, 1, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 2, -5, 73, 2, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 3, -50, 55, 3, -47, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 4, -39, 56, 4, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 4, -37, 55, 5, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 4, -33, 60, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 5, -38, 55, 5, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 6, -38, 55, 9, -38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 6, -37, 55, 7, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 6, -34, 55, 8, -34, Blocks.CHISELED_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 7, -25, 55, 7, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 8, -37, 55, 8, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 8, -26, 55, 8, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, -37, 55, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, -31, 59, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, -25, 56, 9, -23, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, -10, 56, 9, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, 2, 55, 14, 2, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, 3, 61, 9, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, 10, 60, 10, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 9, 20, 59, 9, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 10, -36, 55, 10, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 55, 10, -31, 56, 10, -31, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 55, 10, -25, 55, 10, -25, Blocks.CAMPFIRE.getDefaultState().with(CampfireBlock.FACING, Direction.NORTH).with(CampfireBlock.LIT, true).with(CampfireBlock.SIGNAL_FIRE, false).with(CampfireBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 55, 10, -14, 55, 10, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 11, -15, 55, 12, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 11, -13, 55, 14, -13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 11, 10, 62, 14, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 13, -15, 55, 14, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 13, 0, 55, 13, 0, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 55, 13, 1, 55, 14, 1, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 55, 13, 3, 55, 14, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 55, 14, 22, 60, 14, 22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 55, 14, 23, 56, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 55, 15, 1, 55, 15, 1, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 55, 15, 10, 56, 15, 10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 55, 15, 25, 56, 15, 25, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 55, 19, -22, 56, 19, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 55, 20, -26, 55, 20, -26, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 55, 20, -25, 55, 24, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 20, -23, 55, 24, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 21, -24, 55, 22, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 23, -24, 55, 23, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 55, 25, -25, 55, 25, -25, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 56, -14, 70, 56, -14, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -13, -75, 66, -8, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -13, 68, 63, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, -67, 94, -9, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, -66, 58, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, -58, 56, -11, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, -10, 56, -11, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, -1, 67, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, 20, 57, -11, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, 22, 56, -11, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -11, 31, 65, -11, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -8, 33, 57, -8, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -5, 22, 57, -5, 22, Index.SUPPORT_BRACKET_SPRUCE.getDefaultState().with(SupportBracket.FACING, Direction.NORTH).with(SupportBracket.MOUNT, MountState.FULL).with(SupportBracket.SUPPORTING, Direction.UP));
        structure.fillWithBlocks(world, start, 56, -3, 32, 58, -3, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -2, 32, 58, -2, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, -1, 32, 57, -1, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 0, -53, 57, 0, -53, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 56, 0, -52, 57, 0, -52, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 56, 0, 26, 56, 0, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 1, 22, 56, 3, 22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 1, 26, 56, 4, 26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 1, 27, 56, 4, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 1, 28, 56, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 56, 1, 29, 56, 4, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 1, 30, 56, 4, 30, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 3, -47, 57, 3, -47, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 56, 3, 28, 56, 4, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 4, -50, 57, 4, -47, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 4, -37, 60, 4, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 4, -15, 56, 4, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 4, -3, 63, 4, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 4, 31, 57, 4, 31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 56, 4, 32, 59, 4, 32, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 5, -38, 61, 5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 5, 31, 57, 5, 31, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 56, 6, -38, 57, 7, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 6, -11, 56, 7, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 6, -3, 56, 6, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 7, -25, 56, 9, -25, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 7, -12, 56, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 8, -38, 60, 8, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 8, -26, 56, 8, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 9, -38, 60, 9, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 9, -37, 60, 9, -33, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 56, 9, -32, 60, 9, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 9, -15, 57, 9, -14, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 9, -13, 57, 9, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 9, -11, 56, 9, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 10, -27, 57, 10, -27, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 56, 10, -25, 56, 10, -25, Blocks.FIRE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 10, -13, 61, 10, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 11, -13, 56, 14, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 13, -23, 56, 18, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 13, 1, 56, 14, 1, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 56, 13, 2, 56, 14, 2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 56, 13, 3, 56, 14, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 56, 14, -19, 60, 14, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 14, -18, 60, 14, -14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 56, 14, 11, 56, 14, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 56, 19, -25, 58, 19, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 56, 20, -26, 56, 20, -25, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 56, 20, -24, 56, 24, -24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -14, 70, 60, -14, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -14, 71, 63, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -13, 67, 65, -13, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -12, -59, 75, -12, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, -58, 57, -11, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, -57, 57, -11, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, -9, 57, -11, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, -3, 70, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, 11, 61, -11, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, 23, 57, -7, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, 29, 65, -11, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, 43, 57, -9, 47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, 48, 69, -11, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -11, 61, 60, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -8, -74, 62, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -6, 61, 59, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -4, 19, 58, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -4, 32, 59, -4, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -3, 19, 58, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -2, 19, 58, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, -1, -46, 57, -1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 0, -8, 75, 0, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 0, 34, 59, 0, 34, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 57, 1, -9, 73, 1, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 1, 16, 59, 3, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 1, 30, 57, 4, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 2, -41, 57, 2, -41, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 57, 2, -40, 57, 2, -40, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 57, 2, -9, 73, 2, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 3, 33, 59, 3, 33, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 4, -38, 61, 5, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 4, -15, 60, 4, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 4, -11, 63, 4, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 4, -4, 62, 4, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 4, 16, 60, 7, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 4, 17, 59, 4, 26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 4, 27, 59, 4, 29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 57, 5, -15, 60, 5, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 5, -3, 63, 5, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 5, 26, 57, 14, 26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 57, 6, -12, 63, 7, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 6, -3, 62, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 7, -25, 57, 7, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 7, -24, 57, 9, -24, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 8, -26, 58, 8, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 8, -3, 63, 8, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 9, -25, 57, 9, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 9, -23, 57, 9, -14, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 9, -11, 62, 9, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 9, -3, 59, 9, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 10, -38, 59, 10, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 57, 10, -32, 59, 10, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 57, 10, -25, 57, 10, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 10, -17, 57, 10, -16, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 57, 10, -4, 58, 10, -4, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 57, 11, -13, 57, 12, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 57, 13, -13, 60, 14, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 13, -12, 58, 13, -9, Blocks.PURPLE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 57, 14, 11, 63, 14, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 57, 14, 23, 58, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 57, 15, 26, 57, 15, 26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 57, 19, -22, 57, 19, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 57, 20, -26, 57, 20, -26, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 58, -13, -74, 58, -13, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -12, -82, 67, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -11, -58, 59, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -11, -56, 58, -11, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -11, -8, 58, -11, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -11, -5, 70, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -11, 23, 63, -11, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -8, 33, 59, -8, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -7, -53, 63, -7, -47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -7, -46, 58, -6, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -7, -44, 64, -7, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -6, -72, 58, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -5, 35, 58, -5, 35, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 58, -4, -53, 58, -3, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -4, -52, 58, -3, -51, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -4, -49, 58, -4, -47, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 58, -4, -45, 58, -1, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -4, -44, 58, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -3, -49, 58, -3, -47, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 58, -3, -44, 58, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -2, -53, 71, 0, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -2, -52, 58, -2, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -2, -44, 70, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -1, -46, 59, -1, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -1, -44, 60, -1, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, -1, 32, 59, -1, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 0, -52, 58, 0, -50, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 0, -48, 58, 0, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 1, -53, 58, 4, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 1, -52, 58, 4, -52, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 1, -51, 58, 2, -51, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 58, 1, -50, 58, 4, -50, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 1, -48, 58, 4, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 1, -47, 58, 4, -47, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 2, -49, 58, 3, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 2, -42, 58, 3, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 58, 2, -41, 58, 3, -41, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 58, 2, -40, 58, 3, -40, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 58, 2, 30, 59, 3, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 3, -51, 58, 4, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 3, -9, 73, 3, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 4, -41, 58, 4, -41, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 58, 4, 30, 59, 4, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 4, 31, 59, 4, 32, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 5, -50, 58, 7, -50, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 58, 5, 26, 58, 14, 26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 58, 6, -38, 58, 7, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 58, 7, -25, 64, 7, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 8, -50, 60, 8, -47, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 58, 8, -24, 65, 8, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 9, -25, 62, 9, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 9, -18, 60, 9, -14, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 9, -13, 59, 9, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 10, -31, 60, 10, -31, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 58, 10, -25, 58, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 10, -6, 58, 10, -4, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 58, 11, -26, 58, 17, -26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 11, -25, 58, 15, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 11, -20, 58, 17, -20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 11, -19, 60, 13, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 11, -13, 60, 13, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 14, 20, 60, 14, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 58, 14, 21, 59, 14, 22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 58, 15, 24, 58, 15, 24, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 58, 16, -25, 58, 19, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 18, -26, 58, 20, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 18, -20, 58, 20, -20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 58, 20, -25, 58, 20, -21, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 59, -13, -74, 60, -13, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -13, 52, 73, -13, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -12, -36, 62, -12, -33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -12, -32, 59, -12, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -12, -20, 62, -12, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -12, 18, 70, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -11, -66, 94, -9, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -11, -65, 62, -11, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -11, -55, 59, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -8, -68, 73, -8, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -7, -74, 64, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -7, -46, 64, -7, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -6, -71, 60, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -6, -52, 63, -6, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -6, -44, 73, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -5, -53, 66, -5, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -5, -52, 59, -5, -51, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 59, -5, -44, 73, -5, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -5, 35, 59, -5, 36, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 59, -4, -53, 60, -3, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -4, -44, 75, -3, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -4, -43, 72, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -4, 19, 60, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -3, -43, 72, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -3, 19, 60, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -3, 26, 59, -2, 28, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 59, -3, 32, 59, -2, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -2, 19, 60, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -1, -52, 66, -1, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, -1, -41, 59, 3, -41, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 0, -47, 65, 0, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 0, -46, 60, 0, -46, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 59, 0, 15, 60, 0, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 0, 30, 60, 0, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 0, 33, 59, 2, 33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 59, 1, -53, 60, 2, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 1, -47, 60, 2, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 1, 30, 59, 4, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 2, -43, 59, 2, -43, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 59, 2, -42, 59, 3, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 59, 2, -40, 59, 3, -40, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 59, 3, -53, 67, 4, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 3, -47, 63, 4, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());

    }
    

}
