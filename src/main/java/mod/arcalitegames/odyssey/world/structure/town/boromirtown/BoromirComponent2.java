package mod.arcalitegames.odyssey.world.structure.town.boromirtown;

import mod.arcalitegames.buildersaddition.Index;
import mod.arcalitegames.buildersaddition.blocks.Cabinet;
import mod.arcalitegames.buildersaddition.blocks.Cupboard;
import mod.arcalitegames.buildersaddition.blocks.Pillar;
import mod.arcalitegames.buildersaddition.blocks.Shelf;
import mod.arcalitegames.buildersaddition.blocks.Stool;
import mod.arcalitegames.buildersaddition.state.PillarState;
import mod.arcalitegames.buildersaddition.state.StoolState;
import mod.arcalitegames.odyssey.world.structure.StructureBase;
import net.minecraft.block.AbstractFurnaceBlock;
import net.minecraft.block.BarrelBlock;
import net.minecraft.block.BedBlock;
import net.minecraft.block.Blocks;
import net.minecraft.block.CampfireBlock;
import net.minecraft.block.CarvedPumpkinBlock;
import net.minecraft.block.ChainBlock;
import net.minecraft.block.CropsBlock;
import net.minecraft.block.DirectionalBlock;
import net.minecraft.block.FarmlandBlock;
import net.minecraft.block.FourWayBlock;
import net.minecraft.block.HorizontalBlock;
import net.minecraft.block.LanternBlock;
import net.minecraft.block.LeavesBlock;
import net.minecraft.block.PistonBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.SnowyDirtBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.TrapDoorBlock;
import net.minecraft.block.WallBlock;
import net.minecraft.block.WallHeight;
import net.minecraft.block.WallTorchBlock;
import net.minecraft.state.properties.BedPart;
import net.minecraft.state.properties.DoubleBlockHalf;
import net.minecraft.state.properties.Half;
import net.minecraft.state.properties.SlabType;
import net.minecraft.state.properties.StairsShape;
import net.minecraft.util.Direction;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class BoromirComponent2
{
	public static BlockPos start;
    public static World world;
    public static StructureBase structure;

    public static void init(World worldIn, BlockPos blockPos, StructureBase structureIn)
    {
        world = worldIn; start = blockPos; structure = structureIn;
    }
    
    public static void generatePart21()
    {
        structure.fillWithBlocks(world, start, -38, 7, 2, -34, 7, 9, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 7, 17, -38, 7, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -38, 7, 19, -38, 7, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -38, 7, 32, -38, 7, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 7, 35, -38, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -38, 7, 37, -38, 7, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 8, -4, -37, 8, -3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 8, 1, -37, 8, 2, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 8, 4, -34, 8, 4, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 8, 5, -38, 8, 6, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 8, 7, -38, 8, 9, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 8, 11, -33, 8, 11, Blocks.DARK_OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -38, 8, 12, -32, 8, 12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 8, 17, -38, 8, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 8, 19, -38, 8, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 8, 35, -38, 8, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -38, 8, 36, -38, 8, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 8, 37, -38, 8, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -38, 8, 44, -38, 8, 44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 9, -20, -32, 9, -20, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 9, -18, -38, 9, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -38, 9, 8, -36, 9, 8, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 9, 31, -38, 9, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -38, 9, 34, -38, 10, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -38, 9, 35, -38, 10, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 9, 36, -38, 10, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -38, 9, 37, -38, 9, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -38, 10, 31, -38, 10, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 11, -2, -33, 12, -2, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 11, 10, -37, 11, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 11, 31, -38, 11, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -38, 11, 34, -38, 11, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -38, 12, -1, -38, 13, 9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 12, 10, -33, 12, 10, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -38, 12, 31, -38, 12, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -38, 12, 34, -38, 12, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -38, 12, 35, -38, 12, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -38, 13, -2, -34, 13, -2, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -38, 13, 10, -34, 13, 10, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -38, 13, 34, -38, 13, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -38, 14, 0, -38, 14, 8, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -37, -11, -80, -12, -11, -80, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, -11, -79, -33, -11, -75, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -11, -74, -33, -11, 92, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -11, 103, -36, -11, 105, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -10, -79, -33, -10, -79, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, -10, -78, -34, -10, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -10, -72, -37, -10, -72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -10, -71, -37, -9, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -10, 87, -33, -10, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -10, 92, -37, -10, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, -64, -14, -9, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, -35, -35, -9, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, -25, -25, -9, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, -9, -28, -9, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, -8, -32, -9, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, -1, -34, -6, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, 69, -34, -9, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, 73, -36, -8, 73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, 74, -21, -9, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -9, 91, -33, -9, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, -75, -29, -8, -53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, -40, -37, -8, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, -39, -37, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, -19, -32, -8, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, 6, -36, -8, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, 10, -22, -8, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, 62, -23, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -8, 83, -33, -8, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -7, -75, -29, -7, -75, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, -6, -74, -36, -6, -73, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, -5, -72, -35, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, -5, 88, -35, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, -4, -26, -35, -4, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -4, -14, -34, -4, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -4, 8, -36, -4, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -4, 11, -37, -4, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -3, -51, -34, -3, -48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -3, -47, -37, -3, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -3, -26, -36, -3, -26, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -3, -25, -35, -3, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -2, -14, -37, 1, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -2, 46, -27, -2, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, -60, -34, -1, -57, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, -1, -27, -34, -1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, -10, -36, -1, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, -8, -37, -1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, -7, -37, -1, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, -6, -37, 0, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, -3, -35, 1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, -2, -33, -1, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, 3, -36, -1, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, 12, -37, 1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, 16, -37, -1, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, 23, -36, -1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, 26, -37, -1, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, -1, 33, -34, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, -48, -37, 0, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, 0, -47, -37, 0, -33, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, -29, -37, 0, -28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, 0, -26, -35, 0, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, -10, -35, 0, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, -7, -37, 2, -7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, -2, -35, 0, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, 13, -37, 2, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, 16, -37, 2, 18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, 19, -37, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, 22, -37, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, 23, -37, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 0, 50, -36, 0, 52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, 1, -50, -37, 1, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, -26, -35, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, -10, -35, 1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, -6, -37, 1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, 23, -37, 1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, 27, -37, 3, 27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, 28, -37, 2, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, 33, -37, 1, 33, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, 1, 35, -36, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, 1, 49, -36, 2, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 1, 53, -36, 2, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, -29, -37, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, -10, -36, 2, -9, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -37, 2, -8, -37, 2, -8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, -3, -35, 2, -3, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 11, -34, 2, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 12, -37, 2, 12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 14, -36, 2, 15, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 19, -37, 2, 21, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 23, -37, 2, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 26, -37, 2, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 34, -37, 10, 34, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 35, -36, 2, 36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 2, 38, -37, 2, 45, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, -26, -37, 3, -26, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, -11, -37, 5, -11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, -5, -36, 3, -4, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, -2, -35, 4, -2, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, -1, -35, 3, 9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, 11, -35, 3, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, 12, -35, 3, 12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -37, 3, 26, -36, 3, 26, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -37, 3, 28, -37, 3, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, 49, -36, 4, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 3, 53, -36, 4, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 4, -23, -37, 5, -23, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 4, 20, -37, 7, 20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 4, 21, -37, 4, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 5, -2, -35, 5, -2, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 5, 16, -37, 6, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -37, 5, 17, -37, 6, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 5, 18, -37, 6, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 5, 21, -37, 6, 21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 5, 22, -37, 6, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 5, 33, -37, 5, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 5, 43, -37, 6, 43, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 5, 44, -37, 7, 44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 5, 45, -37, 7, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 5, 46, -37, 6, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 5, 47, -37, 6, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 5, 49, -36, 6, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 5, 53, -36, 6, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 6, -54, -35, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 6, -33, -37, 7, -33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 6, -32, -37, 8, -32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 6, -31, -37, 8, -31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 6, -30, -37, 7, -30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 6, -29, -37, 7, -29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 6, -11, -36, 6, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 6, -3, -35, 6, -3, Blocks.DARK_OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -37, 6, -2, -35, 6, -2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 6, 11, -35, 6, 11, Blocks.DARK_OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -37, 6, 33, -37, 7, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 6, 35, -37, 6, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 7, -2, -35, 7, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 7, 31, -36, 7, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 7, 32, -36, 7, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 7, 35, -37, 7, 36, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 7, 49, -36, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 7, 53, -36, 7, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 8, -17, -37, 8, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -37, 8, -2, -35, 8, -2, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 8, 3, -36, 8, 4, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 8, 5, -37, 9, 5, Blocks.CARVED_PUMPKIN.getDefaultState().with(CarvedPumpkinBlock.FACING, Direction.WEST));
        structure.fillWithBlocks(world, start, -37, 8, 6, -37, 8, 6, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 8, 8, -36, 8, 9, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 8, 10, -35, 8, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 8, 31, -37, 8, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 8, 32, -37, 8, 33, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 8, 35, -37, 8, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 8, 37, -36, 8, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 8, 38, -36, 8, 38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 9, -31, -37, 9, -31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 9, -21, -33, 9, -21, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -37, 9, -19, -33, 9, -19, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -37, 9, 4, -37, 9, 4, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 9, 6, -37, 9, 6, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 9, 30, -37, 9, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 9, 32, -37, 9, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 9, 35, -36, 9, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 9, 36, -36, 9, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 9, 37, -36, 9, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 9, 38, -36, 9, 38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -37, 10, -2, -33, 10, -2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 10, 10, -33, 10, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 10, 29, -37, 10, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 10, 30, -37, 10, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 10, 32, -37, 10, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 10, 33, -37, 10, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -37, 11, 29, -37, 11, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -37, 11, 30, -37, 11, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 11, 32, -37, 11, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 11, 33, -37, 11, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -37, 12, -1, -34, 13, -1, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 12, 9, -36, 12, 10, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 12, 30, -37, 12, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -37, 12, 32, -37, 12, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -37, 12, 33, -37, 12, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -37, 13, 0, -37, 14, 8, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 13, 9, -34, 13, 9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -37, 13, 33, -37, 13, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -37, 14, -1, -35, 14, -1, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -37, 14, 9, -35, 14, 9, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -36, -10, -72, -33, -10, 92, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -10, 93, -33, -10, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -9, -69, -36, -9, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -9, -31, -36, -9, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -9, 16, -35, -9, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -9, 17, -30, -9, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, -40, -35, -8, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, -38, -36, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, 9, -22, -8, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, 61, -21, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, 77, -35, -8, 79, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, 80, -36, -5, 80, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -8, 81, -30, -8, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -6, 91, -35, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, -4, -61, -34, -4, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, -4, -22, -34, -4, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -4, -18, -36, -4, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -4, -10, -34, -4, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -4, -7, -35, -4, -6, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -4, -5, -24, -4, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -4, 11, -36, -4, 11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -4, 12, -36, -4, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, -55, -32, -3, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, -47, 9, -3, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, -34, -36, -2, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, -27, -36, -3, -26, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, -15, -33, -3, -12, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -36, -3, -10, -34, -3, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, -7, -35, -3, -6, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, -5, -22, -3, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, 35, -34, -3, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -3, 38, -35, -3, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -2, -20, -36, -2, -19, Blocks.IRON_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -36, -2, -14, -36, 0, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -2, -11, -31, -2, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -2, 44, -36, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -2, 57, -34, -2, 59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, -1, -11, -34, -1, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, -8, -35, -1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, -6, -36, -1, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, -4, -36, -1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, 12, -29, -1, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, 13, -36, 1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, 26, -36, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, 27, -36, -1, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, -1, 54, -34, -1, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 0, -52, -36, 0, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -50, -33, 0, -47, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 0, -46, -32, 0, -42, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -41, -34, 0, -36, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -35, -36, 0, -33, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -32, -35, 0, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -30, -36, 0, -30, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 0, -29, -36, 0, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -27, -35, 0, -27, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 0, -11, -33, 0, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -7, -36, 0, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -6, -36, 2, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, -5, -31, 0, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 10, -36, 0, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 12, -35, 1, 12, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 18, -35, 1, 18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 19, -36, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 20, -36, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 21, -36, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 23, -35, 1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 24, -36, 1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 26, -36, 2, 26, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 27, -35, 0, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 29, -36, 0, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 31, -36, 0, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 0, 33, -34, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -50, -35, 1, -50, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -49, -35, 1, -49, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -48, -35, 1, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -32, -35, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -29, -36, 1, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -14, -36, 1, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -11, -33, 1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, -7, -36, 1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, 19, -36, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, 27, -36, 1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, 28, -36, 3, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, 31, -35, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 1, 33, -34, 1, 36, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 2, -32, -36, 2, -32, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 2, -30, -36, 2, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, -29, -36, 2, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, -27, -35, 2, -27, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, -26, -34, 2, -24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 2, -22, -32, 2, -18, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -36, 2, -8, -35, 2, -7, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, -5, -35, 2, -4, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -36, 2, 12, -35, 2, 12, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, 13, -36, 2, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, 18, -35, 2, 18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, 19, -36, 2, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, 21, -36, 2, 22, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, 24, -35, 2, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, 31, -36, 2, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 2, 42, -36, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 3, -31, -36, 8, -31, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 3, -26, -35, 3, -25, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 3, -21, -36, 3, -19, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -36, 3, -17, -36, 3, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 3, 10, -36, 3, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 3, 27, -36, 3, 27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 3, 31, -35, 3, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 4, -23, -36, 6, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 4, -17, -36, 6, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 4, -16, -36, 5, -16, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 4, -15, -36, 5, -13, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 4, -12, -36, 5, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 4, -11, -36, 6, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 5, 17, -36, 6, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -36, 5, 18, -36, 6, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -36, 5, 20, -36, 6, 20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 5, 21, -36, 6, 21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -36, 5, 32, -36, 5, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 5, 33, -36, 5, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 5, 37, -36, 5, 45, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -36, 6, -33, -36, 7, -33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 6, -32, -36, 8, -32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 6, -30, -36, 8, -30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 6, -29, -36, 7, -29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 6, -16, -36, 6, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 6, 31, -35, 6, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 6, 32, -36, 6, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 6, 33, -36, 6, 34, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 6, 35, -35, 6, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 6, 50, -34, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 7, -22, -36, 7, -18, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 7, -16, -36, 7, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -36, 7, 34, -36, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 7, 37, -36, 8, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 8, -22, -33, 8, -22, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -36, 8, -21, -36, 8, -19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 8, -18, -33, 8, -18, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -36, 8, -4, -35, 8, -3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 8, 2, -35, 8, 4, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 8, 5, -35, 8, 7, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 8, 30, -35, 8, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -36, 8, 31, -35, 8, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 8, 32, -36, 8, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 8, 34, -36, 8, 35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 9, -32, -36, 9, -32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 9, 3, -36, 9, 9, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 9, 30, -36, 9, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 9, 32, -36, 9, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 9, 34, -36, 9, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -36, 10, 29, -36, 10, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -36, 10, 30, -36, 10, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -36, 10, 32, -35, 10, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -36, 10, 33, -36, 10, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -36, 11, 10, -35, 11, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 11, 29, -36, 11, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -36, 11, 30, -36, 11, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -36, 11, 32, -35, 11, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -36, 11, 33, -36, 11, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -36, 12, 33, -36, 12, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -36, 13, 0, -36, 13, 0, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 13, 8, -35, 13, 9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -36, 14, 0, -35, 14, 8, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -11, 93, -35, -11, 93, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -11, 94, -35, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, -69, -18, -6, -69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, -68, -32, -9, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, -30, -35, -5, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, 33, -33, -9, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, 68, -31, -9, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -9, 73, -18, -9, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, -76, -13, -8, -76, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, -8, -38, -35, -8, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, -37, -35, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, 6, -19, -8, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, 47, -35, -8, 47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, 60, -19, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -8, 80, -28, -8, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -6, -74, -34, -6, -73, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, -5, -69, 0, -5, -69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, -5, 86, -34, -5, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -4, -68, -32, -4, -64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, -4, -63, -34, -4, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, -4, -18, -34, -4, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -4, -17, -33, -4, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -4, 8, -30, -1, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -4, 9, -34, -4, 12, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -3, -34, -29, -3, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -3, -27, -32, -3, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -3, -11, -32, -3, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -3, 48, -25, -3, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -2, -22, -35, 1, -16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -2, -15, -32, -2, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -2, 22, -34, -2, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -2, 24, -35, -1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -2, 26, -32, -2, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -2, 38, -35, -2, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, -14, -35, 0, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, -12, -32, -1, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, -6, -35, 1, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, -5, -34, -1, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 3, -35, 1, 3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 4, -29, -1, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 13, -35, 1, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 14, -35, -1, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 16, -33, -1, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 17, -34, -1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 23, -35, 1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 26, -34, -1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 28, -35, 1, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, -1, 32, -34, -1, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, -54, -35, 0, -52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 0, -35, -31, 0, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, -30, -34, 0, -29, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 0, -28, -35, 2, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, -15, -29, 0, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, -7, -35, 1, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 10, -34, 0, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 11, -35, 0, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 14, -35, 2, 14, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 16, -35, 2, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 17, -35, 0, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 19, -33, 0, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 22, -35, 1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 24, -35, 0, 25, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 0, 26, -32, 0, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 32, -35, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 0, 52, -34, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, -55, -35, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, -51, -35, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, -35, -31, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, -30, -35, 1, -29, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, -15, -29, 1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, 17, -35, 1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, 19, -33, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, 26, -33, 1, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, 37, -35, 1, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, 46, -33, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 1, 49, -33, 1, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -35, 1, 50, -33, 3, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, 52, -33, 3, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 1, 53, -33, 1, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -35, 2, -35, -33, 2, -33, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 2, -32, -35, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 2, -30, -34, 2, -29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 2, -23, -33, 2, -17, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -35, 2, -16, -32, 2, -13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 2, -12, -33, 2, -9, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -35, 2, -2, -31, 2, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 2, 4, -30, 2, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 2, 19, -35, 2, 21, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 2, 23, -35, 2, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 2, 31, -35, 3, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 2, 35, -35, 2, 36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 2, 37, -35, 5, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 3, -34, -35, 3, -33, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 3, -32, -35, 3, -31, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 3, -17, -32, 3, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 3, -5, -28, 3, -5, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 3, 10, -34, 3, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 3, 27, -35, 3, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 4, -34, -35, 4, -33, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 4, -23, -35, 5, -23, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 4, -17, -35, 5, -17, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 4, 50, -33, 5, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 4, 52, -33, 5, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 5, -52, -35, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 5, 36, -29, 5, 36, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -35, 5, 46, -24, 5, 46, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -35, 5, 49, -33, 5, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -35, 5, 53, -33, 5, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -35, 6, -33, -35, 7, -33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -35, 6, -32, -35, 7, -32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -35, 6, -31, -35, 8, -31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -35, 6, -30, -35, 7, -30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -35, 6, -29, -35, 7, -29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -35, 6, 32, -35, 6, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -35, 6, 38, -35, 6, 44, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -35, 7, -23, -33, 7, -23, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -35, 7, -17, -33, 7, -17, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -35, 7, 31, -35, 7, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -35, 7, 33, -35, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -35, 7, 35, -35, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -35, 8, -21, -35, 8, -19, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 8, 1, -35, 8, 4, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 8, 8, -34, 8, 9, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 8, 32, -35, 8, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -35, 8, 34, -35, 8, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -35, 9, 30, -35, 9, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -35, 9, 31, -35, 9, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -35, 9, 34, -35, 9, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -35, 10, 30, -35, 10, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -35, 10, 31, -35, 10, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -35, 10, 33, -35, 10, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -35, 11, 31, -35, 11, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -35, 11, 33, -35, 11, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -35, 12, 9, -34, 12, 10, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -35, 12, 33, -35, 12, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -35, 13, 0, -34, 13, 9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, 93, -33, -11, 94, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -11, 95, -32, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -10, 103, -33, -10, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -9, -77, -10, -9, -77, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, -9, -76, -27, -9, -69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -9, -30, -21, -9, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -9, 16, -31, -9, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -9, 67, -29, -9, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, -40, -31, -8, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, -36, -34, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, 47, -33, -8, 48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, 49, -34, -8, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, 59, -17, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, 77, -34, -7, 78, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -8, 79, -26, -8, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -6, 91, -33, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, -5, -72, -33, -5, -69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, -5, 88, -33, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, -4, -26, -34, -3, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -4, -24, -34, -4, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -4, -7, -21, -4, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -3, -60, -30, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -3, -35, -28, -3, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -3, -22, -33, -3, -12, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -34, -3, -7, -22, -3, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -3, 38, -30, -3, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -3, 45, -32, -3, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, -22, -32, -2, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, -17, -33, -1, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, -16, -32, -2, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, 24, -31, -2, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, 33, -33, -2, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, 37, -30, -2, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, 38, -30, -2, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -2, 45, -25, -2, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -1, -22, -30, -1, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -1, -16, -34, 1, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -1, -13, -33, -1, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -1, -8, -34, -1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -1, -7, -34, -1, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -1, 23, -30, -1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, -1, 28, -34, -1, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, -54, -32, 0, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, -52, -33, 0, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, -28, -34, 0, -28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, 0, -27, -34, 2, -27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, -26, -32, 0, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, -22, -30, 0, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, -17, -33, 1, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, -7, -34, 0, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 1, -34, 0, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 4, -32, 0, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 8, -34, 0, 8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 9, -34, 0, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 11, -31, 0, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 15, -32, 0, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 30, -33, 0, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 32, -34, 0, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 0, 50, -33, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, -55, -32, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -34, 1, -54, -32, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, -52, -32, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, -51, -32, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -34, 1, -49, -33, 1, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, -26, -32, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, -22, -30, 1, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, -7, -34, 1, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, 12, -32, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, 22, -33, 1, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, 29, -34, 3, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, 32, -34, 1, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, 37, -33, 1, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, 38, -30, 1, 44, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 1, 45, -26, 1, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, -31, -29, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, 2, -28, -34, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, -8, -34, 2, -8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, -7, -34, 2, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, -5, -33, 2, -4, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, 2, -3, -34, 2, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, 13, -34, 2, 27, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -34, 2, 32, -33, 2, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, 37, -33, 3, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, 38, -34, 2, 39, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -34, 2, 45, -24, 5, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 2, 47, -34, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, -35, -34, 3, -33, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, -4, -33, 3, -4, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, -3, -34, 6, -3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, -2, -34, 3, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, 1, -34, 3, 3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, 5, -34, 3, 7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, 9, -34, 3, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, 17, -34, 3, 18, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, 22, -34, 3, 23, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 3, 26, -33, 3, 27, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, -54, -32, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, -52, -32, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, -23, -34, 5, -23, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, -17, -34, 5, -17, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, -13, -34, 5, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 4, -12, -34, 5, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -34, 4, -11, -34, 5, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 4, -2, -34, 10, -2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, 2, -34, 6, 2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, 6, -34, 6, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, 10, -34, 10, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 4, 37, -29, 5, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 5, -55, -32, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -34, 5, -51, -32, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -34, 5, 38, -29, 5, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 6, -54, -32, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 6, -32, -34, 7, -32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 6, -31, -34, 7, -31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -34, 6, -30, -34, 7, -30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 6, -23, -32, 6, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 6, -1, -34, 6, 1, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 6, 3, -34, 6, 5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 6, 7, -34, 6, 9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 6, 32, -34, 6, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -34, 6, 37, -30, 6, 37, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -34, 6, 38, -34, 6, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 6, 45, -25, 6, 45, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -34, 7, -1, -33, 7, 1, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 7, 33, -34, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -34, 7, 35, -34, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 7, 39, -34, 7, 43, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -34, 8, -4, -33, 8, -3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 8, -1, -34, 8, 1, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 8, 5, -34, 8, 6, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 8, 30, -34, 9, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -34, 8, 31, -34, 9, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 8, 32, -34, 8, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -34, 8, 34, -34, 8, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -34, 9, 8, -34, 9, 9, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 9, 32, -34, 9, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 9, 34, -34, 9, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 10, 31, -34, 10, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -34, 10, 33, -34, 10, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -34, 11, 10, -33, 11, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 12, 0, -33, 12, 10, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -34, 14, 0, -34, 14, 8, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -33, -10, -78, -8, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, -10, -77, -29, -10, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -9, -1, -18, -9, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -9, 66, -27, -9, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -9, 103, -33, -9, 104, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, -50, -33, -5, -50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, -36, -33, -8, -36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, -35, -33, -8, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, -20, -29, -8, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, 49, -33, -8, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, 50, -33, -8, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, 58, -15, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, 77, -33, -5, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -8, 78, -24, -8, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -6, -74, -33, -6, -73, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, -5, 86, -32, -5, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -63, -33, -4, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -57, -33, -4, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -26, -32, -4, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -23, -33, -3, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -22, -33, -4, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -19, -28, -4, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -13, -32, -4, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, -11, -18, -4, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, 9, -33, -4, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, 10, -33, -4, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, 14, -24, -4, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, 37, -33, -4, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -4, 54, -27, -4, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -3, -63, -33, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, -3, -50, -33, -3, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -3, -36, -27, -3, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -3, 35, -33, -3, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -2, -60, -32, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, -2, -58, -25, -2, -50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -2, -49, -31, -2, -42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -2, -24, -33, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -2, 22, -33, -2, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -2, 36, -29, -2, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -2, 57, -32, -2, 58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, -1, -27, -30, -1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, -16, -33, -1, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, -14, -33, -1, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, -8, -33, 0, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, -6, -33, -1, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, 18, -33, -1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, 30, -33, -1, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, 32, -33, -1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, 33, -33, 1, 35, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, 36, -33, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, -1, 54, -31, -1, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 0, -41, -29, 0, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 0, -30, -33, 0, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 0, -28, -33, 0, -27, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 0, -16, -29, 0, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 0, -6, -33, 2, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 0, 1, -20, 0, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 0, 32, -33, 1, 35, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 0, 52, -33, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 1, -50, -32, 1, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 1, -47, -32, 1, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 1, -41, -29, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 1, -30, -33, 1, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 1, -16, -29, 1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 1, -7, -33, 1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 1, 29, -33, 1, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, -41, -29, 2, -36, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 2, -32, -32, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 2, -30, -33, 2, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, -28, -33, 2, -27, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, -26, -31, 2, -24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 2, -8, -33, 2, -7, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, -3, -24, 2, -3, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 2, 3, -30, 2, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, 11, -31, 2, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 2, 14, -33, 2, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, 26, -31, 2, 28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -33, 2, 29, -32, 2, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, 30, -33, 2, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 2, 46, -32, 2, 48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, -38, -33, 3, -38, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, -36, -33, 3, -36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, -34, -30, 3, -34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, -3, -31, 3, -3, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, -2, -31, 3, -2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, -1, -32, 3, 1, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 2, -31, 3, 2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 3, -32, 3, 5, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 6, -31, 3, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 7, -32, 3, 9, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 10, -31, 3, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 11, -33, 3, 11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 14, -33, 6, 14, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 15, -33, 3, 24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 25, -33, 6, 25, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 28, -32, 3, 28, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 3, 29, -33, 3, 31, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -33, 4, -23, -33, 5, -23, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 4, -17, -33, 5, -17, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 4, -14, -33, 5, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -33, 4, -13, -33, 5, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -33, 4, -12, -33, 6, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -33, 4, -11, -33, 5, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -33, 4, -10, -33, 5, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -33, 4, -2, -31, 4, -2, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -33, 4, 2, -31, 4, 2, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -33, 4, 6, -31, 4, 6, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -33, 4, 10, -31, 4, 10, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -33, 4, 15, -33, 5, 16, Blocks.INFESTED_COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 4, 17, -33, 6, 24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 5, -22, -33, 5, -18, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -33, 6, 15, -27, 6, 24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 6, 38, -30, 6, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 6, 44, -25, 6, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 6, 50, -31, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, -12, -33, 7, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -33, 7, -2, -33, 10, -2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, 2, -33, 10, 2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, 3, -33, 8, 5, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, 6, -33, 10, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, 7, -33, 8, 9, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, 10, -33, 10, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, 15, -33, 7, 24, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -33, 7, 33, -33, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -33, 7, 38, -31, 7, 38, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -33, 7, 39, -31, 7, 43, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 7, 44, -26, 7, 44, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -33, 8, -21, -33, 8, -19, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 8, -1, -33, 8, 1, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 8, 31, -33, 9, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -33, 8, 34, -33, 8, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -33, 9, -1, -33, 9, 1, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -33, 9, 3, -33, 9, 5, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -33, 9, 34, -33, 10, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -33, 10, -1, -33, 10, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 10, 33, -33, 10, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -33, 11, -1, -32, 11, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 12, -1, -33, 12, 10, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -33, 13, -1, -33, 13, 9, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -32, -11, -79, -28, -11, -79, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -11, -78, -28, -11, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -11, 93, -31, -11, 94, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -10, -72, -20, -7, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -10, -71, -28, -10, 92, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -10, 93, -29, -10, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -9, 33, -24, -5, 33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -9, 62, -32, -9, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -9, 64, -24, -9, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -9, 91, -30, -9, 95, Blocks.DIRT.getDefaultState());

    }
    
    public static void generatePart22()
    {
        structure.fillWithBlocks(world, start, -32, -8, -50, -24, -8, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, -36, -31, -8, -35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, -34, -32, -8, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, 47, -27, -8, 52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, 53, -32, -8, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, 55, -11, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, 77, -24, -8, 88, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -8, 89, -31, -8, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -7, -74, -12, -7, -74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -7, 84, -31, -7, 85, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -7, 86, -32, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -6, -73, -31, -6, -72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -6, 90, 0, -6, 90, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -6, 91, -31, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -5, 88, -13, -5, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -5, 89, -31, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -4, -63, -20, -4, -63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -4, -62, -27, -4, -57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, -56, -31, -4, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, -50, -32, -4, -50, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, -49, -32, -4, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, -22, -32, -4, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 9, -31, -4, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 11, -32, -4, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 37, -32, -3, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 38, -26, -4, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 49, -31, -4, 50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 51, -32, -4, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 53, -25, -4, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 61, -26, -4, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -4, 88, -13, -4, 88, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -3, -62, -31, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -3, -50, -30, -3, -50, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -3, -49, -31, -3, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -3, -46, -31, -3, -42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -3, -41, -32, 0, -38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -3, -37, -27, -3, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -3, -23, -30, -3, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -3, 35, -30, -3, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -3, 59, -30, -3, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, -2, -24, -32, -2, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -2, -17, -31, -2, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -2, 22, -32, 0, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -2, 23, -32, -2, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -2, 33, -29, -2, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, -23, -29, -1, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, -8, -32, -1, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, -6, -32, 1, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, -5, -28, -1, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 2, -29, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 14, -32, -1, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 15, -32, -1, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 17, -32, -1, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 19, -27, -1, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 28, -28, -1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 33, -32, -1, 35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 36, -32, 1, 36, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 37, -32, 0, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, -1, 38, -26, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, -52, -32, 0, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, -50, -31, 0, -47, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 0, -30, -32, 0, -30, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 0, -29, -32, 2, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, -28, -30, 0, -28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 0, -27, -23, 0, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, -8, -32, 0, -7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, 30, -32, 2, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, 31, -32, 0, 35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, 38, -26, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 0, 50, -32, 0, 52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 1, -27, -23, 1, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 1, -8, -32, 1, -7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 1, 23, -32, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 1, 31, -32, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 1, 33, -32, 1, 35, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 1, 37, -32, 1, 44, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 1, 46, -30, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 1, 49, -32, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 1, 53, -32, 7, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 2, -35, -30, 2, -33, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 2, -30, -32, 2, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 2, -28, -30, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 2, -27, -29, 2, -24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 2, -11, -31, 2, -9, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 2, -8, -32, 2, -7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 2, -5, -30, 2, -3, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -32, 2, 15, -31, 2, 16, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 2, 18, -27, 2, 24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 2, 25, -26, 2, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 2, 32, -30, 2, 32, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -32, 2, 43, -28, 2, 43, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -32, 3, -39, -31, 3, -38, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, -37, -32, 3, -34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, -27, -32, 5, -27, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -32, 3, -26, -32, 3, -26, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, -25, -32, 3, -24, Blocks.POPPY.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, -22, -32, 3, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, -12, -32, 6, -12, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, -4, -31, 3, -4, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, 11, -31, 3, 12, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, 14, -24, 6, 14, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, 17, -32, 6, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 3, 25, -27, 6, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 4, -26, -32, 4, -26, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 4, -23, -32, 6, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 4, -22, -32, 5, -22, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 4, -21, -32, 6, -19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 4, -18, -32, 5, -18, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 4, -17, -32, 6, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 4, -14, -32, 5, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -32, 4, -13, -32, 6, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -32, 4, -11, -32, 6, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -32, 4, -10, -31, 5, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -32, 5, 52, -32, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 6, -10, -32, 6, -9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -32, 6, -8, -32, 7, -8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -32, 7, -22, -32, 7, -18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 7, -13, -32, 7, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -32, 7, -11, -32, 7, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -32, 7, -9, -32, 7, -9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -32, 7, 14, -24, 7, 14, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -32, 7, 25, -27, 7, 25, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -32, 8, -21, -32, 8, -19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 8, -4, -32, 8, 12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 8, 16, -32, 8, 23, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -32, 10, -2, -32, 11, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -32, 12, -2, -32, 12, 10, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -31, -11, 95, -29, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -10, 101, -31, -9, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -9, -68, -17, -6, -68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -9, -67, -27, -9, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -9, -8, -28, -9, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -9, -4, -31, -8, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -9, -2, -18, -9, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -9, 62, -22, -9, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -8, -52, -30, -7, -52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -8, -51, -23, -8, -43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -8, -34, -31, -8, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -8, -32, -30, -8, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -8, -15, -31, -8, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -8, 53, -8, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -7, 86, -31, -7, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -7, 87, -31, -6, 90, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -7, 91, -30, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -5, -68, -7, -5, -68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, -5, 85, -28, -5, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, -67, -27, -4, -63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, -4, -50, -30, -4, -49, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, -26, -30, -4, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, -24, -31, -4, -22, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, -21, -27, -4, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, 11, -19, -4, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, 37, -24, -4, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, 51, -28, -4, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -4, 62, -20, -4, 88, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, -3, -55, -27, -3, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, -41, -31, -3, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, -27, -30, -3, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, -25, -31, -3, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, -24, -31, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, 29, -30, -3, 29, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, 30, -29, -3, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, 33, -30, -3, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, 45, -30, -3, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -3, 47, -20, -3, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, -60, -30, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, -2, -41, -31, -2, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, -40, -31, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, -23, -30, -2, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, -15, -30, -2, -14, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, -13, -28, -2, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, 19, -31, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, 20, -29, -2, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, 23, -31, 0, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, 28, -30, -2, 28, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, 29, -30, -2, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, 31, -29, -2, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -2, 57, -30, -2, 58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, -1, -12, -29, -1, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, -8, -31, 1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, -7, -30, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, 14, -31, -1, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, 15, -31, 0, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, 16, -27, -1, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, 33, -31, -1, 33, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, 34, -31, 0, 35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, -1, 36, -23, -1, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, -54, -30, 0, -52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, 0, -46, -31, 0, -42, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, -30, -31, 2, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, -29, -31, 0, -28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, 0, -7, -30, 0, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 16, -26, 0, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 29, -31, 0, 29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 30, -31, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 31, -31, 2, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 32, -21, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 33, -31, 0, 33, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 37, -24, 0, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 50, -29, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 0, 52, -30, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, -55, -30, 2, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, -51, -30, 2, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, -48, -31, 1, -47, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, -7, -30, 1, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 12, -29, 1, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 15, -31, 2, 15, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 16, -29, 1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 20, -29, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 23, -31, 2, 23, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 24, -27, 1, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 29, -31, 1, 29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 33, -31, 1, 33, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 34, -31, 1, 36, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 37, -29, 1, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 49, -29, 1, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -31, 1, 50, -29, 3, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 52, -29, 3, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 1, 53, -29, 1, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -31, 2, -29, -31, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 2, -23, -29, 2, -10, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -31, 2, -7, -30, 2, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 2, 14, -28, 2, 24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 2, 29, -31, 2, 29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 2, 30, -31, 2, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 2, 37, -29, 4, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 2, 46, -31, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, -55, -30, 4, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, -51, -30, 4, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, -36, -30, 3, -34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, -27, -30, 3, -26, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, -24, -30, 3, -23, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, -20, -31, 3, -18, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, 13, -28, 3, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, 17, -31, 5, 17, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 3, 23, -31, 3, 23, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -31, 4, -14, -31, 5, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -31, 4, -13, -31, 5, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -31, 4, -12, -31, 6, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -31, 4, -11, -31, 5, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -31, 4, 15, -30, 5, 15, Index.SHELF_OAK.getDefaultState().with(Shelf.FACING, Direction.SOUTH));
        structure.fillWithBlocks(world, start, -31, 4, 50, -29, 5, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 4, 52, -29, 5, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 5, -55, -30, 6, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 5, -51, -30, 6, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 5, 49, -29, 5, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -31, 5, 53, -29, 5, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -31, 6, -54, -29, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 6, -11, -31, 6, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -31, 6, -9, -31, 8, -9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -31, 6, -8, -31, 7, -8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -31, 6, -7, -31, 7, -7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -31, 7, -55, -30, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 7, -51, -30, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 7, -12, -31, 7, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -31, 7, -10, -31, 8, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -31, 7, -4, -30, 7, 11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -31, 8, -4, -31, 8, 12, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -31, 8, 15, -24, 8, 15, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -31, 8, 24, -28, 8, 24, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -31, 9, -9, -31, 9, -9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -31, 9, 17, -31, 9, 22, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -30, -11, 93, -22, -11, 93, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -11, 94, -27, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -10, 101, -30, -10, 101, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -10, 103, -30, -9, 104, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, -4, -30, -5, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, -3, -18, -9, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, 34, -30, -9, 34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, 35, -30, -9, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, 60, -21, -9, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -9, 101, -29, -9, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -8, -40, -27, -8, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -8, -14, 2, -8, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -8, 89, -27, -8, 89, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -8, 91, -28, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -8, 94, -29, -8, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, -8, 102, -30, -7, 102, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -7, 84, -30, -5, 84, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -7, 85, -27, -7, 88, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -7, 89, -27, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -6, -73, -29, -6, -72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, -6, 91, -30, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, -5, 89, -29, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, -4, -56, -24, -1, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, -55, -27, -4, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, -51, -30, -4, -49, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, -48, -30, -4, -43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, -42, -29, -4, -41, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, -40, -22, -4, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, -24, -30, -4, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, -23, -30, -4, -22, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, 9, -29, -4, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -4, 50, -30, -4, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -3, -62, -29, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, -3, -49, -29, -3, -49, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -3, -48, -25, -3, -43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -3, -42, -29, -3, -41, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -3, -40, -23, -3, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -3, -25, -29, -3, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, -49, -28, -2, -43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, -42, -30, -1, -41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, -39, -20, -2, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, -24, -30, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, -16, -29, -2, -15, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, -9, -29, -2, -8, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, -7, -21, -2, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, 19, -24, -2, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -2, 26, -29, -2, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -1, -8, -30, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -1, 14, -27, -1, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -1, 33, -30, 1, 35, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -30, -1, 54, -28, -1, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, 0, -50, -24, 0, -50, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, 0, -49, -24, 0, -40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 0, -30, -30, 0, -30, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, 0, -29, -30, 2, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 0, -8, -30, 2, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 0, -5, -27, 0, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 0, 29, -30, 0, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 0, 31, -30, 0, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 0, 36, -22, 0, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 1, -50, -27, 1, -50, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 1, -49, -26, 1, -40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 1, 15, -26, 1, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 1, 29, -30, 1, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 1, 31, -30, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 2, -49, -30, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, 2, -30, -30, 2, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 2, -2, -30, 2, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 2, 11, -28, 2, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, 2, 26, -28, 2, 28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -30, 2, 29, -30, 2, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 2, 47, -30, 2, 48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -42, -30, 3, -39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -38, -30, 3, -38, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -37, -30, 3, -34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -25, -29, 3, -21, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -20, -30, 3, -20, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -19, -30, 3, -16, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -9, -30, 8, -9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -4, -30, 3, -4, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, -1, -30, 3, 1, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, 3, -30, 3, 5, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, 7, -30, 3, 9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, 10, -30, 6, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, 11, -30, 3, 11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, 17, -28, 3, 17, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 3, 22, -30, 3, 22, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -30, 3, 26, -30, 3, 26, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 4, -20, -30, 4, -20, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 4, -13, -30, 5, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -30, 4, -12, -30, 5, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -30, 4, -10, -30, 8, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -30, 4, -2, -30, 6, -2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 4, -1, -30, 4, 1, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -30, 4, 2, -30, 6, 2, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 4, 3, -30, 4, 5, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -30, 4, 6, -30, 6, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 4, 7, -30, 4, 9, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -30, 6, -11, -30, 7, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -30, 6, -8, -30, 8, -8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -30, 6, -7, -30, 7, -7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -30, 6, -1, -30, 7, 1, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 6, 3, -30, 7, 5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 6, 7, -30, 7, 9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 6, 39, -30, 6, 41, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 6, 50, -28, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 7, -48, -30, 7, -42, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -30, 7, 39, -30, 7, 40, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -30, 7, 42, -29, 7, 43, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -30, 9, -10, -30, 9, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -30, 9, 16, -29, 9, 16, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -30, 9, 23, -29, 9, 23, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -30, 10, 17, -30, 10, 22, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -29, -10, 101, -28, -10, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -9, -4, -18, -9, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -9, 34, -28, -9, 35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -9, 36, -29, -9, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -9, 58, -21, -9, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -9, 91, -19, -9, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -9, 92, -27, -9, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -8, -52, -21, -8, -44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -8, -32, -29, -8, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -8, -30, -28, -8, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -8, -21, -29, -8, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -8, -15, 2, -8, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -7, 84, -28, -7, 88, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -6, 91, -13, -6, 91, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -5, 91, -13, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, -4, -51, -1, -3, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, -50, -28, -4, -49, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, -47, -25, -4, -43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, -24, -28, -4, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, 8, -28, -4, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, 24, -29, -2, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, 25, -28, -4, 25, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, 26, -19, -4, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, 49, -28, -3, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -4, 50, -28, -4, 50, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, -60, -25, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, -50, -29, -3, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, -27, -28, -3, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, -23, -28, -2, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, -22, -27, -3, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, 35, -29, 0, 35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, 36, -25, -3, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, 41, -26, -3, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, 45, -29, -3, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -3, 59, -27, -3, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, -2, -60, -28, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, -2, -42, -29, 1, -42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, -41, -29, -2, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, -40, -29, -2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, -21, -29, -2, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, -17, -28, -2, -16, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, -14, -28, -2, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, 28, -27, -2, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, 38, -29, -2, 40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, 41, -26, -2, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -2, 57, -28, -2, 58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, -1, -27, -27, -1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -1, -24, -29, 1, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -1, -8, -28, -1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -1, -6, -28, -1, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, -1, 25, -29, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, -54, -29, 0, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, -52, -28, 0, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, -30, -29, 2, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, -29, -29, 0, -29, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, 0, -28, -29, 2, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, -8, -28, 0, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, -6, -28, 1, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, 29, -29, 0, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, 30, -29, 0, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, 33, -21, 0, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 0, 52, -29, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, -55, -27, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -29, 1, -54, -27, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, -52, -27, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, -51, -27, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -29, 1, -8, -28, 1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, 29, -29, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, 30, -29, 1, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, 33, -27, 1, 36, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, 1, 38, -29, 1, 40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, 41, -26, 1, 44, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 1, 46, -27, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, 2, -48, -23, 2, -42, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, -35, -29, 2, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, -29, -29, 2, -29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, -9, -27, 2, -9, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, 2, -8, -28, 2, -7, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, -6, -28, 2, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, -5, -28, 2, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, 2, 29, -29, 2, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, 30, -29, 2, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, 32, -21, 2, 32, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -29, 2, 38, -29, 4, 40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 2, 46, -28, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, -48, -29, 5, -42, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, -40, -29, 3, -40, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, -38, -29, 3, -38, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, -35, -29, 3, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, -26, -29, 3, -20, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, -18, -29, 3, -17, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, -4, -28, 3, -1, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, 5, -29, 3, 5, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, 6, -29, 3, 6, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, 7, -29, 3, 8, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, 10, -29, 3, 10, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, 12, -28, 3, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 3, 27, -28, 3, 28, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 4, -54, -27, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 4, -52, -27, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 4, -35, -29, 5, -35, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 4, -34, -29, 4, -33, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 4, -32, -29, 5, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 4, 6, -29, 4, 6, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 5, -55, -27, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -29, 5, -51, -27, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -29, 5, -34, -29, 5, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 6, -48, -23, 6, -42, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 6, -35, -29, 6, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 6, -11, -29, 7, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -29, 6, -10, -29, 7, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -29, 6, -9, -29, 8, -9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -29, 6, -8, -29, 8, -8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -29, 6, -7, -29, 7, -7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -29, 6, 34, -29, 6, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -29, 6, 36, -29, 6, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -29, 6, 38, -29, 6, 39, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -29, 6, 41, -25, 6, 41, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -29, 7, -48, -28, 7, -48, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -29, 7, -47, -29, 7, -43, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -29, 7, -42, -29, 7, -42, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -29, 7, -41, -29, 7, -41, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -29, 7, -35, -29, 7, -32, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -29, 7, -4, -29, 7, 12, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -29, 7, 34, -29, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -29, 7, 35, -29, 7, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -29, 7, 36, -29, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -29, 7, 41, -26, 7, 41, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -29, 10, 17, -29, 10, 22, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, -10, -77, -23, -10, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -10, 93, -26, -10, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -9, 18, -22, -9, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -9, 25, -28, -5, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -9, 37, -28, -9, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -9, 52, -21, -9, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -8, -75, -23, -8, -75, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, -8, -54, -28, -5, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -8, -53, -20, -8, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -8, -32, -27, -8, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -8, -21, 2, -8, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -8, 94, -27, -8, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, -6, -73, -27, -6, -72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, -5, 89, -26, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, -4, -48, -21, -4, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -4, 24, -28, -4, 25, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -3, -62, -27, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, -3, -50, -19, -3, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -3, -28, -23, -3, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -3, 35, -23, -3, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -3, 45, -27, -3, 45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -3, 46, -16, -3, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, -41, -28, -2, -41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, -24, -28, -2, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, -19, -28, -2, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, -15, -28, -2, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, 26, -28, 1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, 27, -26, -2, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, 36, -27, -2, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, 37, -26, -2, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -2, 40, -25, -2, 40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -1, -24, -28, 2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -1, -23, -28, -1, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -1, -11, -28, -1, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -1, 2, -22, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -1, 13, -24, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -1, 27, -26, -1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, -1, 33, -17, -1, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, -54, -25, 0, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, -39, -26, 0, -37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, -35, -25, 0, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, -31, -26, 2, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, -30, -28, 0, -28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, 0, -12, -28, 1, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, -11, -28, 0, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, 29, -27, 0, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, 31, -27, 1, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 0, 50, -27, 0, 52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, 1, -39, -27, 1, -37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 1, -35, -25, 1, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 1, -11, -28, 1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 1, 12, -21, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 1, 29, -27, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 1, 37, -26, 1, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, 1, 40, -24, 1, 40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 1, 49, -27, 2, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 1, 53, -27, 2, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, -49, -23, 2, -41, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, -40, -28, 2, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, 2, -35, -25, 2, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, -30, -28, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, -27, -26, 2, -25, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, 2, -23, -28, 2, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, -12, -28, 2, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, -10, -27, 2, -9, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, 2, 29, -21, 2, 29, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -28, 2, 30, -27, 2, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, 31, -27, 2, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 2, 40, -24, 2, 40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, -49, -23, 3, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, -46, -28, 3, -45, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -28, 3, -41, -28, 5, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, -39, -28, 3, -37, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, -36, -26, 5, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, -31, -26, 3, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, -24, -27, 3, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, -22, -28, 6, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, 4, -27, 3, 5, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, 6, -28, 3, 6, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, 9, -28, 3, 9, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, 11, -28, 3, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, 26, -28, 3, 29, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, 40, -26, 3, 40, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -28, 3, 49, -27, 4, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 3, 53, -27, 4, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 4, -49, -28, 5, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 4, -46, -28, 4, -45, Blocks.FLOWER_POT.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 4, -31, -28, 5, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 4, -24, -28, 6, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 4, 2, -28, 5, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 4, 3, -28, 5, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -28, 4, 4, -28, 5, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 4, 40, -24, 5, 40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 5, 34, -28, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -28, 5, 35, -28, 5, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -28, 5, 37, -28, 5, 38, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 5, 41, -24, 5, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 5, 49, -27, 6, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 5, 53, -27, 6, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 6, -54, -26, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 6, -49, -23, 6, -41, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 6, -36, -22, 6, -36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 6, -31, -21, 6, -31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 6, -10, -28, 7, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 6, -9, -28, 7, -9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -28, 6, -8, -28, 7, -8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 6, 7, -28, 7, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 6, 8, -28, 7, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -28, 6, 9, -28, 7, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 6, 33, -28, 6, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -28, 6, 36, -28, 6, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 6, 40, -25, 6, 40, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 7, -40, -28, 7, -40, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -28, 7, -36, -22, 7, -36, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 7, -31, -21, 7, -31, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 7, -23, -28, 7, -19, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 7, -17, -28, 7, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 7, 35, -28, 7, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 7, 36, -28, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -28, 7, 42, -27, 7, 43, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 7, 49, -27, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 7, 53, -27, 7, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -28, 8, -48, -28, 8, -42, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 8, -34, -28, 8, -33, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 8, 34, -28, 8, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -28, 8, 35, -28, 8, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -28, 9, 17, -28, 9, 22, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -28, 9, 34, -28, 9, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -28, 9, 35, -28, 9, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -27, -11, -79, -22, -11, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, 100, -27, -11, 100, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -11, 102, -27, -11, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -10, -79, -26, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, -10, -71, -19, -7, -71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -10, -70, 3, -10, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -10, 87, -22, -10, 92, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -9, -9, -24, -9, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -9, -5, -21, -9, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -9, 30, -27, -9, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -9, 38, -19, -9, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -9, 48, -24, -9, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -8, -54, -19, -8, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -8, -29, -27, -5, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -8, 91, -25, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -7, 84, -27, -7, 84, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -6, -71, -5, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, -5, 85, -24, -5, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -4, -50, -18, -4, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -4, -24, -23, -4, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -4, -23, -23, -3, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -4, -22, -27, -3, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -4, 49, -25, -4, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -4, 52, -27, -4, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -3, -29, -26, -3, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -2, -60, -26, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, -2, -49, -21, 1, -49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -2, -48, -26, -2, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -2, -46, -27, -2, -43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -2, -42, -27, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -2, -23, -27, -2, -12, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -27, -2, -11, -20, -2, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -2, 26, -24, -2, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -2, 57, -26, -2, 58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, -1, -24, -18, -1, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, -23, -20, -1, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, -15, -24, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, -11, -22, -1, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, -10, -27, -1, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, -7, -27, 1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, -4, -26, -1, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, 25, -25, -1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, 30, -27, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, -1, 54, -25, -1, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, 0, -36, -23, 0, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 0, -30, -27, 0, -30, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, 0, -29, -27, 2, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 0, -28, -26, 0, -28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, 0, -12, -27, 0, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 0, -11, -27, 1, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 0, -10, -27, 1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 0, -8, -27, 2, -8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 1, -36, -23, 1, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 1, -12, -27, 1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -40, -27, 2, -40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -39, -27, 2, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, 2, -36, -22, 2, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -30, -27, 2, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -28, -26, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -24, -23, 2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -23, -20, 2, -16, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -15, -24, 2, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -7, -27, 2, -5, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, -2, -23, 2, 2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, 2, 3, -27, 2, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, 2, 14, -25, 2, 16, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, 17, -27, 2, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 2, 26, -24, 2, 29, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -27, 2, 46, -27, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, -40, -27, 5, -40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, -11, -27, 6, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, -4, -27, 3, -4, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, -3, -27, 3, -2, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, -1, -26, 3, 1, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, 7, -27, 3, 8, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, 10, -27, 3, 10, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, 12, -27, 3, 13, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, 17, -27, 5, 17, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, 26, -27, 3, 26, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, 27, -27, 3, 27, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 3, 28, -27, 3, 28, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 4, -49, -24, 4, -49, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 4, -24, -26, 5, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 4, -3, -27, 4, -2, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 4, 1, -27, 5, 1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 4, 2, -27, 5, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 4, 3, -27, 6, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -27, 4, 4, -27, 6, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 4, 5, -27, 5, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 4, 27, -27, 4, 27, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 4, 33, -27, 5, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 5, -49, -23, 5, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 5, -31, -21, 5, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 5, -23, -25, 5, -23, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 5, 34, -27, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -27, 5, 39, -24, 5, 39, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 6, -40, -27, 6, -40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 6, -24, -26, 6, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 6, 6, -27, 7, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 6, 7, -27, 7, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 6, 8, -27, 8, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -27, 6, 9, -27, 8, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 6, 10, -27, 7, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 6, 33, -27, 6, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -27, 6, 36, -26, 6, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 6, 37, -26, 6, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 6, 50, -25, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 7, -49, -24, 7, -49, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -27, 7, -48, -27, 8, -48, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -27, 7, -40, -26, 7, -40, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -27, 7, -24, -24, 7, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 7, -22, -22, 7, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 7, 3, -27, 7, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 7, 35, -27, 7, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 7, 36, -27, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 8, -41, -24, 8, -41, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 8, -35, -22, 8, -35, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 8, -32, -22, 8, -32, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 8, -23, -27, 8, -19, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 8, -17, -27, 8, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 8, 17, -27, 8, 23, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 8, 34, -27, 8, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 8, 35, -27, 8, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 9, -48, -27, 9, -43, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -27, 9, -34, -27, 9, -33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -27, 9, 8, -27, 9, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -27, 9, 34, -27, 9, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -27, 9, 35, -27, 9, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -27, 10, 34, -27, 10, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -26, -11, 94, -26, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -11, 100, -26, -11, 101, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, -76, -19, -9, -67, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, -66, -23, -9, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, -11, -21, -9, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, 30, -26, -9, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, 31, -26, -9, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, 47, -26, -9, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, 92, -24, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -9, 95, -26, -9, 96, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, -8, -40, -26, -8, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -8, -37, -18, -8, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -8, -28, -26, -8, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -8, -24, 2, -8, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -8, 47, 3, -8, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -8, 89, -22, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -7, 84, -25, -7, 85, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -7, 87, -21, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -6, -73, -24, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, -5, -67, -11, -5, -67, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, -5, 84, -22, -5, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -4, -66, -23, -4, -63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, -4, -62, -23, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -4, -58, -24, -4, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -4, -55, -26, -4, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -4, -22, -26, -3, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -4, -21, -26, -3, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -4, -19, -17, -4, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -4, 8, -9, -4, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, -62, -25, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, -3, -55, -26, -3, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, -53, -25, -3, -52, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, -32, -25, -2, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, -31, -25, -3, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, -19, -14, -3, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, 14, -25, -3, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, 30, -26, -2, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, 45, -13, -3, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -3, 59, -26, -3, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, -2, -46, -26, -2, -46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -2, -45, -26, -2, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -2, -41, -22, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -2, -23, -18, -2, -23, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -26, -2, -22, -20, -2, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -2, -15, -23, -2, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -2, 36, -23, -2, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -2, 46, -16, -2, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, -27, -24, -1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, -10, -26, 1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, -9, -26, -1, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, -8, -26, -1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, -6, -25, -1, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, 14, -26, 1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, 18, -24, -1, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, 19, -26, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, 21, -25, -1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, 23, -26, -1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, 30, -26, -1, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -26, -1, 31, -26, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, -30, -26, 0, -28, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, 0, -12, -26, 1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, -9, -26, 2, -9, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, -8, -26, 0, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, -6, -25, 0, -5, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, -3, -23, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, 29, -20, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, 30, -26, 2, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 0, 52, -25, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, -55, -26, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, -51, -26, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, -39, -26, 11, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, -38, -26, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, -8, -26, 1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, -6, -25, 1, -5, Blocks.GRAVEL.getDefaultState());

    }
    
    public static void generatePart23()
    {
        structure.fillWithBlocks(world, start, -26, 1, -3, -23, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, 31, -26, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, 33, -26, 1, 33, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, 1, 35, -22, 1, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, 1, 46, -24, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, 1, 49, -24, 1, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 1, 50, -24, 3, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, 52, -24, 3, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 1, 53, -24, 1, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 2, -40, -26, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, -38, -26, 2, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, 2, -30, -26, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, -10, -26, 2, -10, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, -8, -26, 2, -7, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, -6, -25, 2, -5, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, 4, -23, 2, 7, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, 2, 9, -23, 2, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -26, 2, 17, -26, 2, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, 22, -26, 2, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, 31, -23, 2, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 2, 34, -26, 7, 34, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, -43, -24, 3, -43, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -26, 3, -24, -26, 3, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, -11, -26, 5, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, -4, -26, 5, -4, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -26, 3, -3, -25, 3, 0, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 3, -26, 6, 3, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 6, -26, 3, 6, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 8, -26, 8, 8, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 9, -26, 3, 9, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 11, -26, 3, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 17, -26, 4, 18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 20, -26, 6, 20, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 22, -26, 6, 22, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 23, -26, 3, 24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 25, -26, 6, 25, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 3, 26, -26, 3, 26, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 4, -40, -25, 4, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 4, -31, -26, 5, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 4, 1, -26, 5, 1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 4, 2, -26, 6, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 4, 4, -26, 6, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 4, 5, -26, 5, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 4, 24, -26, 6, 24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 4, 32, -26, 5, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 4, 33, -26, 5, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 4, 50, -24, 5, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 4, 52, -24, 5, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 5, -52, -26, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 5, -40, -26, 6, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 5, 17, -26, 6, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 5, 21, -26, 6, 22, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 5, 23, -26, 6, 24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 5, 31, -26, 5, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -26, 5, 35, -26, 7, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 5, 49, -24, 5, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -26, 5, 53, -24, 5, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -26, 6, -11, -26, 7, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 6, 6, -26, 7, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 6, 7, -26, 8, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 6, 9, -26, 8, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 6, 10, -26, 7, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 6, 15, -24, 6, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 6, 31, -26, 6, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 6, 32, -26, 6, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 7, 2, -26, 7, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 7, 18, -26, 7, 24, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 7, 31, -26, 7, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -26, 7, 32, -26, 7, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 7, 33, -26, 7, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -26, 7, 42, -26, 7, 43, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 8, -24, -24, 8, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -26, 8, 16, -24, 8, 16, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 8, 31, -26, 8, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -26, 8, 32, -26, 8, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -26, 8, 33, -26, 8, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 9, -42, -25, 9, -42, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 9, -34, -23, 9, -34, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 9, -33, -23, 9, -33, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 9, -23, -26, 9, -19, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 9, -17, -26, 9, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -26, 9, 7, -26, 9, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -26, 9, 32, -26, 9, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -26, 9, 33, -26, 9, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -26, 10, -48, -25, 10, -43, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -26, 10, 33, -26, 10, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, -11, 94, -22, -11, 94, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -11, 95, -24, -11, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -11, 99, -25, -11, 99, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -10, -79, -24, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -10, 93, -23, -10, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -10, 96, -25, -10, 97, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -10, 100, -25, -10, 101, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -9, -12, -19, -9, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -9, 30, -24, -9, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -9, 32, -25, -9, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -9, 37, -15, -9, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -9, 95, -15, -9, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -8, -40, -13, -8, -28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -8, -27, -25, -8, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -8, 94, -12, -8, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -7, 86, -19, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -7, 94, -12, -7, 94, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -5, 89, -23, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -4, -55, -23, -3, -55, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -54, -24, -4, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -52, -25, -3, -52, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -22, -25, -4, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, -21, -25, -4, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, 45, -25, -3, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, 46, -23, -4, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, 52, -22, -4, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -4, 61, -24, -4, 88, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -3, -54, -25, -3, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -3, -22, -25, -3, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -3, -21, -25, -3, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -3, 30, -25, -2, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -3, 32, -19, -3, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -3, 41, -25, -3, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -3, 59, -10, -3, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, -60, -24, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -2, -47, -23, -2, -45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, -44, -25, -2, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, 32, -24, -2, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, 35, -23, -2, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, 41, -22, -2, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -2, 57, -23, -2, 59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, -1, -10, -25, -1, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, -9, -25, 1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, -8, -23, -1, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, -7, -25, -1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, -4, -25, 1, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, -3, -24, -1, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 14, -25, -1, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 16, -25, -1, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 17, -25, -1, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 19, -24, -1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 23, -25, -1, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 24, -25, -1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 28, -24, -1, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 30, -25, -1, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 45, -25, 5, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, -1, 46, -18, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -39, -25, 2, -39, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -38, -19, 0, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -31, -24, 0, -30, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, 0, -29, -24, 0, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -12, -12, 1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -11, -24, 1, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -10, -25, 0, -10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -8, -23, 2, -8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, -7, -25, 0, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, 20, -25, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, 21, -25, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, 22, -25, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, 23, -21, 0, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, 30, -25, 1, 31, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, 46, -22, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 0, 50, -24, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -55, -23, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -25, 1, -54, -23, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -52, -23, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -51, -23, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -25, 1, -48, -25, 1, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -47, -25, 2, -47, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -46, -22, 1, -43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -42, -24, 1, -41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -40, -25, 11, -40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -38, -25, 11, -38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -37, -20, 1, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -29, -24, 1, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -10, -25, 1, -10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, -7, -25, 1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, 23, -21, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 1, 33, -24, 1, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, 1, 41, -25, 1, 44, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, -37, -19, 2, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, 2, -31, -24, 2, -31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, -30, -24, 2, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, -29, -24, 2, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, -27, -23, 2, -25, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, 2, -11, -24, 2, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, -10, -25, 2, -10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, -7, -25, 2, -7, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, 3, -23, 2, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, 2, 17, -24, 2, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, 18, -24, 2, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, 2, 21, -25, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, 23, -23, 2, 25, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -25, 2, 30, -24, 2, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 2, 41, -25, 3, 42, Blocks.FURNACE.getDefaultState().with(AbstractFurnaceBlock.FACING, Direction.WEST).with(AbstractFurnaceBlock.LIT, false));
        structure.fillWithBlocks(world, start, -25, 2, 46, -24, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, -39, -25, 4, -38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, -36, -22, 3, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, -25, -25, 4, -25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -25, 3, -24, -25, 5, -24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, -21, -22, 3, -21, Blocks.OAK_WOOD.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, -20, -22, 3, -20, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -25, 3, 2, -24, 3, 3, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, 4, -25, 3, 5, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, 7, -25, 3, 7, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, 9, -23, 3, 11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, 17, -24, 4, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, 26, -25, 3, 28, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 3, 40, -25, 3, 40, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 4, -54, -23, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 4, -52, -23, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 4, -36, -24, 4, -36, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 4, 1, -25, 5, 1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 4, 2, -25, 5, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 4, 3, -25, 6, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, 4, 4, -25, 5, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 4, 5, -25, 5, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 4, 33, -25, 5, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 5, -55, -23, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -25, 5, -51, -23, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -25, 5, -39, -25, 9, -39, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 5, -36, -22, 5, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 5, -25, -22, 5, -25, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -25, 5, -11, -24, 6, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 5, 17, -24, 6, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 5, 31, -25, 5, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 5, 32, -25, 5, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 5, 34, -25, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, 5, 35, -25, 7, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 6, -54, -23, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 6, -24, -24, 7, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 6, -23, -24, 6, -12, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 6, 6, -25, 7, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 6, 7, -25, 7, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 6, 8, -25, 8, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, 6, 9, -25, 7, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 6, 10, -25, 7, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 6, 31, -25, 6, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 6, 32, -25, 6, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 6, 33, -25, 6, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -25, 6, 36, -25, 7, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 6, 42, -25, 6, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 7, -11, -24, 8, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 7, 17, -24, 7, 17, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -25, 7, 31, -25, 7, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 7, 32, -25, 7, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 7, 33, -25, 7, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 7, 42, -25, 7, 43, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -25, 8, 31, -25, 8, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -25, 8, 32, -25, 8, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 8, 33, -25, 8, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 9, -24, -21, 9, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 9, -16, -24, 9, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -25, 9, 24, -25, 10, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 9, 25, -25, 10, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 9, 26, -25, 10, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -25, 9, 32, -25, 9, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -25, 9, 33, -25, 9, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 10, -23, -25, 10, -19, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -25, 10, -17, -24, 10, -11, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -25, 10, 27, -25, 10, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 10, 28, -25, 10, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 11, 26, -25, 11, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -25, 11, 27, -25, 11, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 11, 28, -25, 11, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -25, 12, 26, -25, 12, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -25, 12, 27, -25, 12, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -24, -11, 97, -24, -11, 98, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -24, -11, 99, -24, -11, 102, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -10, 96, -7, -10, 96, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -24, -9, -13, -17, -9, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -9, 32, -24, -9, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -9, 34, -24, -7, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -8, -41, 4, -8, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -7, 84, -16, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -4, -52, -13, -4, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -4, -22, -24, -3, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -4, -20, -15, -4, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -4, 45, -21, -4, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -4, 49, -24, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -4, 50, -24, -4, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, -62, -23, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -24, -3, -60, -20, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, -54, -11, -3, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, -32, 11, -3, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, -31, -23, -3, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, -20, -14, -3, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, 14, -24, -2, 14, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, 15, -12, -3, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -3, 41, -23, -3, 43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, -58, -17, -2, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, -50, -22, -2, -45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, -44, -24, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, 4, -23, -2, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, 13, -23, -2, 14, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, 15, -18, -2, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, 30, -24, -1, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -2, 34, -23, -2, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, -10, -24, -1, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, -7, -24, -1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, -4, -24, -1, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, 14, -24, -1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, 23, -24, -1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, 25, -23, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, 27, -24, 1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, 32, -21, -1, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, 45, -16, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, -1, 54, -22, -1, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -24, 0, -54, -21, 0, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, -39, -19, 0, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, -10, -24, 2, -8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, -7, -24, 0, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, -4, -23, 1, -4, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, 20, -24, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, 21, -24, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, 22, -24, 0, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, 30, -24, 0, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, 45, -21, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 0, 52, -24, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, -48, -22, 1, -43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, -40, -24, 1, -40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, -39, -24, 11, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, -38, -19, 1, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, -7, -24, 1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, 22, -24, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, 30, -24, 1, 31, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, 41, -24, 1, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 1, 44, -24, 5, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 2, -40, -24, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 2, -38, -23, 2, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -24, 2, -35, -22, 2, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 2, -7, -24, 2, -5, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 2, -4, -23, 2, -4, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 2, 14, -24, 2, 16, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 2, 20, -24, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 2, 41, -24, 5, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 3, -25, -22, 3, -25, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -24, 3, -24, -22, 3, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 3, 0, -24, 3, 3, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 3, 5, -24, 3, 11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 3, 15, -24, 5, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 3, 28, -23, 3, 29, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 3, 40, -24, 5, 45, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 4, -40, -24, 5, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 4, -24, -22, 4, -24, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -24, 4, 2, -24, 5, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 4, 4, -24, 5, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 5, -24, -21, 5, -24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 5, -23, -21, 5, -23, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -24, 5, 34, -24, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 6, -40, -24, 6, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 6, -1, -24, 7, -1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 6, 0, -24, 7, 0, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 6, 1, -24, 7, 1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 6, 6, -24, 7, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -24, 6, 7, -24, 7, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 6, 8, -24, 7, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 6, 9, -24, 7, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 6, 33, -24, 6, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 6, 41, -24, 6, 44, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -24, 6, 50, -22, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 7, -43, -24, 8, -43, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -24, 7, -40, -23, 7, -40, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -24, 7, -23, -22, 7, -23, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 7, 15, -24, 7, 16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 7, 26, -24, 10, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -24, 7, 27, -24, 8, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 7, 28, -24, 8, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 8, -23, -24, 9, -23, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 8, 25, -24, 8, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -24, 9, -48, -24, 9, -43, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -24, 9, 23, -24, 10, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -24, 9, 24, -24, 10, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 9, 25, -24, 10, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 9, 27, -24, 9, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -24, 10, -24, -22, 10, -19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -24, 10, -18, -18, 10, -18, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -24, 10, 27, -24, 10, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 10, 28, -24, 10, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 10, 29, -24, 10, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -24, 11, -23, -24, 11, -19, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -24, 11, 26, -24, 11, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -24, 11, 27, -24, 11, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 11, 28, -24, 11, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -24, 11, 29, -24, 11, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -24, 12, 26, -24, 12, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -24, 12, 27, -24, 12, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -24, 13, 26, -24, 13, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -23, -11, 95, -22, -11, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -11, 97, -11, -11, 97, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, -10, -79, -22, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, -9, -14, -15, -9, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -9, 30, -11, -9, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -9, 48, -12, -9, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -9, 49, -22, -9, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -9, 72, -8, -9, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -9, 92, -21, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -8, -42, -9, -8, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -8, 77, 17, -5, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -8, 78, -15, -8, 88, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -6, -73, -21, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, -4, -58, -22, -4, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -4, -56, -23, -4, -55, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -4, -54, -19, -4, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -4, -22, -13, -4, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -4, 49, -23, -4, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -4, 50, -23, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -3, -22, -14, -3, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -3, 14, -12, -3, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -3, 44, -14, -3, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -2, -60, -22, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, -2, -43, -22, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -2, 30, -23, -2, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -2, 31, -23, 0, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -2, 33, -22, -2, 34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -55, -16, -1, -43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -42, -23, 1, -42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -41, -15, -1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -15, -22, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -10, -22, -1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -7, -22, -1, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -6, -23, 0, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -4, -23, -1, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -3, -23, 1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, -2, -22, -1, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, 15, -22, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, 20, -23, -1, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, 21, -23, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, -1, 27, -23, -1, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, -50, -20, 0, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, -46, -22, 0, -43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, -41, -19, 0, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, -30, -23, 1, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, -28, -23, 0, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, -7, -23, 2, -7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, 20, -23, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, 21, -23, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, 22, -23, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, 30, -23, 2, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 0, 50, -23, 0, 52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, 1, -50, -22, 1, -50, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, 1, -41, -19, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 1, -28, -23, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 1, -11, -21, 1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 1, -6, -23, 1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 1, 33, -23, 1, 33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 1, 34, -23, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, 1, 49, -23, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 1, 53, -23, 7, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, -39, -21, 2, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, 2, -31, -21, 2, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, -30, -23, 2, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, -15, -22, 2, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, -11, -21, 2, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, -10, -23, 2, -9, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, -6, -23, 2, -5, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, 14, -22, 2, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, 2, 21, -23, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 2, 27, -21, 2, 29, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, 2, 33, -23, 2, 33, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -23, 2, 46, -22, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, -40, -23, 5, -40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, -39, -23, 3, -39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, -31, -21, 3, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, -11, -23, 5, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, 1, -22, 3, 2, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, 8, -23, 3, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, 23, -21, 3, 25, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 3, 26, -23, 10, 26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 4, -49, -23, 5, -49, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 4, -36, -22, 5, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 4, -31, -23, 5, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 5, 40, -23, 5, 45, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -23, 5, 52, -23, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 6, -24, -20, 6, -21, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 6, -20, -22, 6, -19, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 6, -18, -20, 6, -15, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 6, -14, -21, 6, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 6, -11, -22, 6, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 6, -2, -23, 7, -2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 6, -1, -23, 8, -1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 6, 0, -23, 8, 0, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 6, 1, -23, 8, 1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 6, 2, -23, 7, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 6, 27, -23, 8, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 7, -48, -22, 7, -48, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -23, 7, -24, -23, 8, -24, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -23, 7, 23, -23, 8, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 7, 24, -23, 7, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 7, 28, -22, 7, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 7, 29, -22, 7, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 8, -48, -23, 8, -42, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -23, 8, -23, -22, 8, -23, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 8, 22, -22, 8, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 8, 24, -22, 8, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 8, 28, -23, 8, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 9, -23, -22, 9, -23, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 9, -16, -23, 9, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -23, 9, 0, -23, 9, 0, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 9, 22, -22, 9, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -23, 9, 23, -22, 9, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 9, 24, -22, 9, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 9, 25, -23, 9, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 9, 27, -23, 9, 27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -23, 9, 28, -23, 9, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 10, 23, -23, 10, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 10, 24, -23, 10, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 10, 25, -23, 10, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 10, 27, -23, 10, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -23, 10, 28, -23, 10, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 10, 29, -23, 10, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 11, -23, -23, 11, -20, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -23, 11, -19, -18, 11, -19, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -23, 11, 24, -23, 11, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 11, 25, -23, 11, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 11, 27, -23, 11, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -23, 11, 28, -23, 11, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 11, 29, -23, 11, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -23, 12, 24, -23, 12, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -23, 12, 25, -23, 12, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 12, 27, -23, 12, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -23, 12, 28, -23, 12, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -23, 13, 25, -23, 13, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -22, -10, -77, -19, -10, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -10, 93, -20, -10, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -9, -66, -16, -6, -66, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -9, -65, -11, -9, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -9, -35, -21, -9, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -9, -15, -13, -9, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -8, -75, -19, -8, -55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -8, -43, -10, -8, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -7, -75, -21, -7, -74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, -5, -66, -16, -5, -66, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, -5, 83, -17, -5, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -5, 89, -20, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, -4, -65, -20, -4, -63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, -4, -62, -19, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -56, -19, -4, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -24, -22, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, -23, -13, -4, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, 49, -21, -4, 50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, 51, -22, -4, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -4, 60, -22, -4, 88, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, -3, -62, -21, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, -3, -40, -22, -3, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -3, -29, -22, -1, -27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -3, -26, -21, -3, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -3, -23, -19, -3, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -3, 41, -21, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -3, 43, -14, -3, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, -44, -22, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, -15, -22, 1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, 4, -22, -2, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, 6, -22, -2, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, 7, -22, -2, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, 32, -22, -2, 34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, 36, -20, -2, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -2, 57, -20, -2, 59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, -1, -8, -22, -1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, -6, -22, 1, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, -5, -21, -1, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, -4, -22, -1, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, -3, -22, -1, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 13, -21, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 14, -21, -1, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 20, -22, -1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 22, -22, 0, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 25, -21, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 27, -22, 1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 28, -22, -1, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 29, -22, -1, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 30, -22, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, -1, 31, -21, -1, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -30, -20, 2, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -28, -17, 2, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -27, -20, 0, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -24, -22, 1, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -23, -18, 0, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -11, -18, 0, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -5, -21, 1, -5, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -4, -22, 0, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -3, -22, 2, -3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, -2, -22, 0, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, 21, -22, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, 31, -22, 2, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, 50, -20, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 0, 52, -21, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, -55, -21, 2, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, -51, -21, 2, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, -27, -20, 1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, -23, -18, 1, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, -8, -20, 1, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, -4, -22, 1, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, -2, -22, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, 22, -22, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, 33, -21, 1, 34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, 40, -22, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 1, 49, -20, 1, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 1, 50, -20, 3, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, 52, -20, 3, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 1, 53, -20, 1, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 2, -49, -22, 2, -49, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, -48, -22, 2, -41, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, -40, -21, 2, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, -29, -20, 2, -29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, -27, -20, 2, -25, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, -24, -22, 2, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, -10, -19, 2, -7, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, -5, -21, 2, -5, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, -4, -22, 2, -4, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, -2, -22, 2, -1, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, 1, -21, 2, 3, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, 5, -22, 11, 5, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, 6, -22, 2, 8, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, 9, -22, 11, 9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, 10, -22, 2, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, 20, -22, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, 23, -21, 2, 29, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, 30, -22, 2, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 2, 33, -21, 2, 34, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -22, 2, 45, -22, 2, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -55, -21, 4, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -51, -21, 4, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -49, -19, 3, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -48, -22, 3, -46, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -43, -22, 3, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -40, -21, 3, -38, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -11, -22, 6, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, -9, -21, 3, -8, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, 0, -22, 8, 0, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, 3, -22, 3, 4, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, 6, -22, 5, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, 11, -21, 3, 12, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, 13, -22, 3, 14, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, 26, -22, 3, 27, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 3, 45, -22, 4, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -22, 3, 46, -22, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 3, 47, -22, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -22, 4, -48, -22, 5, -48, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 4, -46, -22, 5, -46, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 4, -43, -22, 5, -43, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 4, -41, -22, 5, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 4, 26, -22, 4, 27, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 4, 50, -20, 5, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 4, 52, -20, 5, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 5, -55, -21, 6, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 5, -51, -21, 6, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 5, -47, -22, 5, -41, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 5, 49, -20, 5, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -22, 5, 53, -20, 5, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -22, 6, -54, -20, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 6, -48, -22, 6, -41, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 6, -2, -22, 7, -2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 6, -1, -22, 8, -1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 6, 1, -22, 8, 1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 6, 2, -22, 7, 2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 6, 6, -22, 6, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 6, 12, -10, 6, 12, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 6, 19, -22, 6, 20, Blocks.BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -22, 6, 26, -22, 10, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 6, 27, -22, 7, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 7, -55, -21, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 7, -51, -21, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 7, -47, -22, 7, -41, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -22, 7, -24, -20, 8, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 7, 6, -22, 10, 6, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 7, 7, -22, 8, 7, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -22, 7, 8, -22, 10, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 7, 13, -10, 7, 13, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 7, 22, -22, 7, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 7, 23, -22, 7, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 7, 25, -22, 8, 25, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 8, -15, -22, 8, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 8, 14, -20, 8, 14, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 8, 15, -22, 8, 16, Blocks.BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -22, 8, 17, -21, 8, 17, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 8, 23, -22, 8, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 8, 27, -22, 8, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 9, -34, -22, 9, -33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 9, -17, -18, 9, -17, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 9, -1, -22, 9, -1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 9, 7, -22, 10, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -22, 9, 15, -21, 9, 15, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 9, 16, -20, 9, 16, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -22, 9, 25, -22, 9, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 10, 23, -22, 10, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -22, 10, 24, -22, 10, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -22, 10, 25, -22, 10, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 10, 27, -22, 10, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -22, 11, -23, -22, 11, -19, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -22, 11, 6, -22, 12, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -22, 11, 24, -22, 11, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -22, 11, 25, -22, 11, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -22, 11, 26, -22, 11, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -22, 12, 24, -22, 12, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -22, 12, 25, -22, 12, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -22, 12, 26, -22, 12, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -22, 18, 7, -22, 18, 9, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -21, -11, -79, -17, -11, -75, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, -74, -19, -9, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -11, 93, -18, -11, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -10, -79, -20, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, -10, 87, -17, -10, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -9, -16, -11, -9, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -9, 49, -21, -9, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -9, 50, -21, -5, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -8, 23, -20, -8, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -8, 25, -21, -8, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -8, 89, -16, -8, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, -58, -18, -4, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, -40, -21, -3, -36, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, -35, -21, -4, 50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, 51, -21, -1, 51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, 52, -21, -4, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, 54, -18, -4, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -4, 60, -19, -4, 60, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, -4, 61, -11, -4, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -3, -55, -7, -3, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -3, -35, -21, -3, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -3, 4, -19, -3, 8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -3, 9, -6, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -3, 61, -15, -3, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, -2, -60, -20, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, -2, -50, -21, -1, -49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, -48, -17, -2, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, -40, -21, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, -15, -18, -2, -12, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, -2, 4, -19, -2, 8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, 9, -21, -2, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, 12, -21, -2, 13, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, 14, -16, -2, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, 30, -20, -2, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, 33, -20, -2, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -2, 35, -21, -2, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, -42, -15, -1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, -15, -21, -1, -12, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, -11, -18, -1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, -6, -21, -1, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, -4, -20, -1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, -1, -19, -1, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 2, -21, -1, 3, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 4, -14, -1, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 12, -15, 1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 17, -20, -1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 19, -21, -1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 23, -21, -1, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 24, -21, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 27, -21, -1, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 30, -21, 0, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, -1, 54, -19, -1, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 0, -46, -21, 1, -45, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -44, -21, 1, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -43, -21, 2, -43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -42, -19, 0, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -29, -20, 1, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -24, -16, 0, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -15, -20, 0, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -4, -21, 0, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -2, -21, 2, -2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, -1, -18, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, 20, -20, 1, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, 21, -20, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 0, 22, -20, 1, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, -50, -18, 1, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, -42, -19, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, -24, -16, 1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, -15, -20, 1, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, -4, -21, 1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, -1, -18, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, 30, -21, 1, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, 35, -21, 1, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 1, 46, -21, 1, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 2, -50, -18, 2, -47, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 2, -46, -21, 2, -45, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, -44, -21, 2, -44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, -42, -20, 2, -39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 2, -36, -21, 2, -36, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 2, -35, -21, 2, -35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, -34, -21, 2, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, -24, -19, 2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, -15, -21, 2, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, -6, -19, 2, -6, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 2, -4, -21, 2, -3, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, -1, -18, 2, 2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 2, 5, -17, 2, 9, Blocks.DARK_OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, 11, -21, 2, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 2, 13, -21, 2, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, 20, -20, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, 21, -20, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, 22, -20, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, 30, -21, 2, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 2, 35, -21, 2, 45, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -21, 3, -50, -20, 3, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, -37, -20, 3, -36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, -35, -21, 5, -35, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, -34, -21, 3, -33, Blocks.PISTON.getDefaultState().with(DirectionalBlock.FACING, Direction.UP).with(PistonBlock.EXTENDED, false));
        structure.fillWithBlocks(world, start, -21, 3, -25, -21, 4, -25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -21, 3, -24, -21, 5, -24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, -15, -21, 4, -14, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, -13, -21, 3, -11, Blocks.COBBLESTONE.getDefaultState());

    }
    
    public static void generatePart24()
    {
        structure.fillWithBlocks(world, start, -21, 3, -10, -21, 3, -8, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, -1, -21, 3, 0, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, 4, -21, 11, 4, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, 10, -21, 11, 10, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, 13, -21, 6, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 3, 32, -21, 6, 32, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -21, 3, 45, -21, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 3, 46, -21, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -21, 3, 47, -21, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 3, 48, -21, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 4, -31, -21, 5, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 4, -13, -21, 5, -12, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -21, 4, -11, -21, 6, -11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 5, -15, -21, 6, -14, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 6, -35, -21, 8, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 6, -20, -20, 6, -19, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 6, -2, -21, 7, -2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 6, -1, -21, 7, -1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 6, 0, -21, 8, 0, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -21, 6, 1, -21, 7, 1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 6, 23, -21, 6, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 6, 24, -21, 6, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 6, 27, -21, 7, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 6, 31, -21, 6, 31, Blocks.LANTERN.getDefaultState().with(LanternBlock.WATERLOGGED, false).with(LanternBlock.HANGING, true));
        structure.fillWithBlocks(world, start, -21, 6, 46, -21, 6, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 6, 50, -19, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 7, -48, -21, 7, -41, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, 7, -36, -21, 7, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 7, -22, -20, 7, -21, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 7, -18, -19, 7, -16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 7, -14, -21, 7, -12, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -21, 7, 14, -18, 7, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 7, 19, -21, 7, 20, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -21, 7, 22, -21, 7, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 7, 23, -21, 7, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 7, 24, -21, 7, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -21, 7, 26, -21, 10, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 8, -34, -21, 8, -33, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -21, 8, -16, -18, 8, -16, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -21, 8, 15, -20, 8, 16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 8, 22, -21, 8, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -21, 8, 23, -21, 8, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 8, 24, -21, 8, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 8, 27, -21, 8, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 9, 22, -21, 9, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -21, 9, 23, -21, 9, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -21, 9, 24, -21, 9, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 9, 25, -21, 9, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 9, 27, -21, 9, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -21, 10, -23, -21, 10, -22, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -21, 10, -20, -20, 10, -19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 10, 23, -21, 10, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -21, 10, 24, -21, 10, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -21, 10, 25, -21, 10, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 10, 27, -21, 10, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -21, 11, -20, -20, 11, -19, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, 11, 5, -21, 11, 9, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 11, 26, -21, 11, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -21, 12, 5, -21, 17, 5, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 12, 6, -21, 13, 8, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 12, 9, -21, 17, 9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 12, 26, -21, 12, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -21, 14, 6, -21, 14, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, 15, 6, -21, 17, 6, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, 15, 7, -21, 16, 7, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -21, 15, 8, -21, 17, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, 17, 7, -21, 17, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -21, 18, 5, -18, 18, 8, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 18, 9, -21, 18, 9, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 19, 4, -21, 19, 5, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -21, 19, 6, -21, 19, 7, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -21, 19, 9, -21, 19, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -10, 92, -17, -10, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, -38, -17, -9, -35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, -34, -20, -9, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, -17, -10, -9, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 18, -4, -9, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 49, -18, -9, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 52, -20, -5, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 60, -17, -9, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 64, -20, -5, 70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 71, -7, -9, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -9, 92, -18, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, -44, -11, -8, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, 25, -20, -8, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -8, 26, -20, -8, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -7, -75, -19, -7, -74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, -6, -73, -18, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, -4, -40, -19, -4, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, -38, -20, -3, -35, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, -34, -9, -4, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, 6, -19, -3, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, 7, -2, -4, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, 45, -17, -4, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -4, 53, -20, -4, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, -62, -19, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, -3, -40, -19, -3, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, -34, -18, -3, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, -31, -20, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, -30, -15, -3, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, -24, -20, -3, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, 3, -20, -3, 8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -3, 41, -19, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -2, -50, -17, -2, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -2, 3, -20, -2, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -2, 11, -20, -2, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, -15, -18, -1, -15, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, -14, -16, -1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, -6, -17, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 2, -13, -1, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 14, -16, -1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 19, -11, -1, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 20, -20, -1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 24, -20, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 25, -20, 1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 26, -20, -1, 26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 27, -20, 1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 28, -20, -1, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 29, -20, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 30, -20, -1, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, -1, 31, -20, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -54, -13, 0, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -46, -20, 2, -46, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -45, -20, 0, -45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -44, -20, 2, -44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -43, -20, 0, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -5, -12, 1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -4, -17, 2, -4, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, -3, -19, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 23, -20, 1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 24, -20, 2, 24, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 26, -20, 2, 26, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 28, -20, 0, 28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 30, -20, 2, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 31, -20, 1, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 32, -20, 2, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 33, -20, 1, 33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 34, -20, 2, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 35, -20, 1, 35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 36, -20, 2, 36, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 37, -20, 1, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 38, -20, 2, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 39, -20, 1, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 40, -20, 2, 40, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 41, -20, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 42, -20, 2, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 43, -20, 0, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 44, -20, 2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 45, -20, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 47, -19, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, 0, 49, -20, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 0, 52, -20, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, -55, -18, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -20, 1, -54, -18, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, -52, -18, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, -51, -18, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -20, 1, -45, -20, 1, -45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, -43, -20, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, -3, -20, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, 28, -20, 1, 28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, 43, -20, 2, 43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, 45, -3, 1, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 1, 46, -20, 5, 46, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, -45, -20, 2, -45, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, -43, -20, 2, -43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, -36, -19, 2, -35, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, 2, -34, -20, 2, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, -31, -18, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, 2, -14, -17, 2, -11, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, 2, -3, -19, 2, -2, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 3, -20, 11, 3, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 4, -16, 2, 10, Blocks.DARK_OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 11, -20, 11, 11, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 12, -11, 2, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, 2, 13, -14, 2, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 14, -20, 2, 14, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 15, -20, 2, 17, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 18, -15, 2, 18, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 19, -14, 2, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 23, -20, 2, 23, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 25, -20, 2, 25, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 28, -20, 2, 28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 29, -20, 2, 29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 31, -20, 2, 31, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 33, -20, 2, 33, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 35, -20, 2, 35, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 37, -20, 2, 37, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 39, -20, 2, 39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 41, -20, 2, 41, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 2, 45, -3, 2, 45, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -20, 3, -48, -20, 3, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, -41, -20, 3, -39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, -35, -19, 3, -35, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, -34, -20, 3, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, -24, -19, 3, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, -15, -17, 6, -15, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, -10, -20, 3, -10, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, -8, -20, 3, -7, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, 13, -14, 6, 13, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, 14, -19, 3, 14, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, 15, -20, 3, 17, Blocks.FIRE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, 18, -19, 3, 18, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, 19, -16, 6, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 3, 45, -20, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -20, 3, 47, -20, 5, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -20, 3, 48, -20, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, 4, -54, -18, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 4, -52, -18, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 4, -34, -20, 5, -34, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 4, -32, -20, 5, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 4, -24, -19, 5, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 4, -23, -19, 4, -23, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -20, 5, -55, -18, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -20, 5, -51, -18, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -20, 5, -33, -20, 5, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 5, -23, -19, 5, -23, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -20, 6, -34, -20, 6, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 6, -14, -20, 6, -12, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -20, 6, -2, -20, 7, -2, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -20, 6, -1, -20, 7, -1, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -20, 6, 0, -20, 7, 0, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, 6, 14, -16, 6, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 6, 45, -20, 6, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, 7, -34, -20, 7, -32, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -20, 7, -19, -17, 7, -16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 7, -15, -18, 7, -15, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -20, 7, 18, -17, 7, 18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 7, 19, -17, 7, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 7, 22, -20, 7, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -20, 7, 23, -20, 7, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -20, 7, 24, -20, 7, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -20, 7, 26, -20, 10, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -20, 7, 27, -20, 7, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -20, 8, 18, -20, 8, 20, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -20, 8, 22, -20, 8, 22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -20, 8, 23, -20, 8, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -20, 8, 24, -20, 8, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -20, 8, 27, -20, 8, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -20, 9, 15, -20, 9, 15, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 9, 23, -20, 9, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -20, 9, 24, -20, 9, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -20, 9, 25, -20, 9, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -20, 10, -21, -18, 10, -21, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -20, 10, 15, -20, 13, 15, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 10, 24, -20, 10, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -20, 10, 27, -20, 10, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -20, 11, 4, -16, 11, 4, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 11, 8, -18, 11, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 11, 27, -20, 11, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -20, 12, 4, -20, 17, 4, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 12, 10, -20, 17, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 18, 3, -16, 18, 3, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -20, 18, 4, -17, 18, 8, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 18, 9, -20, 18, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -20, 18, 11, -16, 18, 11, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -19, -10, -79, -18, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -10, -72, -19, -10, -72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, -39, -14, -9, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, -32, -19, -9, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, 52, -18, -9, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, 54, -19, -8, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, 56, -8, -9, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, 68, -19, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -9, 70, -6, -9, 83, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, 23, -16, -8, 26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -8, 27, -19, -8, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -5, 89, -17, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -4, -65, -18, -4, -64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -4, -63, -15, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, -38, -8, -4, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, 53, 8, -4, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, 62, -9, -4, 62, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -4, 63, -18, -4, 88, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -3, -63, -17, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -3, -60, -15, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -3, -38, -7, -3, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -3, -24, -19, -3, -24, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -3, -5, -18, -3, -5, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -3, -4, -16, -3, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -3, 62, -13, -3, 62, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -2, -60, -18, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -2, -39, -19, -2, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -38, -19, 1, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -32, -18, -2, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -30, -16, -2, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -25, -19, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -22, -18, -2, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -11, -19, -2, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -6, -18, -2, -6, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -5, -18, -2, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -3, -19, 0, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, -2, -18, -2, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 9, -18, -2, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 11, -19, 1, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 12, -12, -2, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 30, -17, -2, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 36, -19, 1, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 38, -17, -2, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -2, 57, -18, -2, 59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, -1, -23, -18, -1, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 13, -15, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 20, -19, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 21, -19, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 22, -19, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 23, -17, -1, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 24, -18, 0, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 25, -17, -1, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 26, -19, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 27, -19, -1, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 30, -19, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, -1, 32, -6, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, -46, -19, 1, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, -43, -19, 2, -43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, -30, -19, 1, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, -29, -19, 0, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, -27, -14, 0, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, -15, -18, 1, -15, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, -14, -15, 0, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 21, -19, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 23, -17, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 25, -18, 1, 25, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 26, -19, 0, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 27, -19, 2, 29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 31, -19, 2, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 32, -17, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 33, -19, 0, 33, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 34, -19, 1, 34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 35, -19, 2, 35, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 37, -19, 2, 37, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 38, -17, 1, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 39, -18, 1, 39, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 40, -13, 1, 40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 41, -18, 1, 41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 42, -19, 0, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 43, -19, 2, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 44, -19, 0, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 46, -18, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, 0, 49, -5, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 0, 50, -18, 0, 52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, 1, -29, -19, 1, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, -27, -14, 1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, -14, -15, 1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, -9, -18, 1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, -3, -19, 2, -3, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, -2, -19, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, 24, -1, 1, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, 26, -19, 1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, 33, -19, 1, 33, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, 42, -18, 1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, 44, -19, 2, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, 49, -18, 2, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 1, 53, -18, 2, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, -46, -19, 2, -44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, -42, -19, 2, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, -39, -19, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, 2, -30, -19, 2, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, -29, -19, 2, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, -27, -17, 2, -25, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -19, 2, -23, -19, 2, -15, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 3, -17, 2, 3, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 11, -17, 2, 11, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 14, -15, 2, 18, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 20, -19, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 24, -18, 2, 24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 25, -18, 2, 25, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 26, -19, 2, 26, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 30, -19, 2, 30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 32, -18, 2, 32, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 33, -19, 2, 33, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 34, -19, 2, 34, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 36, -19, 2, 36, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 38, -18, 2, 38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 39, -18, 2, 39, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 40, -18, 2, 40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 41, -18, 2, 41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 42, -19, 2, 42, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 2, 46, -18, 2, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -19, 2, 47, -18, 3, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -19, 3, -50, -19, 3, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, -47, -17, 3, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, -37, -19, 3, -35, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, -20, -19, 3, -19, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -19, 3, -11, -19, 3, -9, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, 0, -19, 3, 0, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, 3, -17, 5, 3, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, 11, -17, 5, 11, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, 15, -19, 3, 17, Blocks.IRON_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -19, 3, 45, -19, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -19, 3, 46, -19, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -19, 3, 48, -18, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -19, 3, 49, -18, 4, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 3, 53, -18, 4, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 4, -38, -19, 5, -38, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -19, 4, 47, -17, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -19, 5, 49, -18, 6, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 5, 53, -18, 6, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 6, -54, -17, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 6, -24, -19, 6, -21, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 6, -20, -18, 6, -19, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 6, -18, -17, 6, -15, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 6, -14, -18, 6, -14, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 6, 3, -17, 6, 3, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 6, 11, -19, 10, 11, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 7, -24, -19, 7, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 7, -22, -17, 7, -16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 7, 3, -19, 10, 3, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 7, 24, -19, 7, 25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -19, 7, 49, -18, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 7, 53, -18, 7, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 8, 14, -19, 13, 14, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 8, 15, -18, 8, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 8, 18, -18, 8, 18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 8, 19, -18, 8, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 8, 23, -19, 8, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -19, 8, 24, -19, 8, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -19, 8, 26, -19, 8, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -19, 9, -22, -18, 9, -22, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -19, 9, 15, -19, 9, 16, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 9, 17, -19, 9, 20, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -19, 9, 23, -19, 9, 23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, -19, 9, 24, -19, 9, 24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -19, 9, 25, -19, 9, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -19, 10, -20, -18, 10, -19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 10, 16, -19, 13, 16, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 11, -20, -18, 11, -19, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 11, 3, -17, 12, 3, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 11, 6, -16, 11, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 11, 11, -17, 12, 11, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 12, 4, -17, 13, 4, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 12, 10, -17, 13, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 12, 15, -19, 12, 16, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 14, 4, -17, 14, 4, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 14, 10, -17, 14, 10, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 15, 4, -19, 17, 4, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 15, 10, -19, 17, 10, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -19, 18, 10, -16, 18, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -19, 19, 4, -17, 19, 4, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -19, 19, 10, -17, 19, 10, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, -11, -74, -12, -11, 92, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -10, -77, -15, -10, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -10, -73, -18, -10, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, -76, -13, -9, -71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, -70, -18, -9, -70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, -67, -17, -9, -66, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, -32, -18, -9, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, -31, -18, -9, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, -18, -10, -9, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, 54, 3, -9, 76, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -9, 91, -15, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, -75, -9, -8, -75, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -18, -8, -74, -12, -8, -67, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, -65, -7, -8, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, -53, -17, -8, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, 20, -17, -8, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, 27, -18, -8, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -8, 28, -18, -8, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, -54, -17, -4, -53, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, -40, -7, -4, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, 6, -2, -4, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, 26, -11, -4, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, 34, -18, -3, 34, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, 35, -18, -4, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -4, 60, -16, -4, 62, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, -40, -7, -3, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, -24, -18, -3, -23, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, 4, -2, -3, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, 5, -18, -1, 7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, 8, -2, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, 35, -18, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -3, 60, -16, -3, 62, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -18, -2, -39, -13, -2, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -33, -17, -2, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -25, -18, 1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -11, -17, -2, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -10, -18, -2, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -9, -18, -2, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, -3, -18, -2, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, 8, -18, 0, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, 11, -10, -2, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, 36, -10, -2, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -2, 37, -17, -2, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 0, -18, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 20, -18, -1, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 21, -18, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 22, -18, -1, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 26, -18, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 30, -17, -1, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 31, -6, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, -1, 54, -18, -1, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -18, 0, -46, -18, 0, -46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -45, -18, 2, -45, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -44, -18, 1, -43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -42, -18, 1, -41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -40, -18, 1, -40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -39, -17, 0, -38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -37, -18, 0, -35, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -34, -18, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -30, -18, 0, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -29, -18, 1, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -3, -18, 1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, -2, -18, 0, -2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 20, -18, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 22, -18, 0, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 30, -18, 2, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 31, -17, 0, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 33, -18, 1, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 35, -17, 0, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 42, -18, 0, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 44, -18, 2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 0, 45, -18, 0, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, -46, -18, 1, -46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, -39, -17, 1, -38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, -37, -18, 1, -35, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, -30, -18, 1, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, -2, -18, 1, -2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, 22, -18, 1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, 31, -17, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, 35, -17, 1, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 1, 43, -18, 2, 43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -46, -18, 2, -46, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -44, -18, 2, -43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -42, -18, 2, -41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -39, -17, 2, -38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -37, -18, 2, -35, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -33, -18, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -18, 2, -30, -18, 2, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -24, -14, 2, -24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -18, 2, -23, -18, 2, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -22, -18, 2, -15, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -10, -18, 2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, -2, -18, 2, -2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 21, -18, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 22, -18, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 26, -18, 2, 29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 31, -18, 2, 32, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 33, -18, 2, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 35, -18, 2, 38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 42, -18, 2, 43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 2, 48, -18, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -18, 3, -50, -18, 3, -50, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 3, -48, -18, 3, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 3, -23, -18, 3, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 3, -20, -18, 3, -19, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -18, 3, -13, -17, 3, -12, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 3, -9, -18, 3, -6, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, 3, 1, -18, 3, 2, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 3, 12, -17, 3, 12, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 3, 45, -18, 4, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -18, 3, 46, -18, 3, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -18, 4, -23, -18, 4, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 4, 46, -18, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -18, 5, -23, -18, 5, -23, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 5, 46, -18, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -18, 6, -23, -17, 6, -21, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 6, 11, -18, 7, 11, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -18, 6, 50, -16, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 7, -24, -17, 7, -24, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -18, 7, -23, -17, 7, -16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 7, -10, -17, 7, -9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 7, -8, -18, 7, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 7, 3, -18, 8, 3, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -18, 8, -9, -18, 8, -6, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, 8, 11, -17, 9, 11, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 8, 14, -10, 8, 14, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, 8, 26, -18, 9, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -18, 9, 3, -17, 10, 3, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 9, 15, -18, 13, 15, Blocks.BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 9, 17, -18, 9, 20, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -18, 9, 25, -18, 9, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -18, 10, 11, -17, 10, 11, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -18, 15, 4, -18, 16, 4, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -18, 15, 10, -18, 16, 10, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -18, 17, 4, -17, 17, 4, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -18, 17, 10, -17, 17, 10, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -17, -11, 93, -14, -11, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -10, -79, -16, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, -10, -73, 17, -8, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -10, -72, -11, -10, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -9, -70, -16, -9, -69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -9, -40, -16, -9, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -9, -30, -17, -9, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -9, -4, -17, -9, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -9, -3, -17, -9, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -9, 10, -12, -9, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -9, 16, -16, -9, 89, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 22, -11, -8, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 29, -17, -8, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 42, -17, -8, 43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -8, 44, 16, -8, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -7, -73, 8, -7, -73, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, -6, -72, -16, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, -4, -65, -16, -4, -64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, -4, -58, -14, -4, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -5, -17, -4, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, -2, -11, -4, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 5, -17, -4, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 35, -17, -3, 35, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 36, -7, -4, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 54, -16, -4, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 56, -17, -4, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 57, -17, -2, 57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 58, -16, -4, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 63, -7, -4, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -4, 64, -15, -4, 88, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, -3, -24, -11, -3, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, -5, -16, -3, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, 5, -16, -3, 6, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, 7, -2, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, 34, -17, -3, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, 36, -14, -3, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, 40, -15, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -3, 63, -10, -3, 63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, -2, -60, -16, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, -2, -25, -15, -2, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -14, -17, 1, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -13, -16, -2, -12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -10, -17, -1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -8, -17, -1, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, -6, -17, -2, 4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 5, -17, -2, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 7, -9, -2, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 20, -17, 0, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 21, -12, -2, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 28, -16, -2, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -2, 58, -16, -2, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -24, -17, -1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -23, -17, -1, -16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, -15, -16, -1, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 0, -17, -1, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 1, -17, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 21, -17, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 22, -17, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 24, -17, -1, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 54, -15, -1, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, -1, 57, -15, -1, 59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, 0, -46, -15, 0, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -43, -17, 2, -43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -42, -16, 0, -41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -40, -17, 2, -38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -37, -17, 1, -37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -36, -17, 2, -32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -31, -17, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -30, -16, 0, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -18, -17, 1, -16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -15, -12, 0, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -9, -17, 1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -8, -17, 1, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -6, -17, 0, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, -3, -16, 0, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 1, -17, 0, 3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 5, -13, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 21, -17, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 24, -11, 0, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 33, -17, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 42, -17, 0, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 44, -16, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 47, -16, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, 0, 50, -15, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 52, -16, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 0, 54, -15, 0, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, 1, -55, -17, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -51, -17, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -50, -11, 1, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -42, -16, 1, -41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -30, -16, 1, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -15, -12, 1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -6, -17, 1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, -3, -17, 2, -1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 0, -17, 1, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 1, -17, 2, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 2, -11, 1, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 3, -17, 2, 3, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 5, -13, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 20, -17, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 25, -15, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 30, -17, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 42, -17, 1, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 44, -16, 2, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 46, -16, 2, 46, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 49, -15, 1, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 1, 50, -15, 3, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 52, -15, 3, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 1, 53, -15, 1, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 2, -50, -14, 2, -47, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, 2, -46, -17, 2, -44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -42, -17, 2, -41, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -37, -17, 2, -37, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -30, -16, 2, -29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -23, -17, 2, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -18, -17, 2, -16, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -10, -13, 2, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -8, -17, 3, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, -6, -17, 2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, 0, -16, 2, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, 2, -11, 2, 2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, 2, 22, -17, 2, 22, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, 24, -17, 2, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -17, 2, 42, -17, 2, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 2, 47, -16, 2, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -17, 2, 48, -16, 3, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -17, 3, -50, -16, 3, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, -48, -16, 3, -48, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, -23, -17, 5, -21, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, -20, -17, 3, -19, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -17, 3, -18, -17, 6, -15, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, -10, -14, 3, -10, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 3, -9, -17, 3, -6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, -5, -14, 3, -5, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 3, 2, -16, 3, 2, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, 24, -16, 3, 24, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, 26, -17, 3, 27, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, 33, -17, 3, 35, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, 38, -17, 3, 39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 3, 45, -17, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -17, 3, 46, -17, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -17, 3, 47, -17, 3, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -17, 4, -20, -17, 4, -19, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -17, 4, -9, -17, 6, -9, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -17, 4, -6, -17, 6, -6, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -17, 4, 48, -16, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -17, 4, 50, -15, 5, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 4, 52, -15, 5, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 5, -52, -17, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 5, -20, -17, 5, -19, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -17, 5, 49, -15, 5, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -17, 5, 53, -15, 5, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -17, 6, -20, -17, 8, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 6, 11, -17, 10, 11, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 6, 25, -17, 6, 38, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 6, 46, -17, 6, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -17, 7, -6, -17, 7, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 7, 3, -17, 10, 3, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 7, 14, -17, 7, 17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 8, -22, -17, 8, -17, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 8, -10, -14, 8, -10, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 8, -5, -14, 8, -5, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 8, 15, -17, 8, 16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 8, 18, -17, 8, 20, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 9, -21, -17, 9, -18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 9, -8, -17, 9, -7, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 9, 15, -10, 9, 15, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 9, 16, -10, 9, 16, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -17, 10, -20, -17, 10, -19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 11, -20, -17, 11, -19, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -17, 11, 5, -15, 11, 9, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -17, 15, 4, -17, 17, 4, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -17, 15, 10, -17, 17, 10, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, -11, -79, -15, -11, -75, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -10, 91, -13, -10, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -10, 92, -13, -10, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, -68, -16, -9, -68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, -67, -16, -8, -66, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, -30, 17, -5, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, -29, -15, -9, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, -19, -10, -9, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, -2, -16, -9, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, 8, -10, -9, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -9, 90, -12, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, -53, -16, -8, -53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, -52, -16, -8, -46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, -45, -13, -8, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, 21, -15, -7, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, 29, -16, -8, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -8, 30, -16, -8, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -5, 83, -12, -5, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -5, 89, -14, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -16, -4, -54, -5, -4, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, -9, -6, -4, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 5, -16, -3, 5, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 34, -4, -4, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 48, -15, -4, 49, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 50, -11, -4, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 56, -16, -1, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -4, 57, -16, -4, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -3, -63, -14, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -16, -3, 34, -11, -3, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -58, -9, -2, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -50, -14, -2, -48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -47, -16, -1, -46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -45, -16, -2, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -32, -15, -2, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -14, -15, -2, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -11, -15, -2, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -9, -15, -1, -9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -8, -15, -2, -7, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -6, -15, -1, -6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -5, -14, -2, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -2, -16, 0, -2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, -1, -11, -2, 4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 5, -14, 0, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 6, -9, -2, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 30, -16, 0, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 31, -10, -2, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 38, -16, -1, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 39, -16, -2, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -2, 41, -2, -2, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -24, -13, -1, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -19, -14, -1, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -16, -16, 1, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -8, -15, -1, -7, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -5, -15, -1, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, -3, -16, -1, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, 20, -16, -1, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, 21, -16, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, 22, -16, -1, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, 23, -16, 1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, 24, -5, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, -1, 25, -11, -1, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -43, -12, 0, -39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -38, -16, 1, -37, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -36, -15, 0, -35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -34, -16, 1, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -32, -15, 0, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -28, -15, 0, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -9, -15, 1, -9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -8, -15, 0, -7, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, -6, -15, 1, -6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 1, -15, 1, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 2, -13, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 20, -16, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 22, -16, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 31, -15, 0, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 35, -16, 2, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 39, -14, 0, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 42, -16, 0, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 0, 43, -16, 2, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -55, -14, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 1, -54, -14, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -52, -14, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -51, -14, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 1, -43, -12, 1, -39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -36, -15, 1, -35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -32, -15, 1, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -28, -15, 1, -10, Blocks.DIRT.getDefaultState());

    }
    
    public static void generatePart25()
    {
        structure.fillWithBlocks(world, start, -16, 1, -8, -15, 1, -7, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -3, -16, 1, -3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, -1, -15, 1, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, 3, -16, 11, 3, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, 4, -16, 2, 4, Blocks.DARK_OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, 31, -15, 1, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, 39, -14, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 1, 42, -15, 1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -46, -16, 2, -41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -16, 2, -40, -16, 2, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -38, -16, 2, -37, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -36, -16, 2, -33, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -32, -15, 2, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -28, -15, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -27, -14, 2, -11, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -16, 2, -9, -15, 3, -9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -8, -15, 2, -7, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -6, -15, 3, -6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -5, -13, 2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, -4, -15, 2, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, 11, -16, 11, 11, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, 21, -16, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, 24, -1, 2, 24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -16, 2, 25, -16, 6, 25, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, 26, -16, 3, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, 30, -16, 6, 30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, 31, -15, 2, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 2, 39, -14, 2, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -16, 2, 42, -16, 2, 42, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 3, -21, -16, 4, -21, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -16, 3, -20, -16, 3, -19, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, 3, -18, -16, 4, -18, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -16, 3, -13, -16, 3, -11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 3, 15, -16, 3, 16, Blocks.IRON_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -16, 3, 31, -16, 3, 32, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -16, 3, 33, -16, 3, 37, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -16, 3, 39, -16, 3, 39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 3, 40, -16, 3, 40, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 3, 45, -16, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -16, 3, 46, -16, 5, 46, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 3, 47, -16, 5, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -16, 4, -54, -14, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 4, -52, -14, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 4, 26, -16, 6, 26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 4, 27, -16, 5, 28, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 4, 29, -16, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 4, 38, -16, 5, 38, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -16, 4, 40, -16, 4, 40, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 5, -55, -14, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -16, 5, -51, -14, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -16, 5, -20, -16, 5, -19, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 6, -54, -14, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 6, 24, -3, 6, 24, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 6, 27, -14, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 6, 31, -16, 6, 37, Blocks.BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -16, 6, 39, -3, 6, 39, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 6, 45, -16, 6, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -16, 7, -10, -13, 7, -10, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 7, -5, -13, 7, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 7, 15, -16, 7, 16, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 7, 19, -16, 7, 20, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 7, 26, -16, 7, 29, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 8, 15, -15, 8, 16, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 8, 17, -10, 8, 17, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 9, -9, -15, 9, -9, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 9, -8, -15, 9, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 9, -6, -15, 9, -6, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 10, -8, -15, 10, -8, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 10, -7, -15, 10, -7, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -16, 12, 4, -16, 17, 4, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 12, 10, -16, 17, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 18, 4, -16, 18, 7, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 19, 4, -16, 19, 4, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -16, 19, 10, -15, 19, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -10, -79, -15, -10, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, -9, -70, -15, -9, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, -32, -13, -9, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, -20, -10, -9, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, -1, -15, -9, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, 7, -9, -9, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, 16, -14, -8, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, 17, -1, -9, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, 49, -12, -9, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, 88, -14, -8, 88, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -9, 89, -10, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, -66, -15, -8, -52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, -51, -15, -8, -46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, 29, -14, -8, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, 31, -15, -8, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -8, 89, -11, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -7, 84, -7, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -6, -72, -14, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, -5, -66, 45, -5, 85, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, -66, -13, -4, -64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, -4, -10, -6, -4, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 5, -2, -4, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 47, -15, -4, 49, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 56, -14, -4, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 58, -15, -2, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 59, 17, -4, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -4, 60, -14, -4, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -3, -5, -14, -3, -4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -3, -3, -15, -1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -3, -2, -15, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -3, 60, -15, -3, 63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, -2, -60, -14, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, -2, -47, -14, -2, -46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, -45, -15, -1, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, -43, -12, -2, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, -33, -15, -1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, -30, -15, -2, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, -29, -15, -2, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, -12, -13, -2, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, -2, -11, -2, 4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, 28, -15, -2, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -2, 39, -11, -2, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -55, -11, -1, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -50, -15, 1, -50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -48, -14, -1, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -43, -13, -1, -41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -20, -12, -1, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -15, -10, -1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, -2, -15, 1, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, 14, -12, -1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, 18, -15, 1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, 20, -15, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, 21, -15, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, 22, -15, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, -1, 23, -15, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, -38, -12, 0, -35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, -34, -15, 2, -30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, -29, -15, 1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 21, -15, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 23, -15, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 35, -14, 0, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 37, -14, 0, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 42, -15, 0, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 44, -14, 1, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 45, -14, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 47, -14, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 0, 52, -15, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 0, 58, -15, 0, 58, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, -38, -12, 1, -35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, -4, -15, 2, -4, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, 3, -15, 1, 3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, 4, -15, 2, 4, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, 35, -14, 1, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, 37, -14, 1, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, 43, -14, 2, 43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 1, 46, -3, 1, 46, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 2, -46, -15, 2, -46, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 2, -44, -14, 2, -43, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 2, -41, -12, 2, -38, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 2, -37, -14, 2, -35, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 2, -29, -15, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 3, -15, 2, 3, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 2, 5, -15, 2, 9, Blocks.DARK_OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 11, -14, 2, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -15, 2, 20, -15, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 22, -15, 2, 22, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 25, -12, 2, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 26, -12, 2, 29, Blocks.SMOOTH_STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 30, -13, 4, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 35, -15, 2, 36, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 2, 37, -14, 2, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 42, -15, 2, 43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 44, -14, 2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 2, 46, -15, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -15, 2, 47, -15, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -15, 3, -50, -13, 3, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, -38, -14, 3, -38, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, -26, -15, 5, -26, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -15, 3, -12, -14, 3, -11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 3, -15, 3, 3, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 4, -15, 11, 4, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 10, -15, 11, 10, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 19, -15, 5, 19, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 25, -15, 6, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 31, -15, 4, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 33, -14, 3, 33, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -15, 3, 38, -14, 3, 38, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -15, 3, 39, -15, 3, 40, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 3, 45, -15, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -15, 3, 48, -15, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -15, 5, -38, -15, 6, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -15, 5, -37, -15, 6, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -15, 5, -36, -15, 6, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -15, 5, 30, -15, 5, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 6, 14, -11, 6, 18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 6, 26, -12, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 6, 30, -15, 6, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 6, 32, -10, 6, 38, Blocks.BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 6, 50, -13, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 7, 15, -12, 7, 15, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 7, 16, -14, 7, 16, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 7, 18, -10, 7, 18, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -15, 7, 25, -4, 7, 25, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -15, 7, 30, -10, 7, 30, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -15, 7, 31, -13, 7, 33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 8, 27, -15, 8, 28, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -15, 8, 32, -15, 8, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 9, 32, -15, 10, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 11, 32, -15, 11, 32, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -15, 12, 5, -15, 17, 5, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 12, 6, -15, 13, 8, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 12, 9, -15, 17, 9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 14, 6, -15, 14, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 15, 6, -15, 17, 6, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 15, 7, -15, 16, 7, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -15, 15, 8, -15, 17, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 17, 7, -15, 17, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -15, 18, 5, -15, 18, 9, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 19, 4, -15, 19, 5, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -15, 19, 6, -15, 19, 8, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -15, 19, 9, -15, 19, 10, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -11, -79, -7, -11, -79, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, -11, -78, -11, -11, -75, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -10, -77, -10, -10, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, -70, -12, -7, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, -69, -8, -9, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, -40, -14, -9, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, -29, -14, -9, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, -28, -14, -9, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, -21, -10, -9, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, 0, -14, -9, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, 5, -7, -9, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -9, 95, -11, -9, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, -66, -10, -8, -66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, -53, -12, -8, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, -50, -14, -8, -46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, 21, -7, -8, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, 31, -14, -8, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, 32, -14, -8, 78, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, 79, -14, -8, 88, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -8, 95, -11, -8, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, -6, -70, -12, -6, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, -6, 88, -12, -6, 90, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, -63, -11, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, 48, -3, -4, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -4, 65, -11, -4, 87, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, -3, -60, -10, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -3, -3, -13, -3, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -3, -1, -14, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -3, 0, -6, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -3, 40, -14, -2, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -3, 42, -14, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -3, 60, -13, -3, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -45, -12, -2, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -28, -12, -2, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -24, -12, -2, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -16, -14, -2, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -15, -14, -1, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -9, -14, -2, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -8, -14, -1, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, -6, -9, -2, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, 28, -14, 0, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, 29, -14, -2, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, 30, -14, 0, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, 38, -11, -2, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -2, 60, -14, -2, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, -1, -49, -12, -1, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -46, -13, -1, -41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -40, -14, -1, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -39, -14, 0, -38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -36, -14, 1, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -29, -10, -1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, -6, -10, -1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 0, -11, -1, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 12, -10, -1, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 13, -13, -1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 18, -14, -1, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 21, -14, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 22, -14, -1, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 23, -14, 1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, -1, 57, -14, -1, 59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 0, -46, -11, 0, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, -29, -14, 0, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, -18, -11, 0, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, -9, -14, 0, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, -8, -14, 1, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, -6, -13, 0, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, -4, -14, 2, -2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, 0, -14, 0, 1, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 0, 20, -14, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, 22, -14, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, 31, -13, 0, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, 33, -14, 1, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, 42, -14, 0, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, 43, -14, 0, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 0, 50, -14, 0, 52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 0, 54, -12, 0, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 1, -29, -14, 1, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, -18, -11, 1, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, -9, -14, 1, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, -6, -13, 1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, 3, -12, 1, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, 25, -12, 1, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, 29, -14, 1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, 31, -13, 1, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, 42, -14, 1, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, 49, -14, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 1, 53, -14, 7, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, -46, -11, 2, -38, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 2, -34, -13, 2, -33, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 2, -32, -14, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 2, -30, -14, 2, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, -29, -14, 2, -28, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, -9, -14, 2, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, -8, -14, 3, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, -6, -13, 2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, -1, -14, 2, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 3, -13, 2, 4, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 2, 5, -14, 11, 5, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 6, -14, 2, 8, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 9, -14, 11, 9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 10, -12, 2, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -14, 2, 14, -12, 2, 17, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 18, -14, 2, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 21, -14, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 31, -13, 2, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 2, 33, -14, 2, 35, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, 2, 42, -14, 2, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, -47, -14, 3, -46, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, -41, -13, 3, -39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, -14, -12, 3, -14, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, -9, -14, 3, -6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 2, -14, 3, 2, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 3, -14, 3, 3, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 6, -14, 10, 6, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 8, -14, 10, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 15, -13, 3, 15, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -14, 3, 18, -14, 6, 18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 19, -14, 5, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 25, -14, 5, 25, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 31, -11, 3, 31, Blocks.CAMPFIRE.getDefaultState().with(CampfireBlock.FACING, Direction.WEST).with(CampfireBlock.LIT, true).with(CampfireBlock.SIGNAL_FIRE, false).with(CampfireBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, 3, 40, -13, 3, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 3, 45, -14, 4, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -14, 3, 46, -14, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -14, 3, 47, -14, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -14, 4, -9, -14, 6, -9, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, 4, -6, -14, 6, -6, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, 4, 3, -14, 4, 3, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 4, 32, -14, 5, 32, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, 5, -39, -14, 6, -39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -14, 5, -38, -14, 6, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -14, 5, -37, -14, 7, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -14, 5, -36, -14, 6, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -14, 5, -35, -14, 6, -35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -14, 5, 7, -14, 6, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 5, 26, -11, 5, 26, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, 5, 30, -13, 6, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 5, 52, -14, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 6, 19, -10, 6, 19, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -14, 6, 20, -10, 6, 20, Blocks.BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, 6, 25, -12, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 6, 31, -14, 10, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 7, -9, -14, 7, -9, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 7, -6, -13, 7, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 7, 7, -14, 8, 7, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -14, 8, -37, -14, 8, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -14, 8, 15, -14, 8, 16, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 8, 26, -5, 8, 26, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -14, 8, 29, -9, 8, 29, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -14, 8, 32, -14, 8, 33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 9, -8, -14, 9, -7, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -14, 9, 7, -14, 10, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 9, 33, -14, 10, 33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -14, 11, 6, -14, 12, 8, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -14, 11, 31, -14, 11, 31, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -14, 18, 5, -14, 18, 9, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -13, -11, 93, -10, -11, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -9, -40, -12, -9, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -9, -38, -13, -5, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -9, -23, -9, -9, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -9, 0, -7, -9, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -9, 16, 2, -9, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, -50, -13, -8, -50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, -49, -13, -8, -46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 30, -11, -8, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 33, 20, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 78, -11, -8, 80, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 81, -13, -8, 85, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -8, 86, -6, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -6, -72, -12, -6, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, -5, 89, -12, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, -4, -58, -5, -4, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -4, 47, -2, -4, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -4, 64, -13, -4, 88, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, -3, -63, -11, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, -3, -16, -13, -3, -16, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, -15, -13, -2, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, -13, -12, -3, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, 40, -13, 1, 40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, 41, -13, -3, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, 42, -13, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -3, 43, -13, -3, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, -60, -12, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, -2, -50, -9, -2, -46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, -16, -9, 1, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, -13, -5, -2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, 5, -9, -2, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, 28, -6, -2, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, 60, 7, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -2, 61, -13, -2, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, -1, -50, -11, -1, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, -40, -13, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, -37, -13, -1, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, -34, -12, -1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, -1, -13, 1, -1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 18, -13, 1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 20, -13, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 21, -13, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 22, -13, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 23, -13, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, -1, 57, -10, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -29, 3, 1, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -28, -12, 0, -27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -26, -12, 0, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -24, -13, 0, -23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -22, -12, 0, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, -20, -13, 1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 0, -11, 2, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 1, -12, 0, 1, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 0, 21, -13, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 23, -13, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 33, -13, 1, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 35, -12, 0, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 37, -13, 1, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 39, -13, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 42, -12, 0, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 44, -12, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 47, -12, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 0, 50, -11, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 52, -12, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 0, 57, -10, 0, 60, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 1, -55, -12, 2, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -51, -12, 2, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -34, -8, 1, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -28, -12, 1, -27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -26, -12, 1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -24, -13, 1, -23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, -22, -12, 1, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, 28, -11, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, 35, -12, 1, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, 42, -12, 1, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, 44, -12, 2, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, 49, -11, 1, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -13, 1, 50, -11, 3, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, 52, -8, 5, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 1, 53, -11, 1, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -13, 1, 56, -13, 1, 56, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -50, -11, 2, -38, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, -36, -13, 2, -36, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, -31, -11, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, -30, -12, 2, -29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -28, -12, 2, -27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -26, -12, 2, -25, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -24, -13, 2, -23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -22, -12, 2, -21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -20, -13, 2, -11, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, -9, -13, 2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, -4, -12, 2, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, -1, -10, 2, -1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 1, -12, 2, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 5, -11, 2, 5, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, 6, -13, 2, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 9, -11, 2, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, 13, -13, 2, 18, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 19, -11, 2, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, 20, -13, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 22, -13, 2, 22, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 33, -13, 2, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 35, -12, 2, 36, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -13, 2, 37, -13, 2, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 2, 39, -13, 2, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -13, 2, 42, -12, 2, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -55, -12, 4, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -51, -12, 4, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -47, -11, 3, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -45, -12, 3, -45, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -37, -13, 7, -37, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -11, -12, 3, -11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, -9, -13, 3, -6, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -13, 3, 2, -13, 3, 3, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, 9, -12, 3, 10, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, 13, -13, 4, 13, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, 18, -13, 4, 18, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, 25, -12, 4, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, 28, -12, 3, 28, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, -13, 3, 29, -12, 3, 29, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, -13, 3, 39, -13, 3, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 3, 45, -11, 3, 45, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 4, 50, -11, 5, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 5, -55, -12, 6, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 5, -51, -12, 6, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 5, -39, -13, 6, -39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -13, 5, -38, -13, 7, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -13, 5, -36, -13, 7, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -13, 5, -35, -13, 6, -35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -13, 5, 13, -11, 6, 13, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 5, 18, -11, 6, 18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 5, 25, -12, 6, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 5, 49, -11, 5, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -13, 5, 53, -11, 5, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -13, 6, -54, -11, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 7, -55, -12, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 7, -51, -12, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 7, -9, -13, 7, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 7, 16, -12, 7, 16, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 8, -38, -13, 8, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -13, 8, -9, -13, 8, -6, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -13, 8, 15, -13, 8, 16, Blocks.HAY_BLOCK.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 8, 32, -13, 10, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -13, 9, 27, -6, 9, 27, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -13, 9, 28, -8, 9, 28, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -12, -10, 91, -8, -10, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -9, -76, -7, -9, -76, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, -9, -75, -9, -9, -71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -9, -38, -10, -9, -36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -9, -35, -12, -5, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -9, 88, -6, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -50, -11, -8, -49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, -48, -12, -8, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, 20, -12, -5, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -8, 81, 0, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -6, 91, -11, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, -5, 88, -10, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, -4, -66, -10, -4, -64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, -4, -22, -10, -4, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -4, -15, -12, -3, -15, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -4, -14, -5, -4, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -4, 64, -4, -4, 64, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, -16, -12, -3, -15, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, -14, -10, -1, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, 40, -12, -3, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, 41, -12, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, 42, -12, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, 43, -12, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, 61, -11, -3, 62, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -3, 64, -6, -3, 64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, -2, 61, -11, -2, 62, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, -1, -46, -11, -1, -41, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, -40, -12, -1, -38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, -36, -12, 1, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, -1, -12, -1, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 10, -11, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 18, -11, -1, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 20, -12, -1, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 21, -12, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 22, -12, -1, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, -1, 23, -12, 1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -54, -12, 0, -54, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, 0, -53, -12, 0, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -24, 3, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -23, -11, 1, -23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -20, -11, 0, -19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, -9, -12, 1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 2, -11, 0, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 6, -11, 1, 6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 7, -11, 0, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 20, -12, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 22, -12, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 31, -10, 2, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 32, -11, 0, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 39, -12, 0, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, 0, 40, -12, 2, 40, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 0, 41, -12, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, 1, -20, -11, 1, -19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 7, -11, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 32, -11, 1, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 38, -11, 1, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 1, 57, -11, 1, 57, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, -37, -11, 2, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, 2, -24, -11, 2, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, -23, -11, 2, -23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, -20, -11, 2, -19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, -18, -12, 2, -18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, -17, -12, 2, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, 2, 3, -11, 2, 5, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -12, 2, 6, -11, 2, 6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, 7, -11, 2, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, 13, -11, 2, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, 18, -11, 2, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, 21, -12, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, 30, -10, 2, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, 32, -12, 2, 32, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 2, 33, -12, 2, 34, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 2, 37, -11, 2, 38, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 2, 39, -12, 2, 39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 2, 41, -12, 2, 41, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, -49, -12, 3, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, -41, -12, 3, -41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, -15, -12, 3, -11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, -3, -12, 3, -3, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, 3, -11, 3, 4, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, 13, -12, 3, 13, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, 18, -11, 4, 18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, 30, -12, 6, 30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 3, 32, -11, 3, 32, Blocks.LAVA.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 4, 13, -12, 4, 13, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 4, 32, -12, 5, 32, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 5, -39, -12, 6, -39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -12, 5, -38, -12, 6, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -12, 5, -37, -12, 7, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -12, 5, -36, -12, 7, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -12, 5, -35, -12, 6, -35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -12, 6, -15, -12, 6, -3, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 6, 50, -10, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -12, 7, 31, -10, 7, 31, Blocks.BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -12, 9, -14, -12, 9, -4, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -11, -11, -74, 18, -9, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -11, 98, -4, -11, 98, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, -9, -70, -8, -9, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -9, -40, -4, -9, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -9, -32, -11, -9, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -9, 15, 3, -9, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -9, 48, -10, -9, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -9, 50, -11, -9, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, -74, 18, -8, -74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, -8, -72, -7, -8, -68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, -67, -11, -6, -67, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, -53, -6, -8, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, -47, -11, -8, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, 20, -5, -8, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -8, 94, -11, -8, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, -6, -72, -11, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, -6, -70, 43, -6, 89, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -5, -70, -9, -5, -68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, -5, 86, -10, -5, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -4, -15, -3, -4, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, -15, -10, -3, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, -12, -9, -3, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, -9, -11, -3, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, -7, -11, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, 25, -10, -3, 27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, 28, -10, -3, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, 42, -11, -3, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, 43, -11, -3, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -3, 45, -10, -3, 62, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, -60, -11, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, -2, -45, -11, -1, -42, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, -41, -7, -2, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, -27, -10, -2, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, -23, -11, -2, -20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, -19, -5, -2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, 25, -10, -2, 26, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -2, 27, -11, -2, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -47, -11, -1, -40, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -39, -11, 1, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -35, -8, -1, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -31, -11, 1, -28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -8, -8, -1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, -1, -11, -1, -1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, 14, -11, -1, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, 17, -11, -1, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, 20, -11, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, 21, -11, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, 22, -11, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, -1, 23, -11, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -54, -9, 0, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -53, -5, 0, -53, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, 0, -52, -9, 0, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -27, -11, 2, -25, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -22, 2, 1, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -21, -11, 2, -19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -10, -10, 0, -9, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -7, -11, 0, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, -1, -9, 0, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 21, -11, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 23, -11, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 39, -11, 2, 39, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 41, -11, 2, 41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 44, -10, 1, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 45, -10, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 47, -10, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, 0, 52, -10, 0, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 0, 54, -10, 0, 60, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, 1, -55, -9, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -11, 1, -54, -9, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -52, -9, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -51, -9, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -11, 1, -43, 0, 1, -28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -13, -11, 2, -5, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -4, -11, 1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, -1, -10, 1, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 1, -11, 2, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 3, -11, 1, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 25, -11, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 43, -11, 2, 43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 1, 47, -11, 1, 48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, -30, -11, 2, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, -18, -11, 2, -17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, -16, -11, 2, -15, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, 2, -3, -10, 2, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -11, 2, 14, -11, 2, 16, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 17, -11, 2, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 20, -11, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 22, -11, 2, 22, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 25, -11, 6, 25, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 26, -8, 2, 29, Blocks.SMOOTH_STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 35, -10, 2, 36, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -11, 2, 42, -11, 2, 43, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 44, -10, 2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 2, 46, -9, 2, 46, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -50, -11, 3, -50, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -48, -11, 3, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -14, -11, 6, -14, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -13, -11, 9, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, -4, -11, 6, -4, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, 2, -11, 3, 4, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, 5, -11, 5, 5, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -11, 3, 9, -11, 3, 10, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, 13, -11, 4, 14, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, 17, -11, 4, 18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 3, 30, -11, 3, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 4, -54, -9, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 4, -52, -9, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 4, 30, -11, 4, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 5, -55, -9, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -11, 5, -51, -9, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -11, 5, -38, -11, 6, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -11, 5, -37, -11, 6, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -11, 5, -36, -11, 6, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -11, 5, 14, -11, 6, 18, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 5, 30, -11, 5, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 6, -15, -4, 6, -15, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -11, 6, -3, -4, 6, -3, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -11, 6, 26, -8, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 6, 30, -10, 6, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 7, -14, -11, 9, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 7, 15, -11, 8, 16, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -11, 9, -15, -5, 9, -15, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -11, 9, -3, -5, 9, -3, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -11, 10, -13, -11, 10, -5, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, -11, -78, -8, -11, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -11, 97, 43, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -10, -80, -8, -9, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -10, -72, -9, -9, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -10, -71, 3, -10, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -10, 87, -7, -10, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -10, 97, 1, -10, 97, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -9, -79, -10, -8, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, -61, -10, -9, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, -59, -8, -9, -57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, -56, -10, -9, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, -31, -10, -9, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, 35, -9, -9, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, 38, -10, -9, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, 40, -2, -9, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, 50, -10, -9, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, 51, -10, -9, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -9, 95, -1, -9, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -8, -78, -10, -7, -78, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -67, -10, -8, -66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -47, 2, -5, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, -46, -8, -8, -44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, 30, -9, -8, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, 78, 5, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -8, 94, 0, -8, 94, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -7, -77, -10, -6, -76, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -7, -72, -9, -7, -72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -6, -75, -10, -6, -75, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -6, 91, -9, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -5, -75, -10, -5, -75, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -5, -67, 43, -5, 85, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, -67, -4, -4, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -4, -60, -4, -4, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 2, -7, -4, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 26, -9, -4, 27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 28, -10, -4, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 65, -10, -4, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -4, 66, -10, -4, 87, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -3, -24, -10, -3, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, -17, -8, -3, -15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, -13, -7, -3, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, -8, -7, -3, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, -4, -7, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, 41, -10, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -3, 65, -10, -3, 65, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -2, -60, -1, -2, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, -45, -4, -2, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, -23, -7, -2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 1, -10, 0, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 2, -8, -2, 4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 27, -9, -2, 27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 38, -9, -2, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 40, -2, -2, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -2, 62, -10, -2, 62, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -1, -60, -8, -1, -58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, -1, -57, 0, -1, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -46, -9, -1, -46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -45, -9, -1, -43, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -42, -10, 0, -42, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -40, -7, -1, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, -1, -10, 0, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 2, -9, -1, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 10, -10, -1, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 11, -10, 1, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 13, -10, 1, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 14, -10, -1, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 15, -10, 1, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 16, -10, -1, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 17, -10, 1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 18, -10, -1, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 19, -10, 1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 20, -10, -1, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 21, -10, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 22, -10, -1, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 23, -10, 1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 25, -1, 1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 26, -8, -1, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 29, 2, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, -1, 61, -3, -1, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 0, -57, -9, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 0, -46, -7, 0, -42, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -41, -8, 0, -41, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -40, 3, 0, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -23, -9, 0, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -21, -10, 2, -21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -20, -10, 0, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -19, -10, 0, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -15, -9, 0, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -13, -3, 0, -5, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, -4, -9, 0, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 2, -10, 0, 4, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 0, 5, -10, 0, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 7, -10, 2, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 12, -10, 2, 12, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 14, -10, 2, 14, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 16, -10, 2, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 18, -10, 2, 18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 20, -10, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 22, -10, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 24, -9, 0, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 26, -8, 0, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 29, -9, 0, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 32, -10, 2, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 35, -9, 0, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 37, -10, 1, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 39, -8, 0, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 42, -10, 2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 0, 50, -10, 0, 51, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 1, -50, 6, 1, -34, Blocks.DIRT.getDefaultState());

    }
    
    public static void generatePart26()
    {
        structure.fillWithBlocks(world, start, -10, 1, -27, -5, 1, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -20, -10, 1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -19, -10, 1, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -15, -8, 1, -15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -14, -9, 1, -14, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -6, -10, 1, -5, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, -10, 1, -4, -9, 1, -4, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, -3, -9, 1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 5, -10, 1, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 26, -8, 1, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 29, -9, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 35, -9, 1, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 39, -8, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 49, -10, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 1, 53, -9, 2, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -50, -8, 2, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 2, -47, -1, 2, -38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -37, -7, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -20, -10, 2, -20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -19, -10, 2, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -16, -8, 2, -16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, -15, -8, 2, -15, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 2, 0, -10, 2, 6, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 11, -10, 2, 11, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 13, -10, 2, 13, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 15, -10, 2, 15, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 17, -10, 2, 17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 19, -10, 2, 19, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 21, -10, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 25, -7, 3, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 37, -10, 2, 38, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 2, 39, -8, 2, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 3, -50, -8, 3, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, -47, -4, 3, -41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 3, -40, -10, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -10, 3, -14, -6, 3, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, -9, -10, 3, -8, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -10, 3, -4, -6, 3, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, 30, -10, 3, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, 40, -10, 3, 40, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 3, 53, -9, 4, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -43, -10, 4, -43, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -14, -10, 9, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, -12, -10, 4, -11, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -10, 4, -4, -10, 9, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, 25, -10, 4, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 4, 30, -10, 4, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 5, -7, -10, 5, -6, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, -10, 5, 25, -10, 5, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 5, 30, -10, 5, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 5, 53, -9, 6, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 6, -54, -8, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 6, 25, -7, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 9, -24, -10, 9, -24, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, 9, -13, -5, 9, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 10, -14, -6, 10, -14, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, 10, -13, -6, 10, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 10, -4, -6, 10, -4, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, 11, -12, -10, 11, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 12, -31, -10, 12, -27, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -10, 12, -12, -10, 12, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 13, -31, -10, 14, -31, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -10, 13, -27, -10, 14, -27, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -10, 13, -12, -10, 13, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 14, -12, -10, 14, -12, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -10, 15, -31, -9, 15, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 15, -27, -10, 15, -27, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 16, -34, -7, 16, -34, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, 16, -32, -7, 16, -32, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, 16, -31, -7, 16, -31, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, 17, -33, -6, 17, -33, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, 17, -30, -6, 17, -30, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, 17, -28, -9, 17, -28, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -10, 18, -29, -5, 18, -29, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -10, 24, -39, -10, 25, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -10, 24, -38, -10, 24, -36, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -10, 24, -35, -10, 25, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, -82, -8, -11, -82, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -11, 93, -5, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -10, -81, -9, -10, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -10, -77, -5, -10, -77, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, -10, -76, -7, -10, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, -81, -9, -9, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, -60, -5, -9, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, -55, -9, -9, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, -29, 0, -9, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, -18, -4, -9, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, -12, -9, -5, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, 14, 3, -9, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, 38, -1, -9, 48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, 50, -8, -9, 51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -9, 52, 4, -9, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, -79, -9, -8, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, -67, -8, -8, -67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, -66, 5, -8, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, -43, -9, -8, -43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -8, 32, 20, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -7, -79, -9, -7, -77, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -6, -78, -9, -6, -74, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -5, -78, -9, -5, -74, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -5, 86, -8, -5, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -5, 88, -7, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, -4, -22, -8, -4, -21, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, -20, -1, -4, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 28, -8, -3, 28, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 29, -2, -4, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 61, -9, -4, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 65, -8, -4, 66, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -4, 67, -8, -4, 87, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, -3, -60, -5, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -23, -8, -3, -15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -14, -8, -3, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, -9, -5, -3, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 25, -3, -2, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 26, -8, -3, 28, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 29, 3, -3, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 42, -5, -3, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 47, -9, -3, 47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 49, -6, 0, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 50, 1, -3, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 61, -7, -3, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -3, 65, -8, -3, 66, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, -2, -27, 15, -2, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, -26, -8, -2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, 1, -6, -2, 4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, 26, -9, -2, 27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, 37, -7, -2, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -2, 62, -9, -2, 63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, -1, -42, -5, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -29, 1, -1, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -28, -8, -1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, -4, -9, -1, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 1, -8, 0, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 10, -7, 1, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 11, -7, -1, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 12, -8, 0, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 13, -7, -1, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 14, -8, 0, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 15, -7, -1, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 16, -8, 0, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 17, -7, -1, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 18, -8, 0, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 19, -9, -1, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 20, -9, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 21, -9, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 22, -9, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 23, -9, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 54, -3, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, -1, 62, -9, -1, 63, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, -21, -8, 0, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, -19, -9, 1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, -18, -9, 1, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 2, -9, 2, 2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 3, -9, 0, 4, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, 0, 5, -9, 2, 5, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 6, -9, 1, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 7, -9, 2, 7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 8, -9, 1, 8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 9, -9, 2, 9, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 11, -8, 1, 11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 13, -8, 1, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 15, -8, 1, 15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 17, -8, 1, 17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 19, -9, 0, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 21, -9, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 23, -9, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 31, -5, 0, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 42, -7, 0, 42, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, 0, 43, -9, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 47, -8, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, 0, 50, -5, 0, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 52, -8, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 0, 59, -8, 0, 60, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, 1, -21, -8, 1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, -1, -8, 1, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 12, -7, 1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 14, -7, 1, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 16, -7, 1, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 18, -7, 1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 19, -9, 1, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 31, -6, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 43, -9, 2, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 49, -6, 1, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -9, 1, 50, -6, 4, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 1, 54, -9, 1, 57, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -9, 1, 58, -9, 7, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, -21, -8, 2, -20, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, 2, -18, -9, 2, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, -14, -6, 3, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, -4, -6, 3, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, -3, -8, 2, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, 2, -1, -9, 2, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 1, -9, 2, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 3, -9, 2, 4, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 6, -9, 2, 6, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 8, -9, 2, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 10, -8, 2, 10, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 11, -8, 2, 11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 12, -8, 2, 12, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 13, -8, 2, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 14, -8, 2, 14, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 15, -8, 2, 15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 16, -8, 2, 16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 17, -8, 2, 17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 18, -8, 2, 18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 19, -9, 2, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 20, -9, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 22, -9, 2, 22, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 30, -9, 6, 30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 31, -9, 3, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 33, -9, 6, 33, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 34, -9, 6, 34, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 35, -8, 2, 36, Blocks.SMOOTH_STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 37, -9, 6, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 38, -9, 6, 38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 2, 42, -9, 2, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -40, -9, 7, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -39, -8, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -38, -9, 7, -38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -37, -8, 3, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -36, -9, 7, -36, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -35, -8, 3, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -34, -9, 7, -34, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -33, -8, 3, -33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -32, -9, 7, -32, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -31, -8, 3, -31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -30, -9, 7, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -29, -8, 3, -29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -28, -9, 7, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -27, -8, 3, -27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -26, -9, 7, -26, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -25, -9, 3, -25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -24, -9, 7, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, -23, -8, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -9, 3, 26, -9, 6, 26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, 28, -9, 4, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, 40, -8, 3, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 3, 55, -9, 3, 56, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -9, 4, -46, -9, 4, -46, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 4, -44, -9, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 4, -42, -5, 4, -42, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 4, -14, -9, 5, -14, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -9, 4, -4, -9, 5, -4, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -9, 4, 8, -9, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -9, 4, 9, -9, 5, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -9, 4, 10, -9, 5, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -9, 4, 11, -9, 5, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -9, 4, 25, -9, 5, 26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 4, 31, -9, 5, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 5, 27, -9, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 5, 35, -9, 6, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 5, 49, -6, 5, 49, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -9, 5, 50, -6, 5, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 5, 54, -9, 5, 57, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -9, 6, -14, -6, 9, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 6, -4, -6, 9, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 6, 31, -8, 6, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 6, 50, -7, 6, 52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 6, 54, -9, 6, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 7, 31, -9, 7, 37, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -9, 7, 55, -9, 7, 56, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -40, -9, 8, -40, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -39, -9, 19, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -38, -9, 8, -38, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -37, -9, 11, -37, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -36, -9, 8, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -35, -9, 19, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -34, -9, 8, -34, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -33, -9, 11, -33, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -32, -9, 8, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -31, -9, 14, -31, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -30, -7, 8, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -27, -9, 14, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -26, -9, 12, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 8, -25, -8, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -38, -9, 11, -38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -36, -9, 11, -36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -34, -9, 11, -34, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 9, -32, -9, 11, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 11, -13, -9, 11, -11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 12, -30, -9, 12, -28, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 12, -13, -9, 12, -11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -38, -9, 19, -38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -37, -9, 19, -37, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -36, -9, 19, -36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -34, -9, 14, -34, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -33, -9, 14, -33, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -32, -9, 14, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -30, -9, 14, -30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -29, -9, 14, -29, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -9, 13, -28, -9, 14, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 13, -13, -9, 13, -13, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 14, -13, -9, 14, -13, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, -9, 15, -30, -9, 16, -30, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 15, -29, -9, 16, -29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 15, -28, -9, 16, -28, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 15, -27, -9, 15, -26, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 20, -39, -9, 21, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 20, -38, -9, 21, -38, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 20, -37, -9, 21, -37, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 20, -36, -9, 21, -36, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 20, -35, -9, 21, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 22, -39, -9, 23, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 22, -38, -9, 23, -36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 22, -35, -9, 23, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 24, -40, -9, 25, -40, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -9, 24, -34, -9, 25, -34, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -11, 99, 6, -11, 99, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, -10, -72, -4, -10, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, -79, -8, -9, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, -75, 20, -9, -75, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, -9, -72, -7, -9, -71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, -61, -2, -9, -55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, -54, -7, -9, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, -19, -5, -9, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, -10, -8, -5, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, 13, 2, -9, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, 35, -7, -9, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -9, 37, 0, -9, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, -79, -8, -8, -77, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, -43, -7, -8, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, 19, -2, -8, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -8, 31, 20, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, -78, -8, -7, -74, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -7, -72, 43, -7, 91, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, -77, -7, -6, -75, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, -73, -4, -6, -73, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -6, -72, -7, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, -6, 91, -7, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, -5, -76, -7, -5, -76, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -5, -70, -7, -5, -68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, -4, 26, -8, -4, 26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -4, 27, -8, -3, 28, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -4, 61, -7, -4, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -3, -24, -8, 1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -3, 47, -7, -3, 49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, -50, -4, -2, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, -4, -8, 0, -4, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, -3, -6, -2, 4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, 6, -7, -2, 7, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, 8, -8, -2, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, 62, 7, -2, 62, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -2, 63, -7, -2, 63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, -1, -46, -6, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, -3, -6, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 0, -8, 0, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 2, -7, -1, 3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 4, -8, 1, 4, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 5, -3, -1, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 19, -8, -1, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 21, -8, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 22, -8, -1, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 23, -8, 1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, -1, 62, -3, -1, 62, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, 0, -57, -7, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, 0, -54, -8, 0, -52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, 0, -50, -6, 0, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, -47, -8, 2, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, -19, -8, 0, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, -17, -8, 0, -16, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -8, 0, -15, -7, 0, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, -3, -7, 0, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, -1, -8, 1, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 3, -8, 1, 4, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 5, -8, 0, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 6, -8, 2, 6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 7, -8, 0, 7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 8, -8, 2, 8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 9, -7, 0, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 19, -8, 1, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 22, -8, 2, 22, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 24, -7, 0, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 29, -5, 0, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 43, -8, 1, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 0, 45, -7, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -55, -8, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -51, -8, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -19, -8, 1, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -14, -6, 3, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -10, -8, 1, -8, Blocks.SPRUCE_WOOD.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -4, -6, 3, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, -3, -8, 1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 5, -8, 1, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 7, -8, 1, 7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 9, -7, 1, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 29, -6, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 53, -8, 5, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 1, 58, -5, 1, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -8, 2, -19, -8, 2, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, -17, -8, 2, -16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 0, -8, 2, 2, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 3, -7, 2, 3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 4, -8, 2, 5, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 9, -8, 2, 10, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 19, -8, 2, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 21, -8, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 30, -4, 2, 37, Blocks.SMOOTH_STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 38, -4, 3, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 42, -8, 2, 42, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 2, 43, -8, 2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -40, -8, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -38, -8, 3, -38, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -36, -8, 3, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -34, -8, 3, -34, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -32, -8, 3, -32, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -30, -8, 3, -30, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -28, -8, 3, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -26, -8, 3, -26, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, -25, -8, 3, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, 12, -8, 3, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -8, 3, 30, -7, 3, 30, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 3, 39, -7, 3, 40, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -45, -7, 4, -42, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -39, -8, 7, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -37, -8, 7, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -35, -8, 7, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -33, -8, 7, -33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -31, -8, 7, -31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -29, -8, 7, -29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -27, -8, 7, -27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -25, -8, 7, -25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -14, -6, 6, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, -4, -6, 6, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, 8, -8, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -8, 4, 9, -8, 5, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -8, 4, 10, -8, 6, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -8, 4, 11, -8, 6, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -8, 4, 12, -8, 5, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -8, 4, 25, -8, 5, 25, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 4, 38, -7, 5, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 5, -52, -8, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 5, -38, -8, 6, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -8, 5, -36, -8, 6, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -8, 5, -9, -8, 8, -9, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 5, 15, -8, 5, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -8, 5, 58, -5, 5, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -8, 6, -11, -8, 8, -11, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 6, 16, -8, 6, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -8, 6, 30, -4, 6, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 6, 53, -6, 6, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 6, 58, 8, 6, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 7, -38, -8, 7, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 7, -7, -8, 8, -7, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -8, 7, 10, -8, 7, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -8, 7, 38, -4, 7, 38, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -8, 7, 49, -7, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 8, -40, -8, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 8, 30, -8, 8, 36, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -8, 9, -39, -8, 11, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 11, -12, -8, 13, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 12, -35, -6, 12, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 12, -27, -6, 12, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 13, -39, -8, 19, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 13, -35, -6, 13, -35, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -8, 13, -27, -8, 14, -27, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 15, -35, -6, 15, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 15, -27, -8, 16, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 16, -35, -8, 19, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 17, -27, -8, 17, -26, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -8, 20, -39, -8, 21, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 20, -35, -8, 21, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 21, -38, -6, 21, -36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 22, -39, -6, 23, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 22, -35, -8, 23, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -8, 24, -40, -6, 24, -40, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -8, 24, -34, -6, 24, -34, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -7, -11, -80, -7, -10, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -11, -78, -4, -11, -78, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, -11, -77, -5, -11, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -10, -82, -4, -10, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -10, 91, -3, -10, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, -82, -6, -9, -81, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, -79, -6, -9, -78, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, -70, -7, -9, -69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, -68, -7, -6, -68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, -67, -4, -9, -63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, -10, -6, -9, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, -8, -7, -5, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -9, 50, -6, -9, 51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, -78, -6, -8, -77, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, -67, 8, -8, -52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, -46, -5, -8, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -8, 30, 20, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -7, -77, -6, -7, -74, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -5, 86, -7, -5, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, -28, -6, -4, -27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, -26, -6, -4, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, 26, 1, -4, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, 65, -5, -4, 67, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -4, 68, -7, -4, 87, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, -3, -24, -5, -3, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -3, -21, -7, -1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -3, 26, 2, -3, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -3, 65, -5, -3, 67, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, -2, -26, -6, -2, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, -24, -7, 1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, -4, -4, -2, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, 5, -7, -2, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -2, 9, -7, -2, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -60, -5, -1, -58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, -1, -28, -7, -1, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -27, -7, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, -4, -4, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 0, -6, -1, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 12, -7, -1, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 20, -7, -1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 21, -7, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 22, -7, 1, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 23, -6, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, -1, 26, 3, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -54, 9, 0, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -52, -3, 0, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -47, -7, 0, -42, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -41, 4, 0, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -18, -7, 0, -16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, -4, -6, 0, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 1, -7, 2, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 2, -7, 1, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 3, -7, 2, 3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 4, -7, 1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 21, -7, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 23, -6, 1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 26, -1, 0, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 43, -7, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 47, -6, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 0, 52, -7, 0, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 0, 57, -6, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 0, 59, -6, 0, 60, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 1, -55, -5, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -7, 1, -54, -5, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -52, -5, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -51, -5, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -7, 1, -18, -7, 1, -16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, -15, -6, 1, -15, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 1, -3, -6, 1, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 1, -1, -6, 1, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 26, -3, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 43, -7, 1, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 48, -4, 1, 48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 1, 57, -5, 3, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, -50, -5, 2, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 2, -21, -6, 2, -20, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 2, -18, -7, 2, -16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, -1, -7, 2, 0, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, 4, -7, 2, 9, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 2, 11, -7, 2, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 2, 20, -7, 2, 20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, 23, -6, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, 26, -4, 2, 37, Blocks.SMOOTH_STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 2, 39, -5, 2, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 2, 42, -7, 2, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, -48, -5, 3, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, -40, -7, 7, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, -39, -7, 3, -25, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, -24, -7, 7, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, -23, -6, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -7, 3, -13, -6, 3, -13, Index.SHELF_SPRUCE.getDefaultState().with(Shelf.FACING, Direction.SOUTH));
        structure.fillWithBlocks(world, start, -7, 3, 10, -7, 6, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 3, 11, -7, 6, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -7, 3, 12, -7, 4, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 3, 15, -7, 3, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 3, 17, -7, 3, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 3, 18, -7, 3, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -7, 3, 27, -7, 3, 30, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, -54, -5, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, -52, -5, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, -47, -7, 4, -41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, 8, -7, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 4, 9, -7, 6, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -7, 4, 15, -7, 4, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -7, 4, 25, -7, 6, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 4, 57, -5, 5, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 5, -55, -5, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -7, 5, -51, -5, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -7, 5, -39, -7, 6, -39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -7, 5, -13, -6, 5, -13, Index.SHELF_SPRUCE.getDefaultState().with(Shelf.FACING, Direction.SOUTH));
        structure.fillWithBlocks(world, start, -7, 5, 8, -7, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 5, 12, -7, 6, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 5, 13, -7, 5, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -7, 5, 15, -7, 5, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 5, 16, -7, 5, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -7, 6, -54, -5, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 6, 13, -7, 6, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -7, 6, 15, -7, 7, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -7, 6, 16, -7, 6, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 7, -39, -4, 7, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 7, 9, -7, 7, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -7, 7, 12, -6, 7, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -7, 7, 16, -7, 7, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -7, 7, 17, -7, 7, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -7, 7, 58, -6, 7, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 8, -40, -7, 8, -40, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 8, -39, -7, 11, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 8, -38, -5, 8, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 8, -27, -6, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 8, 15, -7, 8, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -7, 8, 37, -5, 8, 37, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -7, 9, -38, -7, 10, -37, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 9, 29, -7, 9, 35, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -7, 11, -37, -7, 12, -37, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 12, -36, -6, 12, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 13, -39, -7, 19, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 13, -27, -7, 14, -27, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -7, 15, -27, -7, 16, -27, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 16, -35, -7, 19, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 18, -28, -7, 18, -26, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -7, 20, -39, -7, 21, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -7, 20, -35, -7, 23, -35, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -10, -76, -2, -10, -76, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -10, -75, -4, -10, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -10, 87, -5, -10, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -10, 96, 43, -10, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -80, -5, -9, -78, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -72, -5, -9, -71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -69, 0, -6, -69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -68, -2, -9, -64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -62, 0, -9, -55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -54, -2, -5, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -53, 5, -9, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -41, -2, -9, -35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -32, -5, -9, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -31, 3, -9, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -8, -4, -9, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -5, -6, -8, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, -3, -2, -9, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, 2, -6, -9, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, 12, -1, -9, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, 36, 1, -9, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, 84, 4, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -9, 96, 2, -9, 96, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -8, -76, -6, -8, -76, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -8, -72, 14, -8, -52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -8, 29, 7, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -6, -72, -5, -6, -71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -6, 91, -5, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -5, -70, -5, -5, -69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -5, -68, 42, -5, 85, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -5, 86, 5, -5, 86, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -5, 87, -3, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -4, -68, -1, -4, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -4, -29, -6, -4, -27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, 3, 4, -4, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, 61, -4, -4, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, 68, -6, -4, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -4, 69, -6, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -3, -55, -1, -3, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -44, -4, -3, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -38, -6, -3, -37, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -36, -6, -3, -20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -19, -6, -2, -15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -13, -3, -3, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -4, -6, -3, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, -2, -5, -3, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, 47, -5, -3, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, 61, -4, -3, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -3, 68, -6, -3, 68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, -2, -38, -6, -2, -37, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, -36, -6, -2, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, -21, -6, 1, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 5, -1, -2, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 13, -2, -2, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 20, -2, -2, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 26, -4, -2, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 36, -6, -2, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -2, 39, -2, -2, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -37, -6, 1, -37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -36, -4, -1, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -33, -6, -1, -26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -25, -6, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -17, -6, 1, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, -16, -1, -1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, 11, -2, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, 20, -6, 0, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, 22, -6, -1, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, -1, 63, -3, -1, 63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, 0, -57, -5, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, 0, -47, -5, 0, -47, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, -46, -4, 0, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, -16, -6, 0, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 1, -6, 1, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 2, -4, 0, 6, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, 0, 7, -5, 0, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, 0, 14, -5, 0, 16, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, 0, 17, -6, 0, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, 0, 22, -6, 1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 24, 0, 0, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 42, -5, 0, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 44, -6, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 51, -5, 0, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 0, 56, 5, 0, 56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -6, 1, 13, -6, 2, 13, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, 20, -6, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, 42, -5, 1, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, 44, -6, 2, 44, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, 47, -6, 1, 48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 1, 51, -6, 5, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, -36, -4, 2, -34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, -33, -6, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, -18, -6, 2, -17, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -6, 2, -1, -6, 2, 1, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -6, 2, 11, -6, 6, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 2, 12, -6, 2, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 2, 14, -6, 2, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 2, 15, -6, 2, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 2, 17, -6, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 2, 18, -6, 3, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 2, 19, -6, 3, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 2, 20, -6, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, 22, -6, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, 25, -6, 6, 25, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 2, 42, -6, 2, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 3, -50, -6, 3, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 3, -40, -6, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 3, -38, 1, 3, -26, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 3, -25, -6, 3, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 3, 12, -5, 3, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 3, 13, -6, 3, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 3, 15, -6, 3, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 4, -46, -5, 4, -46, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, -45, -6, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, -39, -6, 7, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, -25, -6, 7, -25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, 6, -6, 5, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 4, 7, -6, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 4, 10, -6, 6, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 4, 13, -6, 4, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 4, 15, -5, 4, 15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 4, 16, -6, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 4, 38, -6, 5, 38, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 5, -46, -5, 5, -46, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 5, -37, -6, 6, -37, Index.CUT_STONE_BRICKS_PILLAR.getDefaultState().with(Pillar.WATERLOGGED, false).with(Pillar.STATE, PillarState.NONE));
        structure.fillWithBlocks(world, start, -6, 5, 5, -6, 5, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 5, 7, -6, 6, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 5, 8, -6, 6, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 5, 9, -6, 6, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 5, 12, -6, 5, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 5, 13, -6, 5, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 5, 15, -6, 5, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 5, 16, -6, 5, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 6, 12, -6, 6, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 6, 13, -6, 6, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 6, 15, -6, 7, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 6, 16, -6, 6, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -6, 6, 26, -4, 6, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 6, 50, -6, 6, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 7, 11, -6, 7, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 7, 16, -6, 7, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -6, 7, 17, -6, 7, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 8, -40, -6, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 8, 12, -6, 8, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -6, 8, 15, -6, 8, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -6, 8, 17, -6, 8, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -6, 9, -39, -6, 11, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 9, 15, -6, 9, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -6, 10, 28, -6, 10, 35, Blocks.BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -6, 12, -37, -5, 12, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 13, -39, -6, 19, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 13, -27, -6, 14, -27, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 15, -27, -6, 16, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 15, -26, -6, 15, -25, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -6, 16, -35, -6, 19, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 17, -27, -6, 17, -26, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -6, 20, -39, -6, 21, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 20, -35, -6, 21, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -6, 22, -35, -6, 23, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -10, -78, -5, -9, -78, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -10, 89, -5, -10, 89, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, -82, -3, -9, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, -70, -4, -9, -69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, -10, 7, -9, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, 3, -5, -9, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, 35, 2, -9, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, 50, -5, -8, 51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, 77, -2, -9, 81, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, 82, -4, -9, 82, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -9, 83, 6, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -8, -77, -5, -7, -76, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -8, -50, -2, -8, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -8, 28, 7, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -7, -74, -4, -7, -74, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, -29, 1, -1, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, -28, -4, -4, -27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, -25, 3, -4, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, -5, -5, -4, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, -4, -5, -4, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, 2, 4, -4, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, 68, -4, -4, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -4, 70, -5, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, -3, -38, 4, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -37, -4, -3, -36, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -35, -4, -3, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -20, -5, -3, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -17, -1, -3, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, -4, -4, -3, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, 0, -4, -3, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, 1, -4, -2, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, 2, -2, -3, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, 64, -1, -3, 64, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -3, 68, -4, -3, 69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, -2, -37, -4, -2, -36, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, -35, -4, -2, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, -21, -5, -2, -20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, 0, -4, -1, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, 2, -2, -2, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, 31, -5, -2, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, 33, -2, -2, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -2, 64, -4, -2, 64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, -1, -46, 0, 2, -46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -45, -4, -1, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -33, -5, -1, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -32, -5, 1, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -31, -5, -1, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -30, -5, 1, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -28, -3, -1, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -21, -4, -1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, -19, -5, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 1, -4, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 20, -5, -1, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 22, -5, 0, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 42, -5, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 43, -5, 1, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, -1, 44, -2, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -20, -5, 0, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -15, -1, 0, -15, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 0, -14, -2, 0, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -4, -2, 0, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, -3, -4, 0, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 0, -1, -3, 0, -1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, 0, -4, 0, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, 1, -4, 0, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, 13, -5, 0, 16, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 0, 18, -4, 0, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 0, 20, -5, 1, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, 44, -5, 2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, 45, -4, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, 47, -4, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 0, 57, -5, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 0, 59, -4, 0, 60, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 1, -20, -5, 1, -19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 1, -18, -5, 1, -17, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -5, 1, -15, -4, 1, -15, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -14, -3, 1, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -4, -3, 1, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, -1, -5, 1, 1, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -5, 1, 17, -5, 4, 17, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 22, -5, 1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 32, -5, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 49, -5, 7, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 50, -5, 1, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -5, 1, 54, -4, 2, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 1, 55, -1, 5, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -37, -2, 2, -34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -33, -5, 2, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -31, -5, 2, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -29, -2, 2, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -25, -3, 2, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, -14, -4, 3, -14, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));

    }
    
    public static void generatePart27()
    {
        structure.fillWithBlocks(world, start, -5, 2, -4, -4, 3, -4, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -5, 2, 4, -5, 3, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -5, 2, 5, -5, 3, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 2, 6, -5, 2, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 2, 11, -5, 3, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 2, 12, -5, 3, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 2, 13, -5, 3, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 2, 18, -5, 4, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 2, 19, -5, 3, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 2, 20, -5, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, 22, -5, 2, 23, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 2, 25, -4, 3, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -40, -5, 7, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -39, -5, 3, -25, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -24, -5, 4, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, -23, -5, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -5, 3, 6, -5, 6, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 3, 39, -5, 3, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 3, 51, -5, 3, 52, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, -5, 3, 54, -4, 4, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -47, -5, 4, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -45, -5, 4, -45, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -14, -3, 5, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, -4, -3, 5, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, 5, -5, 5, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 4, 7, -5, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 4, 9, -5, 4, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 4, 12, -5, 4, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 4, 13, -5, 4, 13, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, 16, -5, 4, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 4, 25, -4, 5, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 4, 38, -4, 5, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 5, -39, -5, 6, -39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -5, 5, -26, -5, 7, -26, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 5, -24, -5, 7, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 5, 7, -5, 6, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 5, 8, -5, 6, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 5, 9, -5, 6, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 5, 10, -5, 6, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 5, 11, -5, 5, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 5, 13, -5, 5, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 5, 14, -5, 7, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 5, 15, -5, 5, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 5, 50, -5, 5, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -5, 5, 54, -4, 5, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 6, -25, -5, 7, -25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -5, 6, -14, -4, 6, -14, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 6, -13, -4, 6, -6, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 6, -4, -4, 6, -4, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -5, 6, 11, -4, 6, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 6, 12, -4, 6, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 6, 13, -5, 6, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 6, 15, -5, 7, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 6, 25, -4, 6, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 6, 50, -5, 6, 53, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 6, 54, -5, 6, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 7, -14, -5, 9, -12, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 7, -11, -5, 8, -11, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 7, -10, -5, 9, -10, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 7, -8, -5, 9, -8, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 7, -7, -5, 8, -7, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 7, -6, -5, 9, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 7, 7, -5, 7, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 7, 8, -5, 7, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 7, 10, -5, 7, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 7, 12, -5, 7, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 7, 16, -4, 7, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -5, 7, 17, -4, 7, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 7, 18, -4, 7, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 7, 51, -5, 7, 52, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 8, -40, -5, 8, -40, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 8, -39, -5, 15, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 8, -27, -5, 9, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 8, -25, -5, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 8, 12, -5, 8, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 8, 15, -5, 8, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -5, 8, 17, -4, 8, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 8, 18, -4, 8, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -5, 9, -35, -5, 9, -34, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -5, 9, 15, -5, 9, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -5, 9, 17, -4, 9, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -5, 9, 28, -5, 9, 35, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -5, 10, -27, -5, 11, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 10, -13, -5, 10, -5, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -5, 10, 15, -5, 10, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -5, 12, -38, -3, 12, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 12, -35, -5, 15, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 12, -34, 1, 12, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 12, -27, -5, 12, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 13, -26, -5, 15, -26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 15, -38, -5, 15, -36, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 16, -39, -5, 17, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 16, -38, -5, 19, -38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 16, -37, -5, 19, -37, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 16, -36, -5, 19, -36, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 16, -26, -5, 16, -25, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 17, -35, -5, 19, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 17, -34, -5, 17, -31, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -5, 17, -27, -5, 17, -25, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -5, 18, -39, -5, 19, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 20, -39, -5, 21, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 20, -38, -5, 21, -38, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 20, -37, -5, 21, -37, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 20, -36, -5, 21, -36, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 20, -35, -5, 21, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 22, -39, -5, 23, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 22, -38, -5, 23, -36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 22, -35, -5, 23, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 24, -40, -5, 25, -40, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -5, 24, -34, -5, 25, -34, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -11, -77, -2, -11, -77, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -11, -76, -2, -11, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -11, 92, 1, -11, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -10, 87, 4, -10, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, -76, -3, -9, -76, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, -72, -1, -9, -69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, -32, 5, -9, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, -19, 1, -5, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, -12, 11, -9, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, 4, -4, -9, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, 50, -3, -8, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -9, 51, 4, -9, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -8, -46, 3, -5, -46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -8, -45, -3, -8, -44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -8, -42, 18, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -8, 26, -3, -8, 26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -8, 27, 6, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -7, 92, -3, -7, 93, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -6, -72, 17, -6, -72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -6, -71, 41, -6, 89, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -6, 91, 9, -6, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -5, -71, -2, -5, -69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -4, -53, -3, -4, -52, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, -50, -2, -4, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, -43, 9, -4, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, -26, -4, -4, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, -6, -3, -4, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, -3, 5, -4, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, 65, -4, -4, 70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -4, 71, -4, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -3, -60, 0, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, -20, -2, -1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, -19, -3, -3, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, -18, 1, -3, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, 66, -4, -3, 66, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -3, 67, -4, -3, 70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -2, -21, -3, -2, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, -19, -2, 0, -19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, -18, -2, -1, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, -17, -3, -1, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, -16, 0, -2, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, -11, -1, -2, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, 30, -2, -2, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -2, 66, -4, -2, 66, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -1, -60, -2, -1, -58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, -1, -33, -4, 1, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -32, -4, -1, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, -22, -2, -1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, 20, -3, -1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, 22, -4, -1, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, 24, 2, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, 42, -4, 1, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -4, -1, 43, -2, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -57, -3, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, -53, 4, 0, -45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -20, -2, 0, -20, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -18, -2, 0, -18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -17, -3, 0, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, -16, -3, 0, -15, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, 8, -2, 0, 11, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, 12, -4, 0, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, 14, -4, 0, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, 16, -3, 0, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, 20, -4, 1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, 22, -4, 1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, 33, -4, 0, 37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, 38, -1, 0, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, 43, -4, 0, 44, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, 49, 0, 0, 53, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 0, 54, -3, 0, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 0, 58, 5, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -55, -3, 2, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -51, -3, 2, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -27, 1, 1, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -21, -2, 1, -21, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 1, -16, -4, 1, -15, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, -3, -3, 1, -2, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, 14, -4, 2, 15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, 31, -3, 1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, 38, -4, 6, 38, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, 39, -2, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 1, 58, -4, 7, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 2, -50, -2, 2, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 2, -32, -4, 2, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 2, -22, -2, 2, -22, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 2, 3, -4, 3, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -4, 2, 4, -4, 3, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -4, 2, 5, -4, 3, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 2, 6, -4, 2, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 2, 12, -4, 3, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 2, 16, -4, 3, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 2, 18, -4, 4, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 2, 19, -4, 4, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -4, 2, 20, -4, 2, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 2, 22, -4, 2, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 2, 39, -2, 2, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -4, 2, 42, -4, 2, 44, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 3, -55, -3, 4, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -51, -3, 4, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -50, -4, 3, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -40, -4, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -25, -3, 3, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, -23, -2, 3, -23, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 3, 6, -4, 3, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 3, 14, -4, 3, 15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, 35, -4, 3, 36, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 3, 39, -4, 3, 39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 3, 41, -2, 3, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -47, -4, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -39, -4, 4, -34, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, -33, -2, 4, -33, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 4, 5, -4, 5, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 4, 7, -4, 6, 7, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, 10, -4, 4, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 4, 12, -4, 4, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 4, 15, -4, 7, 15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 4, 16, -4, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 4, 35, -4, 4, 36, Blocks.FLOWER_POT.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 5, -55, -3, 6, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 5, -51, -3, 6, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 5, -39, -2, 5, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 5, -36, -3, 5, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 5, -34, -2, 5, -34, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 5, 8, -4, 6, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 5, 9, -4, 5, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 5, 10, -4, 6, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -4, 5, 11, -4, 6, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 5, 12, -4, 6, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 5, 13, -4, 7, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 5, 14, -4, 7, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 5, 16, -4, 7, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 5, 17, -4, 7, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 6, -54, -2, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 6, -39, -2, 6, -36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 6, -35, -2, 6, -35, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 6, -25, -2, 6, -25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 6, -5, -4, 6, -4, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 6, 6, -4, 6, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 6, 9, -4, 6, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 6, 54, 8, 6, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 6, 55, -2, 6, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 7, -55, -3, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 7, -51, -3, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 7, -38, -3, 7, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 7, -36, -2, 7, -36, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 7, -26, -1, 7, -26, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 7, -25, -2, 8, -25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 7, -24, -1, 7, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 7, 6, -4, 7, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 7, 12, -4, 7, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 8, -40, -2, 8, -38, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 8, -37, -2, 8, -37, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 8, -33, 1, 8, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 8, -26, -4, 12, -26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 8, -24, 3, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 8, 6, -4, 8, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -4, 8, 12, -4, 8, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -4, 8, 14, -4, 8, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -4, 8, 27, -4, 8, 36, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 9, -33, -2, 9, -33, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 9, -29, -2, 9, -29, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -4, 9, -25, -2, 9, -25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 9, -14, -4, 9, -4, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 9, 6, -4, 9, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -4, 9, 13, -4, 9, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -4, 9, 14, -4, 9, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -4, 10, -27, -4, 11, -27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -4, 10, 14, -4, 10, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -4, 12, -39, -2, 12, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 12, -35, 2, 12, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 12, -27, -2, 12, -27, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 13, -39, -4, 14, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 13, -26, -2, 13, -26, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -4, 16, -39, -4, 17, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 16, -26, -4, 17, -26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 18, -40, -4, 18, -25, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -4, 24, -39, -4, 25, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -4, 24, -38, -4, 24, -36, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -4, 24, -35, -4, 25, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, -79, -2, -10, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, -73, 8, -8, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, 90, 0, -11, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -11, 91, 3, -11, 98, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -10, -82, -2, -10, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -10, -75, 0, -10, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -10, 98, 7, -10, 98, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, -9, -63, 3, -9, -57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -9, -33, 6, -9, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -9, -18, 13, -9, -1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -9, 4, 50, -9, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -9, 5, -2, -9, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -9, 34, 3, -9, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -9, 82, 8, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -8, -43, 20, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -4, -60, -1, -4, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -4, -28, -3, -3, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -4, 37, -3, -4, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -4, 66, -2, -4, 70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -4, 72, -1, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, -3, -43, 3, -3, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, -36, -3, -2, -35, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, -34, 2, -3, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, -26, 2, -3, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, -4, -3, -2, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, -2, -3, -3, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, -1, -3, -2, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, 1, -3, -3, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, 61, -2, -3, 67, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -3, 68, -3, -3, 71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, -2, -50, -2, -2, -49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, -48, -2, -2, -47, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, -46, -2, -2, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, -43, 3, -2, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, -34, 8, -2, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, 1, -3, 0, 1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, 26, -3, -2, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, 28, 0, -2, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, 64, -2, -2, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -2, 66, -2, -2, 67, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, -1, -45, -3, -1, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -43, 2, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -37, -1, -1, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -32, -2, 0, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -31, -3, -1, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -30, -3, 1, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, -1, -3, -1, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, 2, -2, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, -1, 64, -3, -1, 65, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 0, -43, 4, 0, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, -23, -1, 0, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, -3, -2, 0, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 0, 0, -3, 0, 0, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 2, -2, 0, 4, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 0, 5, -2, 0, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 7, -3, 0, 11, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 0, 12, -3, 0, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 13, -3, 0, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 0, 20, -3, 1, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 22, -1, 0, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 43, -3, 0, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 44, -3, 0, 44, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 0, 45, -3, 0, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 47, 0, 0, 53, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 0, 57, -2, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 0, 59, -2, 0, 60, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 1, -16, -3, 1, -15, Blocks.AZURE_BLUET.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 5, -3, 1, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 12, -3, 6, 12, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 22, -2, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 42, -3, 1, 44, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -3, 1, 50, -2, 1, 52, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 54, -1, 1, 54, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -3, 1, 57, -1, 3, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 1, 58, -1, 1, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -3, 2, -33, 0, 2, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, -32, -2, 2, -32, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, -31, -3, 2, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, -14, -3, 5, -14, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, -4, -3, 5, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 3, -3, 3, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 2, 4, -3, 3, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 2, 5, -3, 3, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 2, 6, -3, 6, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 7, -3, 3, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 2, 13, -3, 2, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 2, 16, -3, 3, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 2, 18, -3, 4, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 2, 20, -3, 2, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 22, -3, 2, 23, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 25, -3, 6, 25, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 26, -3, 3, 27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 28, -3, 6, 28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 29, -3, 3, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 33, -3, 6, 33, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 34, -3, 3, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 2, 38, -3, 6, 38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 3, -47, 3, 3, -41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -3, 3, -40, -3, 7, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 3, -39, -3, 3, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 3, 8, -3, 3, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 3, 10, -3, 3, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 3, 13, -3, 4, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 3, 39, -3, 3, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, -46, -3, 4, -43, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, -38, -2, 4, -34, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 4, -3, 5, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 4, 5, -3, 4, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 8, -3, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 4, 9, -3, 4, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 4, 11, -3, 6, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 4, 15, -3, 5, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 4, 16, -3, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 4, 26, -3, 5, 27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 29, -3, 6, 29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 30, -3, 5, 31, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 32, -3, 6, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 34, -3, 6, 34, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 35, -3, 5, 36, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 37, -3, 6, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 4, 57, -1, 5, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 5, 7, -3, 6, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 5, 8, -3, 5, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 5, 13, -3, 6, 13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 5, 14, -3, 6, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 5, 16, -3, 7, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 5, 17, -3, 7, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 5, 18, -3, 6, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -3, 5, 54, -1, 5, 54, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -3, 5, 58, -1, 5, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -3, 6, -15, -3, 6, -11, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -3, 6, -10, -3, 6, -8, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 6, -7, -3, 6, -3, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -3, 6, 3, -3, 6, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 6, 4, -3, 6, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 6, 5, -3, 6, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -3, 6, 8, -3, 6, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 6, 26, -3, 6, 27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 6, 30, -3, 6, 32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 6, 35, -3, 6, 37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 7, 3, -3, 7, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -3, 7, 4, -3, 7, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 7, 5, -3, 7, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 7, 11, -3, 7, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -3, 7, 26, -3, 7, 37, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -3, 8, -27, -3, 8, -26, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 8, 4, -3, 8, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -3, 8, 5, -3, 8, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 8, 13, -3, 8, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -3, 9, -27, -3, 10, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 9, 5, -3, 9, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -3, 9, 14, -3, 9, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -3, 11, -27, -3, 11, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 13, -39, -3, 14, -39, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -3, 13, -31, -3, 13, -29, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -3, 16, -39, -3, 17, -39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 17, -26, -2, 17, -26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -3, 19, -40, -3, 19, -25, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -2, -9, -82, 0, -9, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -9, -34, 8, -9, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -9, 33, 2, -9, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -9, 50, 4, -9, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -8, -81, -1, -8, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -8, -45, 23, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -8, 26, 6, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -7, 92, -1, -7, 93, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, -5, 87, 0, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, -4, -53, -1, -4, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, -44, 11, -4, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, -28, -1, -4, -27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, -26, 3, -4, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, -6, 5, -4, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, 37, -2, -4, 37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, 38, -2, -4, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -4, 71, -2, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, -3, -44, 10, -3, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -28, -1, -3, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -19, 4, -3, -13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -12, -2, -3, -12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -11, -2, 0, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -10, -2, -3, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -9, -2, -1, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -3, -1, -3, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, -1, -2, -3, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, 1, -2, -3, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, 68, 0, -3, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -3, 69, -1, -3, 70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, -2, -44, 10, -2, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -2, -21, -2, -2, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -2, -17, -1, -2, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -2, -1, -2, -2, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -2, 1, -1, -2, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -2, 25, 3, -2, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -2, 68, 0, -2, 68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, -1, -45, 4, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, -31, 1, -1, -26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, -25, -2, 1, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, -24, -1, -1, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, -17, -1, -1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, -1, -2, -1, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, 1, -1, -1, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, -1, 61, 2, -1, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, -57, -1, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 0, -44, 4, 0, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, -17, -1, 0, -17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, -16, -1, 0, -15, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 0, -13, -2, 0, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, -8, -2, 0, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, -1, -2, 0, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, 1, -2, 0, 1, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, 12, 0, 0, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 0, 14, -2, 0, 15, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 0, 17, 0, 0, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 0, 20, -1, 0, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, 42, -2, 0, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, 45, 1, 0, 48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 0, 54, -1, 0, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 0, 61, 1, 0, 65, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 1, -55, 0, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -2, 1, -54, 0, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -52, 0, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -51, 0, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -2, 1, -16, -1, 1, -15, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -14, -2, 4, -14, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -13, -2, 1, -11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -10, -2, 3, -10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -8, -2, 3, -8, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -7, -2, 1, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -4, -2, 4, -4, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, -3, -2, 1, -3, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, 6, -2, 1, 7, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -2, 1, 20, -2, 1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 1, 42, -2, 1, 44, Blocks.COBBLESTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -2, 1, 48, -1, 1, 49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -31, 1, 2, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -24, -1, 2, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -13, -2, 4, -13, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -12, -2, 3, -12, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -11, -2, 4, -11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -7, -2, 4, -7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -6, -2, 3, -6, Blocks.GLASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, -5, -2, 4, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 2, 3, -2, 3, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -2, 2, 4, -2, 3, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -2, 2, 5, -2, 3, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 2, 6, -2, 6, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, 2, 7, -2, 3, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 2, 20, -2, 2, 23, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -2, 2, 25, -1, 2, 31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 2, 32, -2, 2, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -2, 3, -40, -2, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, -25, -2, 3, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, 9, -2, 5, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, 3, 10, -2, 5, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 3, 24, -2, 3, 25, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, 27, -2, 3, 29, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, 31, -2, 3, 32, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, 40, -2, 3, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 3, 46, -2, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, -2, 3, 47, -2, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -2, 4, -54, 0, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, -52, 0, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, -47, -1, 4, -46, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, -44, -2, 4, -42, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, -39, -2, 6, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, -12, -2, 4, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 4, 5, -2, 5, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, 4, 7, -2, 4, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, 4, 8, -2, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 4, 11, -2, 4, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 4, 12, -2, 6, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, 4, 13, -2, 4, 15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 4, 16, -2, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -2, 4, 31, -2, 4, 32, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 5, -55, 0, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -2, 5, -51, 0, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, -2, 5, -15, -2, 5, -3, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -2, 5, 7, -2, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 5, 11, -2, 5, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 5, 17, -2, 6, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -2, 5, 32, -2, 5, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 5, 33, -2, 5, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -2, 6, 3, -2, 6, 3, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -2, 6, 4, -2, 6, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -2, 6, 5, -2, 6, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 6, 7, -2, 6, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 6, 9, -2, 6, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -2, 6, 25, -2, 6, 38, Blocks.BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -2, 7, -39, -2, 7, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 7, 4, -2, 7, 4, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -2, 7, 5, -2, 7, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -2, 8, -27, -2, 8, -27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 8, -26, -2, 12, -26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 8, 5, -2, 8, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -2, 10, -27, -2, 11, -27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -2, 12, -38, 2, 12, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 13, -39, -2, 14, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 13, -32, -2, 13, -32, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -2, 16, -39, -2, 17, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 16, -26, -2, 17, -26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -2, 18, -40, -2, 18, -25, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -1, -11, -76, 5, -11, -76, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, -11, -75, 1, -11, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -10, -79, 0, -10, -78, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, -79, -1, -9, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, -68, 0, -9, -66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, -64, 5, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, -54, 11, -9, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, -41, 0, -9, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, -38, -1, -9, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, -36, 10, -9, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, 5, -1, -9, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, 6, -1, -9, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, 49, 4, -9, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, 77, 1, -9, 79, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, 80, 0, -9, 80, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -9, 81, 8, -9, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -8, -82, 1, -8, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -8, -50, 2, -8, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -8, 20, -1, -8, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -8, 25, 6, -8, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -7, -82, 0, -7, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -5, -71, 0, -5, -69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, -4, -49, -1, -4, -48, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, -47, 11, -4, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 14, -1, -4, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 15, -1, -4, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 37, 0, -4, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 39, 7, -4, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 48, 0, -4, 49, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 50, 8, -4, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -4, 67, -1, -4, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, -20, 4, -3, -20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, -11, -1, -3, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, -1, -1, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 0, 0, -3, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 1, 0, -3, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 4, 0, -3, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 6, 0, -3, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 8, -1, -3, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 16, 0, -2, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 17, 1, -3, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 20, 0, -3, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 22, -1, -3, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 42, 0, -2, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 43, 0, -3, 43, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 44, 0, -2, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 45, 6, -3, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 61, -1, -1, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 62, -1, -3, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 63, -1, -1, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 66, 0, -3, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -3, 71, -1, -3, 71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, -2, -50, 2, -2, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, -45, 10, -2, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, -21, 6, -2, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, -20, -1, -1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, -18, -1, 0, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 0, 0, -1, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 3, -1, 0, 3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 4, 0, -2, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 13, -1, 0, 15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 17, 1, -2, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 20, -1, 0, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 33, -1, -2, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 35, 5, -2, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 43, 0, -1, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 45, 7, -2, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 54, 6, -2, 66, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -2, 67, -1, -2, 68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, -1, -60, -1, -1, -58, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, -1, -32, 1, -1, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, -21, 0, -1, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 4, 0, -1, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 6, -1, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 16, 0, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 42, 0, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 45, 7, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 54, 6, -1, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, -1, 66, -1, -1, 66, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 0, -20, 8, 0, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, -19, -1, 0, -19, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, -14, -1, 0, -2, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 0, 0, 0, 0, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 1, 0, 0, 2, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 4, 0, 0, 5, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 7, -1, 0, 8, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 0, 10, -1, 0, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 0, 16, 0, 0, 16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 42, 0, 0, 42, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 43, 0, 0, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 57, -1, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 0, 59, 2, 0, 62, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 1, -21, 7, 1, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, -20, 8, 1, -20, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 1, -3, -1, 1, -2, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 6, -1, 4, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 9, -1, 5, 9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 20, -1, 1, 23, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -1, 1, 26, -1, 1, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 32, -1, 1, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 1, 46, -1, 1, 49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 50, 0, 1, 50, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 1, 51, 1, 1, 53, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 2, -50, 1, 2, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 2, -37, -1, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 2, -21, 7, 2, -21, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 2, 5, -1, 4, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -1, 2, 7, -1, 3, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -1, 2, 33, -1, 2, 36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, -49, 0, 3, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, -40, -1, 7, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, -39, -1, 3, -25, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, -24, 0, 3, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, -23, 0, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, -1, 3, 10, -1, 5, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -1, 3, 11, -1, 5, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 3, 26, -1, 3, 27, Blocks.POPPY.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, 29, -1, 3, 31, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 3, 46, -1, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, -1, 3, 47, -1, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -1, 3, 48, -1, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -1, 3, 49, -1, 4, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 3, 50, -1, 4, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -1, 4, -45, -1, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 4, -26, -1, 4, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 4, -15, -1, 4, -3, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -1, 4, 7, -1, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -1, 4, 12, -1, 5, 12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 4, 13, -1, 4, 14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -1, 4, 16, -1, 5, 16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, -1, 5, -39, -1, 6, -39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, -1, 5, -26, -1, 7, -26, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 5, -24, -1, 7, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 5, 5, -1, 5, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 5, 7, -1, 5, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 5, 8, -1, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -1, 5, 30, -1, 6, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -1, 5, 31, -1, 6, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 5, 32, -1, 7, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, -1, 5, 33, -1, 6, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 5, 34, -1, 6, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, -1, 6, -54, 1, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 6, -25, -1, 7, -25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, -1, 6, 8, -1, 6, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 6, 55, 1, 6, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, -40, -1, 8, -40, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, -39, -1, 11, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, -38, 2, 8, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, -27, -1, 9, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, -25, 0, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 8, 32, -1, 8, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, -1, 9, -35, -1, 9, -34, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, -1, 10, -27, -1, 11, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 12, -27, -1, 12, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 13, -39, -1, 15, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 13, -31, -1, 13, -29, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, -1, 13, -26, -1, 15, -26, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 16, -26, -1, 16, -25, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, -1, 17, -40, -1, 17, -39, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -1, 17, -35, -1, 17, -31, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -1, 17, -27, -1, 17, -25, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, -1, 18, -37, 4, 18, -37, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, -1, 18, -29, 4, 18, -29, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 0, -9, -79, 0, -9, -78, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, -72, 2, -9, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, -65, 7, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, -38, 12, -9, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, 5, 1, -9, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, 7, 1, -9, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, 32, 0, -9, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, 46, 4, -9, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -9, 95, 42, -9, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -8, 20, 0, -8, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -8, 21, 0, -8, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -8, 95, 5, -8, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -7, 92, 43, -7, 92, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -6, 92, 19, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -4, -68, 4, -4, -64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -4, -63, 3, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -58, 1, -4, -58, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -57, 4, -4, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -52, 1, -4, -50, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -49, 0, -3, -49, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -28, 1, -4, -27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -14, 2, -4, -12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -10, 1, -4, -9, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, -8, 5, -4, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, 14, 1, -4, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, 16, 0, -4, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, 67, 0, -4, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, 68, 0, -4, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -4, 73, 4, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -3, -63, 2, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -3, -55, 2, -3, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -52, 1, -3, -50, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -48, 9, -3, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -28, 1, -3, -27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -12, 0, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -11, 0, 0, -11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -10, 0, -3, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -9, 0, -3, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -5, 0, -3, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -4, 0, -3, -3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -2, 0, -1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, -1, 0, -3, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 3, 0, -3, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 8, 0, -3, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 10, 0, -3, 13, Blocks.STONE.getDefaultState());

    }
    
    public static void generatePart28()
    {
        structure.fillWithBlocks(world, start, 0, -3, 14, 0, -3, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 22, 0, -2, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 24, 2, -3, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 61, 4, -3, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 69, 5, -3, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -3, 70, 0, -3, 72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -2, -60, 1, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -2, -58, 7, -2, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -46, 10, -2, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -20, 0, -2, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -19, 0, 0, -19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -18, 0, -1, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -17, 0, 0, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -10, 0, 0, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -5, 0, -2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -4, 0, -2, -3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, -1, 0, -1, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 1, 1, -2, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 3, 0, -2, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 6, 1, -2, 7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 8, 0, -2, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 10, 0, -1, 11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 12, 1, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 13, 0, -2, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 14, 0, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 20, 0, -1, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 24, 2, -2, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 33, 7, -2, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 67, 0, -2, 67, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -2, 69, 1, -2, 69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, -1, -37, 0, 1, -37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -36, 2, -1, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -33, 0, -1, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -16, 0, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -5, 0, -1, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, -4, 0, -1, -3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 1, 1, -1, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 3, 0, -1, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 6, 1, -1, 7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 8, 0, -1, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 13, 0, -1, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 22, 0, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 44, 0, -1, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, -1, 66, 0, -1, 67, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, 0, -57, 1, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, 0, -23, 2, 0, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, -18, 0, 0, -18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, -16, 0, 0, -12, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, -5, 0, 0, -5, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, -4, 0, 0, -3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, -1, 0, 0, 0, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 3, 0, 0, 5, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 6, 1, 0, 7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 8, 0, 0, 9, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 10, 0, 0, 11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 13, 0, 0, 13, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 14, 0, 0, 16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 20, 0, 0, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 22, 0, 0, 23, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 33, 2, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, 0, 54, 0, 0, 54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 0, 55, 0, 0, 57, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, 1, 24, 0, 1, 31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 0, 1, 33, 0, 1, 36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, 46, 0, 1, 46, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, 48, 0, 1, 49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, 54, 0, 7, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 1, 58, 0, 7, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -47, 9, 2, -38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -36, 2, 2, -34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -32, 2, 2, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, -25, 3, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, 24, 0, 2, 28, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 2, 32, 0, 7, 32, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 3, -40, 0, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 3, -25, 0, 3, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 3, 10, 0, 5, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 3, 11, 0, 4, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 0, 3, 18, 0, 4, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 0, 3, 19, 0, 4, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 3, 20, 0, 4, 20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 0, 3, 27, 0, 4, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 0, 3, 28, 0, 4, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 3, 29, 0, 4, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 0, 3, 39, 0, 4, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, 0, 3, 41, 0, 4, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, 0, 3, 44, 0, 4, 44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, 0, 3, 46, 0, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 0, 3, 47, 0, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 0, 3, 48, 0, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 3, 49, 0, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 0, 3, 50, 0, 5, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 3, 51, 0, 4, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 0, 4, -47, 0, 4, -45, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 4, -39, 0, 7, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 4, -25, 0, 7, -25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 4, 7, 0, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 4, 9, 0, 5, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 0, 5, -37, 0, 6, -37, Index.CUT_STONE_BRICKS_PILLAR.getDefaultState().with(Pillar.WATERLOGGED, false).with(Pillar.STATE, PillarState.NONE));
        structure.fillWithBlocks(world, start, 0, 5, 30, 0, 6, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 5, 31, 0, 7, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 0, 5, 33, 0, 7, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 0, 5, 34, 0, 6, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 5, 55, 0, 6, 55, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 6, 49, 0, 6, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 8, -40, 0, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 8, 31, 0, 8, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 0, 9, -39, 0, 11, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 12, -27, 2, 12, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 13, -39, 0, 14, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 13, -27, 0, 14, -27, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 15, -39, 0, 16, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 15, -27, 0, 16, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 0, 15, -26, 0, 15, -25, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 0, 17, -40, 0, 17, -39, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 0, 17, -36, 4, 17, -36, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 0, 17, -33, 4, 17, -33, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 0, 17, -30, 4, 17, -30, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 0, 17, -27, 0, 17, -26, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 1, -11, 90, 2, -11, 98, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -11, 100, 3, -11, 100, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -10, -82, 2, -10, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -10, -79, 1, -10, -78, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -10, -75, 4, -10, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -82, 2, -9, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -79, 1, -8, -79, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -69, 2, -9, -68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -66, 9, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -56, 1, -5, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -55, 14, -9, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -41, 2, -9, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -39, 13, -9, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, -20, 1, -8, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, 32, 35, -9, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, 45, 4, -9, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -9, 80, 8, -9, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -8, 20, 2, -8, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -8, 23, 6, -8, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -7, 94, 18, -7, 94, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -6, 90, 2, -6, 92, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -5, -71, 2, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -5, -69, 40, -5, 85, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -5, 87, 3, -5, 89, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -4, -69, 6, -4, -64, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -4, -49, 11, -4, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, -11, 1, -4, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, 16, 1, -4, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, 17, 1, -4, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, 24, 2, -4, 25, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, 37, 1, -4, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, 48, 8, -4, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, 69, 1, -4, 70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -4, 71, 1, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -3, -60, 5, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -49, 9, -3, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -12, 1, -3, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -9, 1, -2, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -7, 1, -3, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -5, 1, -2, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, -3, 1, -3, -1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 0, 1, -1, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 3, 1, -3, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 4, 1, -1, 4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 5, 1, -3, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 9, 1, -1, 9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 10, 1, -3, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 11, 1, -2, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 13, 1, -3, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 15, 4, -3, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 16, 2, -3, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 20, 1, -2, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 22, 1, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 43, 1, -3, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 44, 1, -3, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -3, 70, 1, -3, 70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, -2, -20, 2, -2, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -18, 2, -1, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -17, 1, -2, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -16, 1, 0, -16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -15, 1, -2, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -13, 1, 0, -10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -7, 1, -2, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, -3, 1, -2, -1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 3, 1, 0, 3, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 5, 1, 0, 8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 10, 1, -2, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 13, 1, -2, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 22, 1, -1, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 32, 7, -2, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 42, 1, 0, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 43, 1, -2, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 44, 1, 0, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -2, 67, 2, -2, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -57, 10, -1, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -47, 2, 0, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -46, 5, -1, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -37, 3, -1, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -33, 1, 0, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -21, 3, -1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -17, 1, -1, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -15, 1, -1, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -9, 1, -1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -7, 1, -1, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -5, 1, -1, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, -3, 1, -1, -1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, 10, 1, -1, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, 11, 1, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, 13, 1, -1, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, 17, 1, -1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, 43, 1, -1, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, -1, 66, 3, -1, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -19, 2, 0, -19, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -18, 2, 0, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -17, 1, 0, -17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -15, 1, 0, -14, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -9, 1, 0, -8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -7, 1, 0, -6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -5, 1, 0, -4, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, -3, 1, 0, -1, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 0, 1, 0, 2, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 4, 1, 0, 4, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 10, 1, 0, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 11, 1, 0, 12, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 13, 1, 0, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 17, 1, 0, 19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, 0, 20, 1, 0, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 22, 1, 0, 23, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 24, 2, 0, 27, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, 0, 28, 1, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, 0, 43, 1, 0, 43, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 50, 4, 0, 53, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, 0, 54, 2, 0, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 57, 2, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 0, 67, 2, 0, 68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, 1, -55, 1, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -51, 1, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, -32, 10, 1, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 24, 1, 1, 24, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 26, 2, 1, 27, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 28, 1, 1, 28, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 31, 2, 1, 33, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 35, 2, 1, 36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 39, 1, 1, 39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 45, 2, 1, 47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 49, 1, 5, 49, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 50, 2, 1, 52, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 54, 3, 1, 54, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 1, 1, 55, 3, 3, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 57, 3, 3, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 1, 58, 3, 1, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 1, 2, -37, 4, 2, -34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 2, -20, 8, 2, -20, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 2, 41, 1, 2, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, 1, 2, 46, 1, 2, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 1, 2, 66, 1, 8, 66, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 1, 3, -48, 3, 3, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, -40, 1, 7, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, -39, 1, 3, -25, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, -24, 1, 7, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 3, -23, 2, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 1, 3, 17, 1, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 3, 18, 1, 4, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 3, 19, 1, 5, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 1, 3, 20, 1, 4, 20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 3, 21, 1, 4, 21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 3, 26, 1, 4, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 3, 27, 1, 5, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 3, 28, 1, 5, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 1, 3, 29, 1, 5, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 3, 30, 1, 6, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 3, 39, 1, 4, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 1, 3, 41, 1, 4, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 1, 3, 42, 1, 3, 43, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, 1, 3, 44, 1, 4, 44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 1, 3, 45, 1, 4, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 1, 3, 46, 1, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 3, 47, 1, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 3, 48, 1, 5, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 1, 3, 50, 1, 5, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 1, 3, 51, 1, 4, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 4, -46, 3, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, -43, 2, 4, -43, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, -39, 1, 4, -39, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, -5, 1, 4, -5, Blocks.LANTERN.getDefaultState().with(LanternBlock.WATERLOGGED, false).with(LanternBlock.HANGING, true));
        structure.fillWithBlocks(world, start, 1, 4, 34, 1, 6, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 4, 35, 1, 5, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 4, 36, 1, 5, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 4, 55, 3, 5, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 4, 57, 3, 5, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 5, -52, 1, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 5, -39, 1, 6, -39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 1, 5, 31, 1, 7, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 5, 32, 1, 7, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 1, 5, 33, 1, 7, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 5, 54, 3, 5, 54, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 1, 5, 58, 3, 5, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 1, 6, 19, 1, 6, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 6, 28, 1, 6, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 6, 48, 1, 6, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 1, 7, -39, 1, 7, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 7, -15, 1, 7, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 1, 7, -14, 1, 7, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 1, 8, -40, 1, 8, -40, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 8, -39, 1, 11, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 8, -27, 2, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 8, -15, 1, 8, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 1, 8, -14, 1, 8, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 1, 10, 66, 1, 14, 66, Blocks.COBBLESTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 1, 13, -39, 1, 14, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 13, -27, 1, 14, -27, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 1, 15, -39, 1, 16, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 15, -27, 1, 16, -27, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 1, 15, 66, 1, 18, 66, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 1, 16, -35, 4, 16, -35, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 1, 16, -34, 4, 16, -34, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 1, 16, -32, 4, 16, -32, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 1, 16, -31, 4, 16, -31, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 1, 18, -40, 1, 18, -37, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 1, 18, -28, 1, 18, -26, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 2, -11, -80, 2, -9, -80, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -11, -75, 4, -11, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -10, 97, 40, -10, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, -67, 9, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, -56, 13, -9, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, -20, 2, -5, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, -19, 19, -9, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, 5, 4, -9, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, 8, 3, -9, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, 43, 6, -9, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, 78, 8, -9, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -9, 97, 10, -9, 97, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, -8, 22, 6, -8, 94, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -58, 11, -4, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -29, 2, -4, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -28, 2, -3, -27, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, -11, 3, -4, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 14, 4, -4, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 18, 7, -4, 23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 26, 3, -4, 26, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 27, 7, -4, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 38, 3, -4, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 69, 25, -4, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 70, 3, -4, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -4, 72, 3, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, -3, -52, 9, -3, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, -12, 5, -3, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, -7, 4, -3, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, -3, 2, -3, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, -2, 2, -3, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 2, 3, -3, 3, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 4, 2, -3, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 5, 2, -2, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 7, 2, -3, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 8, 2, -1, 8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 9, 2, -3, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 13, 2, -1, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 14, 3, -3, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 20, 2, -3, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 22, 2, -2, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 42, 2, -3, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 56, 5, -3, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -3, 70, 2, -3, 71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, -2, -60, 3, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, -2, -17, 2, -2, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -15, 2, 0, -15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -14, 4, -2, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -11, 2, 0, -11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -10, 2, -2, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -9, 2, -1, -8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -7, 2, -2, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -6, 2, 0, -4, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -3, 2, -2, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -2, 2, 0, -2, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, -1, 5, -2, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 7, 2, 0, 7, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 9, 2, 0, 12, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 14, 2, -2, 14, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 15, 2, -1, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 16, 2, -2, 17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 18, 2, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 20, 2, -1, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -2, 42, 2, -2, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -33, 2, -1, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -29, 2, -1, -29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -28, 2, -1, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -17, 2, -1, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -14, 4, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -10, 2, -1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -7, 2, -1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -3, 2, -1, -3, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, -1, 5, -1, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, 14, 2, -1, 14, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, 16, 2, -1, 17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, 22, 2, -1, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, -1, 69, 5, -1, 69, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, 0, -57, 3, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, 0, -17, 2, 0, -16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, -14, 2, 0, -12, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, -9, 2, 0, -8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, -1, 4, 0, 4, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, 0, 5, 2, 0, 6, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 8, 2, 0, 8, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 14, 2, 0, 14, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 15, 2, 0, 15, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 16, 2, 0, 17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 20, 2, 0, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 22, 2, 0, 23, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 29, 3, 0, 34, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, 0, 42, 2, 0, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 45, 5, 0, 53, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, 0, 63, 3, 0, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 66, 4, 0, 68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, 1, -55, 4, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 2, 1, -54, 4, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -52, 4, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -51, 4, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 2, 1, -33, 11, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, -5, 2, 4, -5, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 2, 1, 2, 2, 4, 2, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 2, 1, 19, 2, 5, 19, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 24, 2, 1, 27, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 28, 2, 5, 28, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 29, 2, 1, 37, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 40, 3, 1, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 63, 3, 1, 65, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 2, -50, 4, 2, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 2, 2, -33, 2, 2, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 2, -29, 2, 2, -29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 2, -28, 2, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 2, 40, 2, 2, 40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 2, 2, 41, 2, 2, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 2, 2, 63, 2, 2, 64, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 2, 3, -40, 2, 3, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -38, 2, 4, -38, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -37, 3, 3, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -36, 2, 4, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -35, 3, 3, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -33, 3, 3, -33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -31, 3, 3, -31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -29, 3, 3, -29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -27, 3, 3, -27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, -25, 2, 3, -24, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 3, 7, 2, 4, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 3, 8, 2, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 2, 3, 17, 2, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 3, 18, 2, 5, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 2, 3, 20, 2, 5, 20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 2, 3, 21, 2, 4, 21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 3, 26, 2, 4, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 3, 27, 2, 5, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 2, 3, 29, 2, 5, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 2, 3, 30, 2, 4, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 3, 39, 2, 4, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 2, 3, 40, 2, 4, 40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 3, 41, 2, 4, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 2, 3, 47, 2, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 3, 48, 2, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 3, 49, 2, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 2, 3, 50, 2, 5, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 3, 51, 2, 4, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 4, -54, 4, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -52, 4, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -39, 2, 7, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -37, 2, 6, -37, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -35, 2, 7, -35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -33, 2, 7, -33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -31, 2, 7, -31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -29, 2, 7, -29, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -27, 2, 7, -27, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, -25, 2, 7, -25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 4, 6, 2, 4, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 4, 33, 2, 6, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 4, 34, 2, 6, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 4, 35, 2, 6, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 2, 4, 36, 2, 5, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 4, 37, 2, 5, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 5, -55, 4, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 2, 5, -51, 4, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 2, 5, -38, 2, 6, -38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 2, 5, -36, 2, 6, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 2, 5, 31, 2, 6, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 5, 32, 2, 6, 32, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 6, -54, 4, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 6, -15, 2, 6, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 2, 6, -14, 2, 6, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 6, -13, 2, 6, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 6, 18, 2, 6, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 6, 27, 2, 6, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 6, 30, 2, 6, 31, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 6, 55, 4, 6, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 7, -38, 2, 7, -36, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 7, -17, 2, 8, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 2, 7, -15, 2, 7, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 7, -14, 2, 7, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 7, 35, 2, 7, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 2, 8, -40, 2, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 8, -15, 2, 8, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 2, 8, -14, 2, 8, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 2, 9, -39, 2, 11, -39, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 9, -15, 2, 9, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 2, 11, 63, 3, 11, 63, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 13, -39, 2, 14, -39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 13, -27, 2, 14, -27, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 15, -39, 2, 16, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 15, -27, 2, 16, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 17, -40, 2, 17, -39, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 2, 17, -27, 2, 17, -26, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 3, -11, 90, 49, -11, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, -72, 5, -9, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, -68, 8, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, -41, 4, -9, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, -40, 12, -9, -26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, -20, 21, -9, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, 13, 3, -9, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, 33, 3, -9, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, 42, 7, -9, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, 77, 9, -9, 84, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -9, 96, 39, -9, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, -50, 3, -7, -49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, -48, 4, -8, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, -12, 3, -7, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, -10, 6, -8, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, -6, 3, -5, 86, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -8, 96, 21, -8, 96, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, -6, 90, 43, -6, 90, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -5, -71, 4, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, -5, 90, 25, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, -4, -29, 5, -4, -26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -4, -14, 5, -4, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -4, 24, 3, -4, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -4, 25, 3, -4, 26, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, -63, 3, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, -3, -55, 10, -3, -48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, -28, 9, -3, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, -21, 4, -3, -20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, -8, 9, -3, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, -1, 3, -3, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 4, 5, -3, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 7, 4, -3, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 9, 3, -1, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 12, 3, -3, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 16, 4, -3, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 17, 4, -3, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 18, 6, -1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 19, 4, -3, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 20, 4, -3, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 22, 3, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 25, 3, -3, 27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 28, 3, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 43, 3, -2, 44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 70, 5, -3, 70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -3, 71, 3, -3, 71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, -2, -50, 8, -2, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, -20, 4, -2, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, -17, 4, -1, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, -16, 4, -2, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 12, 3, 0, 15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 16, 3, -1, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 17, 4, -1, 17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 19, 4, -1, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 20, 4, -2, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 22, 3, 0, 24, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 42, 6, 0, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -2, 67, 5, -2, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -47, 4, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -33, 3, 1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -30, 3, -1, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -29, 3, 0, -28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -27, 7, -1, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -22, 4, 0, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -18, 4, -1, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, -16, 4, -1, 11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, 20, 4, -1, 21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, 25, 3, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, -1, 43, 3, -1, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -23, 4, 0, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -21, 4, 0, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -19, 16, 0, -19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 0, -18, 4, 0, -18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -17, 4, 0, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -16, 4, 0, -16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, -15, 5, 0, -11, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 0, -10, 3, 0, 8, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 0, 9, 3, 0, 11, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 17, 4, 0, 17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 18, 6, 0, 18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 19, 4, 0, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 20, 4, 0, 21, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 25, 3, 0, 27, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 28, 3, 0, 34, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 0, 36, 6, 0, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 0, 40, 4, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 0, 43, 3, 0, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 54, 3, 0, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 57, 3, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 59, 5, 0, 61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 0, 62, 3, 0, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, -22, 4, 1, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, -15, 3, 3, -15, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 3, 1, -13, 5, 1, -11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 2, 4, 1, 4, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 5, 3, 1, 6, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 8, 3, 1, 8, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 31, 4, 1, 31, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 32, 4, 1, 32, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 33, 4, 1, 34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 35, 3, 6, 35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 36, 3, 1, 36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 38, 3, 1, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 46, 3, 1, 46, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 48, 3, 1, 48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 62, 3, 1, 65, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, -32, 3, 7, -32, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, -31, 3, 3, -31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, -30, 3, 2, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, -29, 3, 2, -28, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, -27, 7, 2, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, 5, 3, 2, 6, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, 32, 4, 2, 32, Blocks.TALL_GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, 63, 3, 2, 64, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -50, 3, 3, -49, Blocks.OXEYE_DAISY.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -40, 3, 7, -40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -38, 3, 7, -38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -36, 3, 7, -36, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -34, 3, 7, -34, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -30, 3, 7, -30, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -28, 3, 7, -28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -26, 3, 7, -26, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -24, 3, 7, -24, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, -23, 4, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 3, 3, 4, 3, 3, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 6, 3, 4, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 3, 8, 3, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 9, 3, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 3, 3, 17, 3, 4, 17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 18, 3, 5, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 3, 19, 3, 5, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 3, 20, 3, 4, 20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 3, 21, 3, 4, 21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 26, 3, 4, 26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 27, 3, 4, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 3, 28, 3, 5, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 3, 29, 3, 4, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 3, 30, 3, 4, 30, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 39, 3, 4, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 40, 3, 4, 40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 3, 41, 3, 4, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 42, 3, 4, 42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 3, 3, 48, 3, 3, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 3, 49, 3, 4, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 3, 50, 3, 4, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 4, -47, 3, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, -42, 3, 4, -42, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 4, 33, 3, 5, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 4, 34, 3, 6, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 4, 36, 3, 6, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 4, 37, 3, 5, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 5, -14, 3, 6, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 5, 6, 3, 5, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 5, 63, 3, 6, 63, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, -18, 4, 6, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 6, -17, 3, 6, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 6, -16, 3, 6, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 6, -15, 3, 6, -15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 6, -13, 3, 6, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 6, -12, 3, 7, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 6, 6, 3, 6, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 6, 62, 3, 7, 62, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 3, 6, 64, 3, 7, 64, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 3, 7, -17, 3, 8, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 7, -16, 3, 7, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 7, -15, 3, 7, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 3, 7, -14, 3, 7, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 7, -13, 3, 7, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 7, 34, 3, 7, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 7, 63, 5, 7, 63, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -39, 3, 11, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -38, 3, 8, -36, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -35, 3, 14, -35, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -33, 3, 11, -33, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -31, 3, 14, -31, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -30, 3, 8, -28, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -27, 3, 14, -27, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -26, 3, 12, -26, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -25, 3, 8, -24, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 8, -15, 3, 8, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 3, 8, -14, 3, 8, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 8, -13, 3, 8, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 3, 8, 63, 3, 10, 63, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 9, -41, 3, 9, -41, Blocks.STONE_BRICK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 3, 9, -15, 3, 9, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 9, -14, 3, 9, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 3, 9, 62, 5, 9, 62, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 3, 9, 64, 5, 9, 64, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 3, 10, -19, 3, 10, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 3, 10, 62, 5, 10, 62, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 3, 10, 64, 5, 10, 64, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 3, 11, -19, 3, 11, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 3, 12, -38, 3, 12, -36, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 12, -30, 3, 12, -28, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -39, 3, 14, -39, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -38, 3, 14, -38, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -37, 3, 14, -37, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 3, 13, -36, 3, 14, -36, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -34, 3, 14, -34, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -33, 3, 14, -33, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -32, 3, 14, -32, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -30, 3, 14, -30, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, -29, 3, 14, -29, Blocks.GLASS_PANE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 3, 13, -28, 3, 14, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 13, 63, 3, 14, 64, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 3, 15, -40, 3, 15, -39, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -38, 3, 16, -38, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -37, 3, 16, -37, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -36, 3, 16, -36, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -35, 4, 15, -35, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -31, 4, 15, -31, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -30, 3, 16, -30, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -29, 3, 16, -29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -28, 3, 16, -28, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, -27, 3, 15, -26, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 15, 63, 3, 15, 64, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 3, 17, -38, 4, 17, -38, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 3, 17, -28, 4, 17, -28, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, -11, 91, 4, -7, 91, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, 92, 13, -11, 92, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -11, 93, 5, -11, 98, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -10, -71, 36, -10, -71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -10, -70, 7, -7, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -10, -69, 40, -10, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -10, -31, 5, -10, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -10, -29, 50, -10, 81, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -10, 82, 7, -10, 85, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -10, 86, 5, -10, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, -69, 7, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, -57, 11, -9, -42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, -22, 4, -4, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, -21, 21, -9, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, 8, 4, -9, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, 9, 4, -9, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, 16, 4, -9, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, 37, 4, -8, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, 39, 11, -9, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -9, 76, 9, -9, 84, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -8, -50, 7, -8, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -8, -46, 6, -8, -46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -8, -12, 9, -8, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -8, -6, 5, -8, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -8, -4, 30, -8, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -5, 87, 7, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, -4, -63, 19, -4, -63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, -4, -62, 7, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -25, 4, 0, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -24, 6, -4, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -20, 7, -4, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -15, 5, -4, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -10, 9, -2, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, -9, 5, -4, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, 24, 7, -4, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -4, 71, 4, -4, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, -62, 5, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, -3, -1, 4, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 0, 5, -3, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 9, 6, -3, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 13, 4, -2, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 22, 5, -3, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 24, 4, -3, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 26, 4, -3, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 28, 4, -2, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 30, 7, -3, 41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 42, 6, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 43, 5, -2, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 44, 8, -3, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -3, 71, 4, -3, 72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, -2, -60, 5, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, -2, 12, 4, 0, 12, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 15, 5, -2, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 22, 5, -2, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 24, 4, -1, 25, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 26, 4, -2, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 27, 4, 0, 27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 30, 6, -2, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 44, 8, 0, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -2, 70, 4, -2, 70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, -37, 5, -1, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, -35, 4, -1, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, -21, 6, -1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 13, 5, -1, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 15, 5, -1, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 22, 5, -1, 23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 26, 4, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 28, 4, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 43, 5, -1, 43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 66, 6, -1, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, -1, 70, 4, -1, 70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, -57, 5, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, -29, 4, 0, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, -9, 4, 0, -9, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, -8, 4, 0, -7, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, -6, 4, 0, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, -4, 5, 0, 1, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, 5, 4, 0, 5, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, 6, 4, 0, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 7, 4, 0, 11, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, 13, 4, 0, 14, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 15, 5, 0, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 22, 5, 0, 23, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 24, 4, 0, 25, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 26, 4, 0, 26, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 28, 4, 0, 29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 30, 6, 0, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, 43, 5, 0, 43, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 54, 4, 0, 54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 0, 55, 4, 0, 57, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 0, 62, 4, 0, 68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 1, -19, 7, 1, -19, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, -15, 5, 1, -11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, -9, 4, 1, -9, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 4, 1, -6, 4, 1, -5, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 4, 1, 6, 4, 2, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 9, 4, 1, 11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 35, 4, 1, 37, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 39, 4, 1, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 45, 4, 1, 49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 54, 4, 8, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 58, 4, 8, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 2, -33, 9, 2, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 2, -22, 6, 2, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 2, 46, 4, 3, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 2, 47, 4, 3, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 2, 48, 4, 3, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 3, -50, 4, 3, -49, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 3, -47, 9, 3, -25, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 3, -24, 6, 3, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 4, 3, 4, 4, 3, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 3, 6, 4, 4, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 3, 8, 4, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 3, 9, 4, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 3, 18, 4, 4, 18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));

    }
    
    public static void generatePart29()
    {
        structure.fillWithBlocks(world, start, 4, 3, 19, 4, 4, 19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 3, 20, 4, 4, 20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 3, 21, 4, 4, 21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 4, 3, 27, 4, 4, 27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 3, 28, 4, 4, 28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 3, 29, 4, 4, 29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 3, 38, 4, 4, 38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 3, 39, 4, 4, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 3, 40, 4, 5, 40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 3, 41, 4, 4, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 3, 42, 4, 4, 42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 3, 49, 5, 3, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 4, -47, 7, 4, -47, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -45, 5, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -41, 7, 4, -41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -39, 5, 4, -38, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -35, 4, 4, -35, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -30, 4, 4, -30, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -27, 4, 4, -24, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, -5, 4, 5, -5, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, 1, 4, 5, 1, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, 3, 9, 4, 3, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 4, 5, 5, 4, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 4, 33, 4, 5, 33, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 4, 34, 4, 5, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 4, 35, 4, 6, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 4, 36, 4, 5, 36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 4, 37, 4, 4, 38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 5, -17, 4, 5, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 5, -15, 5, 5, -14, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 5, -13, 5, 6, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 5, -6, 19, 5, -6, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 5, -4, 4, 6, -4, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 5, 0, 4, 5, 1, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 5, 2, 19, 5, 2, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 5, 5, 4, 5, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 5, 6, 4, 5, 6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 5, 7, 4, 5, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 6, -17, 4, 6, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 6, -15, 5, 6, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 6, -14, 5, 6, -14, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 6, -12, 4, 6, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 6, -5, 19, 6, -5, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 6, -3, 4, 7, -3, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 6, -1, 4, 6, 0, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 6, 1, 19, 6, 1, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 6, 5, 4, 6, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 6, 6, 4, 6, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 6, 7, 4, 6, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 6, 40, 4, 6, 40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 7, -19, 4, 7, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 7, -17, 4, 8, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 7, -14, 6, 7, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 7, -13, 4, 7, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 7, -4, 19, 7, -4, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 7, -2, 4, 7, -1, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 7, 0, 19, 7, 0, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 8, -18, 4, 8, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 8, -13, 4, 8, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 8, -10, 4, 8, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 4, 8, -3, 19, 8, -3, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 8, -1, 19, 8, -1, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 9, -19, 4, 9, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 4, 9, -17, 4, 9, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 9, -15, 4, 9, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 9, -14, 4, 9, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 9, -13, 4, 9, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 4, 9, -10, 4, 9, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 4, 9, -2, 19, 9, -2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 4, 10, -19, 4, 10, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 4, 11, -19, 4, 11, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 11, -17, 4, 11, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 4, 11, -15, 4, 11, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 4, 11, -14, 4, 11, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 4, 12, -39, 4, 12, -35, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 4, 12, -31, 4, 12, -27, Blocks.OAK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 4, 12, -15, 4, 12, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 4, 12, 63, 4, 13, 63, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 13, -39, 4, 14, -39, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 4, 13, -35, 4, 14, -35, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 4, 13, -31, 4, 14, -31, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 4, 13, -27, 4, 14, -27, Blocks.IRON_BARS.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 4, 13, 62, 4, 15, 62, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 4, 14, 63, 4, 15, 64, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 16, 63, 4, 16, 64, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, -11, -75, 7, -11, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -11, 91, 6, -11, 92, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -10, -75, 8, -10, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -10, -32, 5, -10, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -10, 87, 6, -10, 89, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -10, 90, 13, -10, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -10, 91, 9, -10, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, -41, 9, -9, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, -22, 21, -9, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, 5, 9, -9, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, 10, 5, -9, 16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, 17, 5, -9, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, 48, 11, -9, 54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, 55, 5, -9, 74, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -9, 75, 9, -9, 84, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -8, -19, 7, -8, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -8, -15, 5, -7, -14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -8, -13, 10, -8, -7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -5, -71, 6, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, -4, -25, 7, -4, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, -21, 9, -4, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, -11, 6, -4, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, 7, 7, -3, 7, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, 8, 6, -4, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, 15, 6, -4, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, 71, 6, -4, 72, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, 73, 5, -4, 74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -4, 75, 5, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, -3, -21, 6, -2, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, -20, 8, -3, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, -16, 5, -3, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, -1, 5, -3, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 8, 5, -3, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 17, 6, -3, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 19, 5, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 20, 5, -3, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 24, 5, -3, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 29, 5, -3, 42, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -3, 71, 5, -3, 74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -20, 6, -2, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -18, 7, 0, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -17, 7, -1, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -16, 7, 0, -16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, -15, 19, -2, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 7, 10, -2, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 13, 6, -2, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 17, 6, -2, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 20, 5, -1, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 24, 6, -2, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 26, 5, -1, 28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 29, 5, 0, 29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 70, 7, -2, 72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -2, 73, 5, -2, 74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, -1, -47, 5, -1, -47, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, -1, -38, 7, -1, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -35, 6, -1, -35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -34, 8, -1, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -22, 6, -1, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -15, 8, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, -11, 5, -1, 14, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, 17, 6, -1, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, 24, 6, -1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, 30, 6, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, -1, 70, 5, -1, 72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, 0, -53, 6, 0, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, -22, 7, 0, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, -17, 7, 0, -17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, -10, 5, 0, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 4, 7, 0, 6, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, 0, 8, 8, 0, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, 0, 17, 6, 0, 18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 19, 5, 0, 19, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 20, 5, 0, 21, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 24, 5, 0, 28, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 41, 8, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, 0, 54, 6, 0, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 57, 5, 0, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 62, 5, 0, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 66, 7, 0, 68, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, 1, -55, 6, 2, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -51, 6, 2, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -22, 6, 1, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -6, 5, 4, -6, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -5, 5, 5, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, -4, 5, 3, -4, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 5, 1, 1, 5, 3, 1, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 5, 1, 2, 5, 4, 2, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 3, 5, 3, 3, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 7, 5, 5, 7, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 9, 5, 1, 9, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 12, 5, 1, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 32, 5, 1, 34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 36, 5, 1, 36, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 38, 5, 1, 39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 40, 5, 5, 40, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 45, 5, 1, 45, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 54, 7, 1, 54, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 1, 55, 7, 3, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 57, 7, 3, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 58, 7, 1, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 1, 62, 5, 1, 65, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 2, -50, 7, 2, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 5, 2, -37, 9, 2, -25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 2, -7, 5, 3, -7, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 5, 2, 45, 5, 3, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 2, 46, 5, 3, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 2, 47, 5, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 2, 48, 5, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 2, 49, 5, 3, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 2, 63, 5, 2, 64, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 3, -55, 6, 4, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 3, -51, 6, 4, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 3, -49, 6, 3, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 3, -12, 19, 3, -12, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 3, 5, 5, 5, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 3, 6, 5, 5, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 3, 8, 5, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 3, 9, 5, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 3, 38, 5, 4, 38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 3, 39, 5, 5, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 3, 41, 5, 5, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 3, 42, 5, 4, 42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 4, -42, 6, 4, -41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -34, 8, 4, -34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -31, 5, 4, -29, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -27, 5, 4, -27, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -25, 7, 4, -23, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -22, 6, 4, -22, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, -11, 8, 4, -8, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 4, 4, 5, 4, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 4, 34, 5, 5, 34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 4, 35, 5, 5, 35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 4, 36, 5, 4, 37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 4, 55, 7, 6, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, 57, 7, 6, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, -55, 6, 6, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, -51, 6, 6, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, -18, 5, 5, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 5, -17, 5, 5, -17, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, -12, 5, 5, -12, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 5, -11, 5, 5, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 5, -4, 6, 5, -4, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, -3, 5, 5, -1, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 5, 5, 0, 5, 6, 0, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 5, 5, 1, 6, 5, 1, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, 47, 5, 5, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 5, 54, 7, 5, 54, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 5, 5, 58, 7, 5, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 5, 5, 63, 5, 6, 63, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -54, 7, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -19, 6, 6, -19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 6, -18, 6, 6, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 6, -17, 5, 6, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 6, -12, 5, 6, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 6, -4, 6, 6, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 6, -3, 5, 7, -3, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 5, 6, -1, 5, 6, 0, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 5, 6, 6, 5, 6, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 6, 39, 5, 6, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 6, 62, 5, 7, 62, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 5, 6, 64, 5, 7, 64, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 5, 7, -55, 6, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 7, -51, 6, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 7, -19, 5, 7, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 7, -17, 5, 8, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 7, -12, 5, 7, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 7, -2, 5, 7, -1, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 5, 7, 54, 8, 7, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 7, 55, 5, 7, 57, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 7, 58, 8, 7, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 8, -19, 5, 8, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 8, -14, 5, 9, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 8, -13, 5, 9, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 8, -12, 5, 8, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 8, -10, 5, 8, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 8, -2, 12, 8, -2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 5, 8, 63, 5, 10, 63, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 8, 67, 7, 9, 67, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 9, -20, 5, 9, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 9, -19, 5, 9, -18, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 9, -17, 5, 9, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 9, -15, 5, 10, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 9, -12, 5, 9, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 9, -10, 5, 9, -10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 5, 10, -21, 5, 10, -21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 10, -20, 5, 10, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 10, -19, 5, 10, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 5, 10, -17, 6, 10, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 10, -11, 5, 10, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 5, 11, -21, 5, 11, -21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 5, 11, -20, 5, 11, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 11, -19, 5, 11, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 11, -17, 5, 11, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 11, -15, 5, 11, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 5, 11, -14, 5, 11, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 11, 63, 6, 11, 63, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 12, -20, 5, 12, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 5, 12, -19, 5, 12, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 12, -17, 5, 12, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 5, 12, -15, 5, 12, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 5, 12, -14, 5, 12, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 5, 13, -15, 5, 13, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 5, 13, 63, 5, 14, 64, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 5, 15, 63, 5, 15, 64, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 6, -11, -76, 8, -11, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, 93, 14, -11, 93, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -11, 94, 10, -11, 98, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -10, -76, 22, -10, -76, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -10, -32, 6, -10, -32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -10, -31, 6, -5, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -10, -30, 50, -10, 81, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -10, 86, 7, -10, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -9, -72, 8, -9, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -9, 10, 6, -9, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -9, 11, 6, -9, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -9, 18, 6, -9, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -9, 55, 7, -9, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -9, 57, 6, -9, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -9, 74, 7, -9, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -8, -51, 8, -8, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -8, -15, 6, -5, -15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -8, -14, 12, -8, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -8, -6, 6, -8, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -8, 95, 37, -8, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -7, 93, 40, -7, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -7, 95, 27, -7, 95, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -6, 93, 25, -6, 93, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -5, 86, 7, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -4, -29, 6, -3, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, -26, 7, -4, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, -15, 6, -4, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, -14, 6, -4, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, -9, 6, -4, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, -8, 6, -2, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, -7, 8, -4, -1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, 0, 6, -3, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, 1, 9, -4, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, 5, 7, -4, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, 73, 6, -4, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, 74, 6, -4, 75, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -4, 76, 7, -4, 85, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -3, -62, 7, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -3, -60, 10, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, -15, 7, -3, 0, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 1, 6, -3, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 6, 7, -3, 7, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 13, 7, -3, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 14, 7, -3, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 19, 6, -3, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 20, 6, -1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 21, 7, -3, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 25, 6, -1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 26, 6, -3, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 28, 7, -3, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 43, 8, -3, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 56, 6, -1, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 57, 13, -3, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 58, 6, -2, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 60, 6, -3, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -3, 72, 8, -3, 74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, -60, 7, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -2, 1, 13, -2, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 15, 6, -2, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 16, 6, 0, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 19, 6, -2, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 21, 10, -2, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 26, 6, -1, 27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 28, 7, -2, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 43, 7, -2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 67, 8, -2, 73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -2, 74, 6, -2, 74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -1, -47, 7, -1, -46, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, -1, -45, 7, -1, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -11, 6, -1, -11, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -10, 6, 1, -8, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -7, 6, -1, -7, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -6, 6, 0, -5, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, -4, 9, -1, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 1, 17, -1, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 2, 7, -1, 3, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 4, 9, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 13, 7, -1, 15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 19, 6, -1, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 21, 10, -1, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 28, 7, -1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 43, 7, -1, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 69, 8, -1, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, -1, 72, 7, -1, 73, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, -57, 7, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, -23, 8, 0, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, -14, 8, 0, -12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, -3, 6, 0, 0, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 2, 7, 0, 3, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 7, 8, 0, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, 14, 7, 0, 15, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 19, 6, 0, 19, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 21, 9, 0, 24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, 26, 6, 0, 27, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 28, 7, 0, 29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 40, 7, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, 43, 7, 0, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 45, 7, 0, 46, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, 48, 8, 0, 51, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, 52, 6, 0, 53, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, 57, 7, 0, 57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 58, 6, 0, 59, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 60, 6, 0, 62, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 0, 63, 6, 0, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 0, 69, 8, 0, 71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 6, 1, -15, 6, 10, -15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -13, 7, 1, -13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -12, 6, 2, -12, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 6, 1, -11, 6, 3, -11, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -7, 6, 3, -7, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -6, 6, 1, -5, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -4, 6, 4, -4, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, -3, 6, 3, -3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 0, 6, 3, 0, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 1, 6, 3, 1, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 2, 7, 1, 3, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 10, 6, 1, 11, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 13, 7, 1, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 21, 6, 1, 24, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 35, 6, 1, 35, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 37, 6, 1, 38, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 41, 8, 1, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 45, 6, 1, 46, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 47, 6, 4, 47, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 63, 6, 1, 65, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 2, -10, 6, 2, -8, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 2, -6, 6, 3, -6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 2, 2, 7, 2, 3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 2, 45, 6, 3, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 2, 46, 6, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 2, 48, 6, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 2, 49, 6, 3, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 2, 63, 6, 2, 64, Blocks.COBBLESTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 6, 3, -50, 7, 3, -48, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, -5, 6, 5, -5, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, -2, 6, 3, 0, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, 2, 7, 3, 3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, 5, 6, 4, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 3, 6, 6, 4, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 3, 7, 6, 5, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 3, 8, 6, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 3, 9, 6, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 3, 38, 6, 4, 38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 3, 39, 6, 4, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 3, 40, 6, 5, 40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 3, 41, 6, 5, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 3, 42, 6, 4, 42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 4, -46, 7, 4, -46, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -45, 6, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -35, 7, 4, -34, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -32, 7, 4, -31, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -29, 8, 4, -24, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, -7, 6, 4, -6, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 6, 4, -3, 6, 4, 1, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 4, 4, 6, 4, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 5, -17, 6, 6, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 5, -14, 6, 5, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 5, -12, 6, 5, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 5, 46, 6, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 6, -14, 6, 6, -13, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 6, -12, 6, 6, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 7, -19, 6, 8, -19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 7, -18, 6, 9, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 7, -17, 6, 8, -16, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 7, -13, 6, 7, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 7, -12, 6, 7, -11, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 7, 55, 6, 7, 57, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 6, 7, 67, 6, 10, 67, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 8, -13, 6, 8, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 8, -12, 6, 8, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 9, -19, 6, 9, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 9, -13, 6, 9, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 9, -12, 6, 9, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 9, 66, 7, 9, 66, Blocks.INFESTED_STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 10, -21, 6, 10, -21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 6, 10, -20, 6, 10, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 10, -19, 6, 10, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 10, -16, 6, 10, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 6, 10, -12, 6, 10, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 11, -20, 6, 11, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 6, 11, -19, 6, 11, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 11, -16, 6, 11, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 6, 12, -17, 6, 12, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 6, 12, -16, 6, 12, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 6, 13, -16, 6, 13, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, -11, -77, 16, -11, -77, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, -11, 91, 9, -11, 93, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, 99, 35, -11, 99, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -11, 100, 14, -11, 100, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, -10, -32, 50, -10, 81, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -10, 89, 8, -10, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -10, 99, 35, -10, 99, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, -9, -23, 20, -9, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -9, 10, 8, -9, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -9, 12, 7, -9, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -9, 19, 8, -9, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -9, 57, 7, -9, 57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -9, 58, 7, -9, 73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, -46, 24, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, -15, 13, -8, -8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, -6, 8, -8, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, -5, 34, -8, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, 23, 9, -8, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, 26, 7, -5, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, 27, 7, -8, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -8, 94, 8, -8, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -5, -71, 8, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, -4, -69, 13, -4, -63, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, -4, -29, 7, -1, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, -27, 7, -4, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, -22, 10, -4, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, -15, 8, -4, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, -13, 7, -4, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, -9, 7, -4, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 9, 7, -4, 9, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 10, 7, -2, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 13, 7, -4, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 16, 8, -4, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 71, 11, -3, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 72, 8, -4, 72, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 73, 8, -4, 74, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -4, 75, 7, -4, 75, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, -21, 8, -3, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, -16, 7, -3, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 2, 9, -3, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 5, 8, -3, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 8, 7, -3, 8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 9, 7, -1, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 16, 8, -3, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 18, 7, -3, 26, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 27, 9, -3, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 42, 7, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 53, 8, -2, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 54, 7, -3, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 58, 7, -1, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 59, 7, -3, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 60, 7, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 61, 8, -3, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 63, 7, -3, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -3, 75, 16, -3, 75, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, -21, 9, -2, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 0, 15, -2, 8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 13, 7, -1, 17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 18, 7, 0, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 26, 7, -1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 30, 7, 0, 30, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 31, 7, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 54, 7, 0, 54, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 55, 7, 0, 57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 59, 7, 0, 59, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 61, 7, -2, 61, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 63, 8, -2, 74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -2, 75, 8, -2, 75, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, -1, -39, 9, -1, -37, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -35, 9, -1, -33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -22, 10, -1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -11, 9, 1, -11, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -10, 11, -1, -6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, -5, 8, -1, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, 61, 7, -1, 61, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, 62, 7, -1, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, -1, 74, 8, -1, 74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 0, -53, 13, 0, -53, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 0, -52, 9, 0, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, -15, 10, 0, -12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 0, -10, 17, 0, 1, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, 16, 8, 0, 17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, 25, 8, 0, 26, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 0, 27, 7, 0, 29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, 31, 7, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 0, 47, 8, 0, 51, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 0, 53, 8, 0, 53, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, 58, 7, 0, 58, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, 61, 7, 0, 61, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 0, 62, 7, 0, 71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 1, -55, 9, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 7, 1, -54, 9, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, -52, 9, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, -51, 9, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 7, 1, -50, 9, 1, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, -22, 7, 1, -21, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 9, 7, 1, 10, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 12, 7, 1, 13, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 24, 7, 1, 25, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 26, 7, 3, 26, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 7, 1, 34, 7, 1, 37, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 40, 8, 1, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 1, 56, 7, 2, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 2, -22, 7, 2, -21, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 2, -11, 9, 2, -11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 2, 8, 7, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 2, 9, 7, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 2, 10, 7, 3, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 2, 45, 8, 2, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 2, 46, 8, 3, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 2, 47, 8, 3, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 2, 48, 8, 3, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 2, 49, 8, 2, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 3, -24, 7, 3, -23, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 7, 3, 5, 7, 4, 5, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, 3, 6, 7, 4, 6, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 3, 7, 7, 4, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 3, 11, 7, 4, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, 3, 38, 7, 4, 38, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, 3, 39, 7, 4, 39, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 3, 40, 7, 4, 40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 3, 41, 7, 4, 41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 3, 49, 7, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 3, 50, 7, 4, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 3, 51, 7, 4, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 3, 56, 7, 4, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -54, 9, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -52, 9, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -44, 9, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -42, 7, 4, -39, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -38, 7, 4, -37, Blocks.DANDELION.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -33, 7, 4, -23, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, -7, 7, 4, -7, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 7, 4, -5, 13, 4, 1, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 4, 2, 17, 4, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, 4, 46, 8, 4, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 4, 47, 8, 4, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 4, 48, 7, 4, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 5, -55, 9, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 7, 5, -51, 9, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 7, 5, -14, 7, 5, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 5, -12, 7, 5, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 5, -2, 7, 5, -1, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 7, 5, 47, 7, 5, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 5, 48, 7, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 5, 56, 7, 6, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 6, -17, 7, 6, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 6, -14, 7, 6, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 6, -12, 7, 6, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 7, -18, 7, 9, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 7, -17, 7, 8, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 7, -13, 7, 7, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 7, -12, 7, 7, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 7, 55, 7, 7, 57, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 8, -19, 7, 8, -19, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 8, -13, 7, 8, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 8, -12, 7, 8, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 8, 55, 7, 8, 57, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 7, 9, -19, 7, 9, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 9, -16, 9, 9, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 9, -15, 8, 9, -15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 9, -13, 7, 9, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, 9, -12, 7, 9, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 10, -19, 7, 10, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 10, -16, 9, 10, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 10, -15, 8, 10, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 7, 10, -14, 8, 10, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 10, -13, 8, 10, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 11, -19, 7, 11, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, 11, -16, 9, 11, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 11, -15, 8, 11, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 7, 11, -14, 8, 11, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 11, -13, 8, 11, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, 12, -16, 8, 12, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 7, 12, -15, 8, 12, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 7, 12, -14, 8, 12, -14, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 8, -10, -70, 43, -10, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -10, 87, 8, -9, 88, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -10, 98, 33, -10, 98, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -9, -69, 8, -9, -69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -9, 12, 8, -9, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -9, 13, 8, -9, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -9, 47, 8, -9, 58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -9, 59, 8, -9, 74, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -9, 98, 33, -9, 98, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, -9, 99, 8, -9, 99, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -8, -19, 9, -8, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -8, -17, 8, -5, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -8, -16, 15, -8, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -8, 26, 10, -8, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -8, 78, 18, -8, 95, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -8, 98, 8, -8, 98, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -5, 86, 44, -5, 86, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -5, 87, 11, -5, 90, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, -4, -62, 11, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, -28, 8, -4, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, -26, 15, -4, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, -16, 8, -2, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, -13, 9, -4, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, -12, 8, -2, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, -9, 8, -4, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, -8, 8, -1, -8, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 0, 11, -4, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 5, 8, -4, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 7, 10, -4, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 11, 9, -3, 11, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 12, 8, -4, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 42, 8, -3, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 70, 9, -4, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 75, 8, -4, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -4, 77, 8, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, -3, -62, 9, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, -3, -15, 8, -3, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, -14, 8, -3, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 6, 10, -3, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 12, 8, -3, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 54, 8, -3, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 55, 8, -1, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 56, 8, -3, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 59, 8, -3, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 60, 8, -3, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 63, 8, -1, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -3, 64, 8, -3, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, -60, 9, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, -2, -58, 15, -2, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, -18, 10, -1, -18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, -17, 10, 0, -17, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 13, 8, -1, 13, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 14, 9, -2, 15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 16, 8, -2, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 20, 8, 0, 20, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 26, 8, -2, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 27, 8, 0, 29, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 30, 8, -1, 30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 31, 8, -1, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 33, 8, -1, 33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 34, 8, -2, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 35, 8, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 42, 8, 0, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 45, 9, -2, 51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 52, 8, 0, 52, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 54, 8, -1, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 56, 8, -2, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 58, 9, -2, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -2, 60, 8, 0, 62, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -47, 9, -1, -45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -44, 8, -1, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -36, 8, 2, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -23, 12, -1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, -16, 8, 0, -16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 2, 9, -1, 3, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 14, 9, -1, 15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 16, 8, -1, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 26, 8, -1, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 34, 8, -1, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 45, 9, -1, 51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 53, 8, -1, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 56, 8, -1, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 58, 9, -1, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 64, 8, -1, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, -1, 72, 8, -1, 74, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 0, -57, 9, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 0, -47, 9, 0, -27, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, -24, 10, 0, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, -18, 10, 0, -18, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 2, 9, 0, 3, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 4, 9, 0, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 6, 9, 0, 8, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 0, 14, 9, 0, 15, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 18, 8, 0, 19, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 31, 8, 0, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 34, 8, 0, 34, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 35, 8, 0, 38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 39, 8, 0, 41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 0, 45, 9, 0, 46, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 0, 55, 8, 0, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 56, 8, 0, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 59, 8, 0, 59, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 0, 64, 8, 0, 71, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 1, -21, 8, 1, -20, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 1, 2, 9, 1, 3, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 4, 8, 1, 4, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 8, 1, 11, 8, 1, 12, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 39, 8, 1, 41, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 54, 8, 12, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 1, 55, 8, 1, 57, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 8, 1, 58, 8, 12, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 2, -50, 8, 2, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 2, -23, 8, 2, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 8, 2, 2, 9, 2, 3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 2, 7, 8, 3, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 2, 8, 8, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 2, 9, 8, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 8, 2, 10, 8, 3, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 2, 11, 8, 4, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 3, 2, 9, 3, 3, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 3, 49, 8, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 3, 50, 8, 5, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 8, 3, 51, 8, 4, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 3, 52, 8, 4, 52, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 4, -45, 8, 4, -44, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 4, -42, 9, 4, -42, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 4, -36, 9, 4, -35, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 4, -33, 8, 4, -33, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 4, -7, 9, 4, -6, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 8, 4, 45, 8, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 4, 48, 8, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 4, 55, 8, 4, 57, Blocks.WALL_TORCH.getDefaultState().with(WallTorchBlock.HORIZONTAL_FACING, Direction.EAST));
        structure.fillWithBlocks(world, start, 8, 5, -14, 8, 5, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 5, -12, 8, 5, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 8, 5, -2, 8, 5, -1, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 8, 5, 9, 8, 5, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 5, 47, 8, 6, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 8, 6, -54, 10, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 6, -14, 8, 6, -13, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 6, -12, 8, 6, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 6, 48, 8, 6, 48, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 6, 50, 8, 6, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 7, 47, 8, 7, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));

    }
    
    public static void generatePart30()
    {
        structure.fillWithBlocks(world, start, 8, 7, 55, 8, 7, 57, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 8, 8, -18, 8, 9, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 8, -17, 8, 9, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 8, 8, -16, 8, 9, -16, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 8, 8, -12, 8, 8, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 8, 55, 10, 8, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 9, -12, 8, 9, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 8, 10, -18, 9, 10, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 8, 10, -17, 9, 10, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 8, 11, -17, 9, 11, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 8, 12, 55, 10, 12, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 13, 55, 10, 13, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 14, 56, 16, 14, 56, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -11, -76, 11, -11, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -11, -73, 11, -11, 93, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -11, 101, 10, -11, 101, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -10, -75, 12, -10, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -10, 87, 10, -9, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -10, 88, 11, -10, 90, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, -72, 11, -9, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, -69, 10, -9, -68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, -24, 20, -9, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 10, 12, -9, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 14, 9, -9, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 20, 34, -9, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 47, 24, -9, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 55, 13, -9, 59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 60, 10, -9, 74, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 85, 10, -9, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 88, 16, -9, 96, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -9, 100, 14, -8, 100, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -8, -51, 9, -8, -51, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -8, -50, 9, -8, -47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -8, -17, 17, -8, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -8, -6, 37, -8, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -8, 98, 9, -8, 100, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -7, -73, 11, -7, 93, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -7, 98, 10, -7, 99, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -6, -73, 10, -6, -72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, -5, -71, 10, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, -4, -29, 17, -4, -20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -16, 9, -4, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -12, 9, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -11, 9, -4, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -9, 12, -4, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -5, 9, -2, -5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, -4, 11, -4, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, 5, 11, -4, 8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, 12, 11, -3, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, 13, 25, -4, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, 54, 13, -4, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, 76, 11, -4, 79, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -4, 80, 15, -4, 86, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, -3, -21, 14, -3, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, -15, 9, -3, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, -13, 21, -3, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 5, 10, -3, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 13, 25, -3, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 54, 10, -3, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 56, 9, -1, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 58, 9, -1, 61, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 62, 9, -3, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 65, 10, -2, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 66, 9, -3, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 67, 9, -3, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 70, 9, -3, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 72, 10, -3, 78, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -3, 79, 15, -3, 79, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, -2, -50, 24, 0, -50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, -49, 10, -2, -48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, -47, 9, -2, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, -22, 12, -2, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, -16, 10, -2, 12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 13, 9, 0, 16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 17, 16, -2, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 26, 12, -2, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 30, 9, -1, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 32, 9, -1, 32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 33, 9, 0, 37, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 38, 9, -2, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 39, 9, 0, 39, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 40, 9, -2, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 42, 9, 0, 42, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 43, 9, -2, 52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 53, 10, -2, 55, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 57, 9, -2, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 62, 9, 0, 64, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 66, 9, -2, 66, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 67, 9, -2, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 70, 9, -2, 71, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 72, 10, -2, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -2, 78, 15, -2, 78, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, -1, -44, 11, 1, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -43, 11, -1, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -36, 10, -1, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -32, 9, 2, -32, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -31, 11, -1, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -24, 14, -1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, -16, 10, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 0, 10, -1, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 17, 12, -1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 26, 12, -1, 29, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 38, 9, -1, 38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 40, 9, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 43, 9, -1, 52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 53, 10, -1, 55, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 57, 9, -1, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 65, 10, -1, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 66, 9, -1, 66, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 67, 9, -1, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 70, 9, -1, 71, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 72, 10, -1, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 9, -1, 77, 15, -1, 77, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 0, -20, 10, 0, -19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, 0, -16, 10, 0, -16, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 10, 11, 0, 12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, 0, 17, 10, 0, 17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 18, 10, 0, 26, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, 0, 27, 9, 0, 29, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 30, 9, 0, 31, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 32, 9, 0, 32, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 38, 9, 0, 38, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 40, 9, 0, 40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 43, 9, 0, 44, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 48, 9, 0, 49, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, 0, 52, 11, 0, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 53, 10, 0, 55, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 57, 9, 0, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 58, 9, 0, 61, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 65, 10, 0, 65, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 66, 9, 0, 66, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 67, 9, 0, 69, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 70, 9, 0, 71, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 72, 9, 0, 75, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 0, 76, 15, 0, 76, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 1, -22, 9, 1, -21, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, 1, 4, 9, 2, 4, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 9, 1, 9, 9, 4, 9, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, 47, 9, 6, 47, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 1, 50, 9, 5, 50, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 2, -50, 9, 2, -48, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 2, -24, 10, 2, -23, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 9, 2, 7, 9, 3, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 2, 8, 9, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 2, 10, 9, 4, 10, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 2, 11, 9, 4, 11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 3, 48, 9, 4, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 3, 51, 9, 5, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 3, 52, 9, 4, 52, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 4, -28, 9, 4, -26, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 4, -11, 9, 4, -8, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 9, 4, 45, 9, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 4, 46, 9, 6, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 5, -46, 9, 6, -46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 9, 5, -45, 9, 6, -45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 9, 5, -44, 9, 6, -44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 5, -43, 9, 6, -43, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 9, 5, 8, 9, 5, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 5, 48, 9, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 5, 54, 15, 5, 54, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 9, 5, 58, 15, 5, 58, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 9, 6, -12, 9, 6, -11, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 9, 6, 49, 9, 6, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 6, 54, 15, 7, 54, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 9, 6, 55, 9, 7, 57, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 9, 6, 58, 15, 7, 58, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 9, 7, 46, 9, 7, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 8, -17, 9, 8, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 8, -15, 9, 9, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 9, 8, 54, 16, 8, 54, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 8, 58, 16, 8, 58, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 9, -18, 9, 9, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 9, 9, -17, 9, 9, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 9, 12, 53, 15, 12, 53, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 12, 54, 13, 12, 58, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 9, 12, 59, 15, 12, 59, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 13, 54, 15, 13, 54, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 13, 58, 15, 13, 58, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 14, 55, 15, 14, 55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 14, 57, 15, 14, 57, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 9, 15, 56, 15, 15, 56, Blocks.SMOOTH_STONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 10, -10, 91, 13, -10, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -10, 92, 16, -10, 98, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -10, 101, 10, -10, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, -67, 10, -9, -67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, -66, 10, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, -41, 51, -9, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, 5, 19, -9, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, 15, 10, -9, 19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, 75, 10, -9, 75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, 76, 10, -5, 80, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, 81, 15, -9, 86, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -9, 102, 11, -9, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -8, -51, 24, -8, -20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -8, -19, 11, -7, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -8, -18, 17, -8, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -8, 23, 12, -8, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -8, 99, 11, -8, 100, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -8, 102, 10, -8, 102, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -6, 91, 40, -6, 91, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -6, 98, 18, -6, 98, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -5, 91, 40, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, -4, -18, 12, -4, -16, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, -14, 11, -4, -12, Blocks.COAL_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, -11, 10, -4, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -4, 11, 11, -4, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, -62, 11, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, -3, -47, 10, -2, -47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, -46, 11, -3, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, -28, 15, -3, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, -15, 22, -3, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 2, 10, -3, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 4, 10, -3, 10, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 11, 11, -3, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 56, 11, -3, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 58, 10, -3, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 60, 10, -1, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 66, 10, -3, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -3, 68, 10, -1, 70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, -60, 11, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, -2, 13, 21, -2, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 30, 11, -2, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 32, 10, 0, 32, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 33, 16, -2, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 40, 10, -2, 40, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 41, 10, -2, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 43, 10, -2, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 44, 10, -2, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 47, 10, 0, 47, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 48, 10, -2, 48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 49, 10, 0, 49, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 50, 10, -1, 52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 56, 11, -2, 58, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 59, 10, 0, 59, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 66, 10, -2, 67, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -2, 71, 10, 0, 71, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -46, 12, -1, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -39, 10, 0, -38, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -37, 10, -1, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -33, 11, 0, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -32, 11, -1, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, -11, 10, -1, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 2, 10, 1, 6, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 7, 11, -1, 31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 33, 16, -1, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 40, 10, -1, 40, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 41, 10, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 43, 10, -1, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 44, 10, -1, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 48, 10, -1, 48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 56, 11, -1, 58, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, -1, 66, 10, -1, 67, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, -57, 11, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, -54, 10, 0, -52, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, -49, 11, 0, -48, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, -46, 11, 0, -22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, -21, 12, 0, -19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, 7, 11, 0, 14, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, 15, 10, 0, 17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 27, 12, 0, 30, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, 31, 11, 0, 31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, 33, 10, 0, 34, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 35, 11, 0, 36, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, 37, 10, 0, 39, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 40, 10, 0, 40, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 41, 10, 0, 42, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 43, 10, 0, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 45, 10, 0, 46, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 0, 48, 10, 0, 48, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 51, 10, 0, 52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 56, 11, 0, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 58, 10, 0, 59, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 60, 10, 0, 65, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 66, 10, 0, 67, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 68, 10, 0, 70, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 73, 10, 0, 73, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 0, 74, 10, 0, 75, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, -55, 10, 7, -55, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, -51, 10, 7, -51, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, -50, 11, 1, -48, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 1, -46, 11, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, -22, 11, 1, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 1, -21, 10, 1, -21, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, -12, 10, 2, -12, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 1, -11, 10, 3, -11, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 1, 15, 10, 2, 15, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 2, -47, 11, 2, -47, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 10, 2, -46, 11, 2, -45, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 2, -44, 10, 2, -23, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 10, 2, 2, 10, 2, 6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 2, 7, 10, 3, 7, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 2, 8, 10, 4, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 2, 9, 10, 4, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 10, 2, 19, 10, 2, 19, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 10, 3, -23, 10, 4, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 3, -22, 10, 4, -22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 3, -21, 10, 4, -21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 3, 3, 10, 8, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 3, 4, 10, 3, 6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 3, 48, 10, 4, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 3, 50, 10, 5, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 10, 3, 51, 10, 5, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 3, 52, 10, 4, 52, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 4, -25, 10, 4, -25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 4, -24, 10, 4, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 4, -11, 19, 4, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 10, 4, -10, 12, 4, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 4, -7, 11, 4, -6, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 10, 4, 4, 10, 6, 6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 4, 45, 10, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 4, 46, 10, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 4, 47, 10, 6, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 10, 5, -52, 10, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 5, -46, 10, 6, -46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 5, -45, 10, 6, -45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 5, -44, 10, 7, -44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 10, 5, -43, 10, 6, -43, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 5, -42, 10, 6, -42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 5, -25, 10, 5, -25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 5, -24, 10, 5, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 10, 5, -10, 12, 5, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 5, 48, 10, 5, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 6, -10, 12, 6, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 6, 55, 12, 6, 57, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 10, 7, -10, 12, 7, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 7, 4, 10, 8, 6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 7, 55, 12, 7, 57, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 10, 8, -44, 10, 8, -44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 8, -10, 12, 8, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 9, -18, 10, 9, -18, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 10, 9, -16, 10, 9, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 10, 9, -10, 12, 9, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 10, 9, 4, 10, 9, 6, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 10, 10, -17, 10, 10, -17, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 10, 10, -16, 10, 10, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 10, 11, -16, 10, 11, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 11, -11, 94, 16, -11, 99, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -10, 87, 13, -10, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -10, 101, 11, -8, 101, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -10, 103, 11, -8, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, -69, 14, -9, -66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, -65, 12, -9, -58, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, -25, 19, -9, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, 15, 11, -9, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, 16, 11, -9, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, 19, 34, -9, 46, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, 60, 14, -6, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, 61, 30, -9, 84, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -9, 87, 12, -9, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -8, -7, 40, -8, 22, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -8, 26, 11, -8, 26, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -8, 27, 11, -8, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -8, 29, 20, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -8, 97, 34, -8, 97, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, -8, 102, 12, -8, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -7, 98, 12, -7, 99, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -7, 102, 11, -7, 102, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -6, -73, 11, -6, -72, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, -6, 97, 12, -6, 98, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -5, -71, 12, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, -5, 97, 16, -5, 97, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -15, 11, -1, -15, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -11, 11, -4, -11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -10, 11, -1, -10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, -5, 13, -4, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, 4, 11, -4, 8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -4, 9, 12, -4, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -60, 15, -3, -56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -55, 13, -3, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -51, 11, -3, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -48, 11, -2, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -44, 11, -3, -43, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -42, 15, -3, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -37, 11, -3, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, -22, 24, -3, -4, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 2, 14, -3, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 6, 11, -3, 8, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 9, 11, -3, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 55, 11, -1, 55, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 58, 11, -1, 58, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 59, 12, -3, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 61, 11, -3, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 63, 13, -1, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 64, 11, -3, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 66, 11, -1, 66, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 67, 11, -3, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 68, 11, -1, 68, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 69, 12, -3, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 72, 12, -2, 72, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -3, 73, 14, -3, 78, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -49, 11, -2, -49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -42, 12, -2, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -37, 11, -1, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -36, 11, -2, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -35, 11, -2, -34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -33, 11, -2, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -32, 11, -1, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -24, 16, -2, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -23, 15, -2, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -18, 13, 0, -18, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -17, 13, -1, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, -16, 13, 0, -16, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 25, 13, -2, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 40, 11, -2, 41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 42, 11, -1, 42, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 43, 12, -2, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 45, 11, -1, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 46, 11, 0, 46, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 47, 11, -1, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 51, 11, -2, 51, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 52, 11, -1, 52, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 53, 11, -1, 54, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 59, 12, -2, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 61, 11, -1, 62, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 64, 11, -1, 65, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 67, 11, 0, 67, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 69, 11, 0, 69, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 70, 11, -1, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -2, 73, 14, -2, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -57, 24, -1, -44, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -39, 12, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -36, 14, -1, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -14, 13, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -11, 13, 1, -11, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -5, 13, -1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, -1, 11, -1, 5, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 6, 11, -1, 6, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 32, 18, -1, 39, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 40, 11, -1, 41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 43, 12, -1, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 51, 11, -1, 51, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 59, 12, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 72, 12, 0, 72, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, -1, 73, 13, -1, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, -54, 22, 0, -54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, -52, 13, 0, -50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, -47, 11, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, -17, 13, 0, -17, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, -15, 14, 0, -12, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, 0, 2, 15, 0, 6, Blocks.POLISHED_ANDESITE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 15, 11, 2, 15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 16, 11, 0, 16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 18, 11, 0, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 19, 11, 2, 19, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 20, 11, 0, 21, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, 0, 23, 11, 0, 31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, 0, 33, 11, 0, 33, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 34, 11, 0, 34, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 37, 13, 0, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, 0, 40, 11, 0, 41, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 43, 12, 0, 44, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 45, 11, 0, 45, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 47, 11, 0, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 51, 11, 0, 51, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 53, 11, 0, 54, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 55, 11, 0, 55, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 58, 12, 0, 60, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 61, 11, 0, 62, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 63, 13, 0, 63, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 64, 11, 0, 65, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 66, 11, 0, 66, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 68, 11, 0, 68, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 70, 12, 0, 71, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 73, 11, 0, 74, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 0, 75, 15, 0, 75, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, -55, 13, 1, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 11, 1, -54, 13, 3, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, -52, 13, 3, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, -51, 13, 1, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 11, 1, -23, 11, 1, -22, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, 1, -21, 12, 1, -20, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 6, 11, 1, 6, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 14, 11, 2, 14, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 1, 17, 11, 2, 18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 20, 11, 2, 20, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 1, 24, 11, 2, 24, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 1, 32, 11, 6, 32, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 1, 34, 11, 6, 34, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 2, -43, 11, 2, -24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 11, 2, -11, 13, 2, -11, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 2, 6, 11, 3, 6, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 2, 8, 11, 3, 8, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 2, 9, 11, 3, 9, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 3, -44, 11, 7, -44, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 3, -24, 11, 4, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 3, -22, 11, 4, -22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 11, 3, -21, 11, 4, -21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 3, -20, 11, 4, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 3, 4, 11, 3, 5, Index.SHELF_SPRUCE.getDefaultState().with(Shelf.FACING, Direction.EAST));
        structure.fillWithBlocks(world, start, 11, 3, 16, 11, 3, 18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 3, 33, 11, 6, 33, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 3, 48, 11, 4, 49, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 3, 50, 11, 4, 50, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 3, 51, 11, 4, 51, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 4, -54, 13, 5, -54, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, -52, 13, 5, -52, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, -37, 11, 5, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 11, 4, -36, 11, 5, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 11, 4, -35, 11, 5, -35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, 11, 4, -25, 11, 4, -25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 11, 4, 3, 13, 4, 3, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 11, 4, 6, 11, 9, 6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 4, 45, 11, 5, 45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 11, 4, 46, 11, 5, 46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 4, 47, 11, 5, 47, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 5, -55, 13, 5, -55, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 11, 5, -51, 13, 5, -51, Blocks.STONE_BRICK_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 11, 5, -46, 11, 6, -46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 5, -45, 11, 7, -45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 11, 5, -43, 11, 7, -43, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 11, 5, -42, 12, 5, -42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 5, -25, 11, 5, -25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 5, -24, 11, 5, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 5, -22, 11, 5, -22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 5, 3, 16, 8, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, -54, 13, 6, -52, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 6, -42, 11, 7, -42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 6, -41, 11, 7, -41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 6, -40, 11, 7, -40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 11, 6, -22, 11, 6, -22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 11, 7, 34, 11, 7, 34, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 11, 8, -45, 11, 8, -45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 11, 8, 4, 12, 8, 5, Blocks.GLOWSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 8, 55, 13, 8, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 9, 3, 15, 9, 3, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 11, 9, 4, 13, 9, 6, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 10, -16, 11, 10, -15, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 11, 10, -10, 13, 10, -10, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 11, 10, -9, 13, 10, -9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 11, 10, -8, 13, 10, -8, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 11, 13, 55, 13, 13, 57, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -11, -76, 14, -11, -74, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -11, -73, 12, -8, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -11, 91, 13, -11, 93, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -11, 101, 27, -11, 101, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, -9, -72, 13, -9, -70, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -9, -57, 21, -5, -57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -9, 0, 12, -9, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -9, 17, 12, -8, 18, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -9, 48, 12, -9, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -9, 49, 12, -9, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -9, 101, 12, -9, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -8, -19, 16, -8, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -8, 26, 20, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -8, 99, 16, -8, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -7, -73, 17, -7, -73, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, -7, 101, 14, -7, 103, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -6, 96, 12, -6, 98, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -5, 87, 12, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, -5, 96, 13, -5, 97, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -62, 15, -4, -59, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -58, 16, -4, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -53, 13, -4, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -51, 12, -4, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -49, 17, -4, -49, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -48, 13, -4, -45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -43, 19, -4, -35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -34, 15, -4, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -15, 12, -4, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -14, 12, -2, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -11, 13, -4, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, -1, 12, -2, -1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 0, 14, -4, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 3, 13, -4, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 5, 12, -4, 6, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 7, 14, -4, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 12, 16, -4, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 76, 13, -4, 76, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -4, 77, 14, -4, 79, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, -62, 13, -3, -61, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, -3, -50, 16, -3, -50, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, -49, 12, -1, -43, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, -37, 12, -1, -30, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, -29, 15, -3, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 6, 13, -2, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 8, 12, -3, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 10, 12, -1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 54, 12, -1, 54, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 55, 12, -3, 55, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 56, 12, -1, 56, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 58, 12, -3, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 61, 13, -3, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 62, 13, -3, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 64, 13, -3, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 65, 13, -2, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 66, 16, -3, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -3, 71, 12, -1, 71, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, -60, 13, -2, -59, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, -2, -29, 12, -1, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, -26, 14, -2, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 40, 12, -2, 40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 41, 12, -2, 45, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 46, 12, -1, 47, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 48, 12, 0, 53, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 55, 12, -2, 55, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 57, 12, -2, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 58, 12, -2, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 61, 13, -1, 61, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 62, 13, -2, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 64, 13, -1, 64, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 66, 12, -1, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 68, 12, 0, 68, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -2, 69, 12, -1, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, -42, 12, -1, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, -26, 16, -1, -19, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, -15, 15, -1, -12, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, -10, 13, -1, -2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 0, 14, -1, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 3, 13, -1, 6, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 7, 13, 0, 7, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 8, 13, -1, 20, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 21, 12, 1, 23, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 24, 13, -1, 40, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 41, 12, -1, 45, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 55, 12, -1, 55, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 57, 12, -1, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 58, 12, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 62, 13, -1, 63, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, -1, 65, 13, -1, 65, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, -57, 13, 0, -56, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 0, -49, 23, 0, -49, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, -48, 12, 0, -27, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, -26, 15, 0, -23, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 8, 12, 0, 9, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 0, 10, 12, 1, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 11, 12, 0, 13, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 14, 12, 2, 14, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 16, 14, 0, 18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 20, 12, 2, 20, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 24, 12, 2, 24, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 25, 12, 0, 30, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 0, 32, 14, 0, 34, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 35, 12, 0, 35, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 36, 12, 0, 39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 0, 40, 12, 0, 40, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 41, 12, 0, 45, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 46, 12, 0, 47, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 55, 12, 0, 55, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 57, 12, 0, 57, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 61, 13, 0, 61, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 62, 13, 0, 63, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 64, 13, 0, 64, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 65, 13, 0, 66, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 67, 12, 0, 67, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 69, 12, 0, 71, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 0, 73, 12, 0, 75, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, -50, 23, 1, -50, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 1, -26, 16, 1, -26, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 1, -25, 13, 1, -24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, -23, 16, 1, -23, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 1, -22, 12, 4, -22, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 2, 14, 1, 2, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 12, 1, 7, 16, 1, 7, Blocks.RED_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 11, 12, 1, 13, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 12, 1, 15, 12, 3, 15, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 19, 12, 2, 20, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 25, 12, 2, 25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 12, 1, 31, 12, 6, 31, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 1, 35, 12, 6, 35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 2, -24, 13, 2, -24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 12, 2, 7, 16, 3, 7, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 3, -36, 12, 3, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 12, 3, -25, 12, 4, -25, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 3, -24, 12, 4, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 3, -21, 12, 4, -21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 3, -20, 12, 4, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 3, 13, 13, 3, 13, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 3, 19, 12, 4, 19, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, -37, 12, 5, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 4, -36, 12, 5, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 12, 4, -35, 12, 5, -35, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 5));
        structure.fillWithBlocks(world, start, 12, 4, -34, 12, 5, -34, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 6));
        structure.fillWithBlocks(world, start, 12, 4, -29, 12, 5, -29, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 4, -28, 12, 4, -27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 4, -26, 12, 4, -26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 4, -7, 13, 4, -6, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 12, 4, 7, 16, 8, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, 16, 14, 4, 18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 5, -46, 12, 6, -46, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 5, -45, 12, 6, -45, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 5, -44, 12, 7, -44, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 5, -43, 12, 5, -42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 5, -41, 12, 5, -41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 5, -38, 12, 5, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 5, -28, 12, 5, -28, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 5, -27, 12, 5, -27, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 5, -26, 12, 5, -26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 5, -25, 12, 5, -25, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 12, 5, -24, 12, 5, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 6, -43, 12, 6, -43, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 6, -42, 12, 7, -42, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 6, -41, 12, 6, -41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 6, -40, 12, 6, -40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 6, -36, 12, 6, -36, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 6, -26, 13, 6, -26, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 6, -25, 12, 6, -24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 6, -23, 12, 6, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 6, 32, 15, 6, 35, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 7, -41, 12, 7, -41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 12, 7, -40, 12, 7, -40, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 12, 7, -24, 12, 7, -24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 12, 7, 8, 13, 7, 9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 8, -41, 12, 8, -41, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 4));
        structure.fillWithBlocks(world, start, 12, 8, 6, 14, 8, 6, Blocks.GLOWSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 8, 8, 15, 8, 8, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 12, 9, 7, 15, 9, 7, Blocks.SPRUCE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 13, -11, -73, 35, -11, 91, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -10, -75, 15, -10, -73, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -10, -72, 13, -7, -72, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, -65, 13, -9, -65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, -64, 13, -9, -57, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, -40, 13, -9, -40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, 0, 15, -9, 2, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, 3, 13, -9, 49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, 50, 14, -9, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, 87, 27, -9, 87, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, 97, 34, -9, 97, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -9, 102, 14, -9, 104, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -8, 23, 20, -8, 69, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -7, 98, 14, -7, 99, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -6, 97, 13, -6, 98, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -5, -71, 14, -5, -70, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, -5, 87, 43, -5, 87, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -5, 88, 16, -5, 91, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, -5, 93, 13, -5, 98, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, -51, 15, -4, -49, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, -44, 21, -4, -36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, -18, 14, -4, -17, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, -16, 13, -4, 10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, 11, 16, -4, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -4, 87, 43, -4, 87, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, -4, 94, 15, -4, 96, Blocks.CAVE_AIR.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, -51, 14, -3, -50, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, -49, 23, -1, -49, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, -48, 15, -3, -48, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, -47, 16, -3, -28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, 7, 14, -3, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, 9, 13, -3, 10, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, 12, 15, -3, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, 55, 13, -3, 56, Blocks.IRON_ORE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, 59, 14, -3, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, 71, 13, -1, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -3, 72, 14, -3, 78, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, -48, 30, -2, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, -30, 15, -2, -28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 40, 14, -2, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 42, 13, -1, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 44, 14, -2, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 46, 13, -1, 46, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 47, 13, 0, 47, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 48, 15, -2, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 51, 13, -1, 52, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 53, 13, -2, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 54, 13, -2, 58, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 59, 14, -2, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 66, 14, -1, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 67, 14, -1, 67, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 68, 13, -1, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 70, 13, 0, 70, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -2, 72, 14, -2, 77, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, -43, 25, -1, -31, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, -30, 15, -1, -28, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, -27, 15, -1, -27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, -1, 15, -1, 1, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 21, 16, -1, 24, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 41, 13, -1, 41, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 44, 14, -1, 45, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 48, 15, -1, 50, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 53, 13, -1, 53, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 54, 13, -1, 58, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 59, 14, -1, 60, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, -1, 72, 13, -1, 76, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, -48, 13, 0, -48, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -47, 13, 0, -47, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -46, 13, 0, -46, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -45, 13, 0, -45, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -44, 13, 0, -44, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -43, 13, 0, -43, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -42, 13, 0, -42, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -41, 13, 0, -41, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -40, 13, 0, -40, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -39, 13, 0, -39, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -38, 13, 0, -38, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -37, 13, 0, -37, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -36, 13, 0, -36, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -35, 13, 0, -35, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -34, 13, 0, -34, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -33, 13, 0, -33, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -32, 13, 0, -32, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -31, 13, 0, -31, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, -30, 13, 0, -30, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 13, 0, -27, 16, 0, -27, Blocks.WATER.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, -22, 16, 0, -19, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, 8, 15, 0, 8, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, 10, 15, 0, 10, Blocks.OAK_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 11, 15, 0, 13, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, 15, 15, 0, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 24, 13, 0, 25, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 26, 13, 0, 29, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 0, 31, 17, 0, 35, Blocks.OAK_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 36, 13, 0, 36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 40, 14, 0, 41, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 42, 13, 0, 43, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 44, 14, 0, 45, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 46, 13, 0, 46, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 48, 13, 0, 50, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 51, 13, 0, 52, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 53, 13, 0, 53, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 54, 13, 0, 58, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 59, 14, 0, 60, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 67, 14, 0, 67, Blocks.GRAVEL.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 68, 13, 0, 69, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 71, 14, 0, 72, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 0, 73, 13, 0, 73, Blocks.STONE_BRICKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, -48, 13, 1, -48, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -46, 13, 1, -46, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -44, 13, 1, -44, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -42, 13, 1, -42, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -40, 13, 1, -40, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -38, 13, 1, -38, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -36, 13, 1, -36, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -34, 13, 1, -34, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -32, 13, 1, -32, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -30, 13, 1, -30, Blocks.CARROTS.getDefaultState().with(CropsBlock.AGE, 7));
        structure.fillWithBlocks(world, start, 13, 1, -20, 14, 1, -19, Blocks.GRASS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 14, 13, 2, 14, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 24, 13, 1, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 30, 13, 6, 30, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 1, 36, 13, 6, 36, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 2, -25, 13, 2, -24, Blocks.GRASS_BLOCK.getDefaultState().with(SnowyDirtBlock.SNOWY, false));
        structure.fillWithBlocks(world, start, 13, 2, 25, 13, 3, 25, Blocks.COBBLESTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 3, -37, 13, 3, -37, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 13, 3, -24, 13, 7, -24, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 13, 3, -23, 13, 7, -23, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 13, 3, -22, 13, 4, -22, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 13, 3, -21, 13, 4, -21, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 13, 3, -20, 13, 4, -20, Blocks.OAK_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, false).with(LeavesBlock.DISTANCE, 3));

    }
    
    
}
