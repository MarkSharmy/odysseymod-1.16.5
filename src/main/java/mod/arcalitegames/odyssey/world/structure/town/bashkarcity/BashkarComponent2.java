package mod.arcalitegames.odyssey.world.structure.town.bashkarcity;

import mod.arcalitegames.buildersaddition.Index;
import mod.arcalitegames.buildersaddition.blocks.Bookshelf;
import mod.arcalitegames.buildersaddition.blocks.Cabinet;
import mod.arcalitegames.buildersaddition.blocks.Counter;
import mod.arcalitegames.buildersaddition.blocks.Cupboard;
import mod.arcalitegames.buildersaddition.blocks.Hedge;
import mod.arcalitegames.buildersaddition.blocks.Shelf;
import mod.arcalitegames.buildersaddition.blocks.Stool;
import mod.arcalitegames.buildersaddition.blocks.VerticalSlab;
import mod.arcalitegames.buildersaddition.state.HedgeState;
import mod.arcalitegames.buildersaddition.state.StoolState;
import mod.arcalitegames.buildersaddition.state.VerticalSlabState;
import mod.arcalitegames.odyssey.blocks.ChairBlock;
import mod.arcalitegames.odyssey.blocks.ModBlocks;
import mod.arcalitegames.odyssey.world.structure.StructureBase;
import net.minecraft.block.BarrelBlock;
import net.minecraft.block.BedBlock;
import net.minecraft.block.Blocks;
import net.minecraft.block.ChainBlock;
import net.minecraft.block.FarmlandBlock;
import net.minecraft.block.FourWayBlock;
import net.minecraft.block.HorizontalBlock;
import net.minecraft.block.LeavesBlock;
import net.minecraft.block.NoteBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.TrapDoorBlock;
import net.minecraft.block.WallBlock;
import net.minecraft.block.WallHeight;
import net.minecraft.state.properties.BedPart;
import net.minecraft.state.properties.DoubleBlockHalf;
import net.minecraft.state.properties.Half;
import net.minecraft.state.properties.NoteBlockInstrument;
import net.minecraft.state.properties.SlabType;
import net.minecraft.state.properties.StairsShape;
import net.minecraft.util.Direction;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class BashkarComponent2
{

	public static BlockPos start;
    public static World world;
    public static StructureBase structure;

    public static void init(World worldIn, BlockPos blockPos, StructureBase structureIn)
    {
        world = worldIn; start = blockPos; structure = structureIn;
    }
    
    public static void generatePart21()
    {
        structure.fillWithBlocks(world, start, 59, 4, -52, 60, 4, -48, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 59, 4, -42, 59, 4, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 59, 5, -11, 60, 5, -11, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 59, 5, -10, 60, 5, -10, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 59, 5, -4, 60, 6, -4, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.NORTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 59, 6, -38, 60, 7, -38, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 6, -25, 64, 6, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 6, -16, 62, 6, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 8, -26, 65, 8, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 9, -26, 62, 9, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 10, -19, 61, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 10, -8, 59, 10, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 11, -8, 59, 14, -8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 11, -7, 59, 14, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 11, -6, 59, 12, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 59, 11, -5, 59, 14, -2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 11, -1, 59, 14, -1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 11, 25, 59, 12, 25, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 59, 13, -21, 61, 13, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 59, 13, -20, 64, 13, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 59, 13, -6, 59, 14, -2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 13, 0, 59, 13, 0, Blocks.ORANGE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 14, -21, 60, 14, -20, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 59, 14, -12, 60, 14, -9, Blocks.PURPLE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 59, 14, 23, 60, 14, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 60, -14, -86, 67, -14, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -14, -78, 61, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -12, -72, 60, -12, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -12, -71, 60, -12, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -12, -37, 62, -12, -31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -12, -30, 67, -12, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -12, -21, 63, -12, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -11, -55, 60, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -11, -54, 60, -9, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -10, -80, 102, -10, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -8, 33, 60, -8, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -7, -68, 74, -7, -54, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -7, 31, 60, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -7, 32, 60, -7, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -6, 32, 60, -6, 33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -6, 61, 61, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -5, 24, 60, -5, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -5, 37, 60, -5, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 60, -4, 24, 60, -2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -4, 32, 60, -4, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -4, 34, 60, -1, 34, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -3, 32, 60, -2, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -1, -41, 73, -1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -1, 18, 66, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -1, 19, 66, -1, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -1, 26, 60, 0, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -1, 31, 61, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 60, -1, 32, 60, -1, 33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 0, 17, 66, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 0, 31, 60, 0, 33, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 60, 1, 16, 60, 1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 1, 17, 60, 3, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 1, 28, 60, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 60, 1, 29, 60, 4, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 1, 30, 60, 4, 30, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 2, -43, 60, 2, -43, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 60, 2, -42, 60, 3, -42, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 60, 2, -41, 60, 3, -41, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 60, 2, -40, 60, 3, -40, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 60, 2, 16, 60, 2, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 3, 16, 60, 3, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 3, 28, 60, 4, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 4, 10, 60, 8, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 4, 27, 60, 4, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 7, -32, 60, 7, -30, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 60, 8, -32, 60, 8, -30, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 60, 9, -13, 61, 9, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 9, -3, 61, 9, -2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 9, -1, 63, 9, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 9, 20, 60, 9, 24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 10, -9, 61, 10, -9, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 60, 10, -8, 63, 10, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 11, -8, 60, 14, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 11, -1, 60, 14, -1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 11, 25, 60, 14, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 13, -31, 60, 13, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 13, -11, 60, 13, -9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 60, 13, 0, 61, 13, 1, Blocks.ORANGE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 14, -7, 63, 14, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 60, 14, -6, 60, 14, -2, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 60, 14, 21, 60, 14, 22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, -14, 70, 67, -14, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -13, -74, 62, -13, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -12, -83, 71, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -12, -72, 62, -12, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -12, -70, 62, -12, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -12, -16, 62, -11, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -11, -55, 63, -11, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -11, -52, 61, -11, 10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -11, 61, 72, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -11, 62, 65, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -10, 73, 63, -10, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -8, 33, 64, -8, 36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -8, 37, 61, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -8, 38, 78, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -8, 56, 74, -8, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -7, 31, 68, -7, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -7, 32, 64, -7, 36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -7, 38, 78, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -6, -70, 62, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -6, -68, 76, -6, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -6, 31, 68, -6, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -6, 32, 64, -6, 36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -6, 38, 78, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -5, 24, 63, -5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -5, 25, 61, -5, 26, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.EAST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, -5, 30, 61, -5, 31, Index.COUNTER_OAK_ANDESITE.getDefaultState().with(Counter.FACING, Direction.EAST).with(Counter.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, -5, 36, 61, -5, 36, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 61, -4, -53, 62, -3, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 61, -4, 19, 62, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -4, 24, 63, -2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -4, 25, 61, -4, 26, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, -4, 30, 61, -4, 31, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, -4, 32, 62, -3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -3, 19, 62, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -2, 19, 62, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -2, 25, 61, -2, 26, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 61, -2, 30, 61, -2, 31, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 61, -2, 32, 68, -2, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -1, -44, 64, -1, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, -1, 26, 61, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 0, 15, 66, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 1, -53, 62, 2, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 61, 1, -47, 61, 2, -47, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 61, 1, 16, 65, 1, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 2, 16, 65, 2, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 3, 16, 66, 3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 4, -52, 62, 4, -51, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, 4, -49, 62, 4, -48, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, 4, -37, 68, 4, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 4, -29, 65, 4, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 4, -15, 62, 4, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 4, 10, 67, 4, 19, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 4, 20, 66, 4, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 5, -50, 61, 7, -50, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 5, -47, 61, 7, -47, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 5, -37, 61, 5, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 5, 19, 61, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 6, -38, 61, 9, -38, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 6, -37, 61, 7, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 6, -36, 61, 7, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 6, -34, 61, 7, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 6, -26, 64, 6, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 6, -2, 62, 6, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 6, 20, 61, 10, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 7, -2, 62, 7, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 8, -49, 61, 8, -47, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 61, 8, -37, 61, 8, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 9, -37, 61, 9, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 9, -31, 62, 9, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 9, -29, 61, 9, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 9, 10, 67, 9, 19, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 10, -36, 61, 10, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 10, -18, 61, 10, -13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 10, 2, 61, 12, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 10, 6, 61, 12, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 10, 10, 62, 10, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 11, -31, 61, 12, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 11, -19, 61, 14, -19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 11, -18, 61, 14, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 11, -17, 61, 12, -15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 11, -14, 61, 14, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 11, -13, 61, 14, -13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 11, -8, 61, 12, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 61, 11, 20, 61, 13, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 11, 23, 61, 12, 23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 61, 11, 24, 61, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 11, 25, 61, 14, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 12, -1, 62, 13, -1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 13, -17, 61, 14, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 13, -8, 62, 14, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 13, 2, 61, 13, 6, Blocks.ORANGE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 13, 23, 61, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 14, -31, 61, 14, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 14, -21, 62, 14, -20, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 61, 14, -5, 62, 14, -3, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, 14, -2, 64, 14, -2, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 61, 14, -1, 62, 14, -1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 14, 20, 61, 14, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 61, 15, -6, 61, 16, -6, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 61, 15, 20, 63, 15, 20, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 62, -14, -78, 63, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -12, -22, 62, -12, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -11, -52, 62, -11, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -11, -51, 62, -11, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -11, 12, 62, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -8, 37, 71, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -7, 37, 80, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -6, 37, 80, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -6, 61, 64, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -1, 26, 68, -1, 26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 62, -1, 27, 62, -1, 31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 62, -1, 32, 67, -1, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 0, -43, 62, 1, -39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 1, -47, 65, 3, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 2, -42, 62, 2, -39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 3, -41, 62, 3, -39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 4, -50, 64, 4, -48, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 62, 4, -40, 62, 4, -39, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 4, -38, 68, 4, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 5, -40, 62, 5, -39, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 62, 5, -31, 65, 5, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 5, -15, 63, 5, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 5, 20, 68, 10, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 5, 25, 72, 5, 25, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 62, 6, -31, 64, 6, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 7, -31, 64, 7, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 8, -36, 62, 8, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 62, 8, -31, 64, 8, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 9, -37, 63, 9, -32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 62, 9, -29, 62, 9, -29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 9, -28, 62, 10, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 9, -18, 64, 9, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 9, -15, 63, 9, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 9, -3, 63, 9, -2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 10, -31, 62, 10, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 10, -1, 64, 10, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 10, 9, 62, 10, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, -31, 62, 14, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, -30, 62, 14, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, -28, 62, 14, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, -27, 62, 12, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 62, 11, -26, 62, 13, -24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, -23, 62, 14, -23, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, -8, 62, 14, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, -1, 62, 14, -1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, 9, 62, 14, 9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 11, 20, 65, 14, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 12, -29, 62, 13, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 12, -2, 64, 12, -2, Index.SHELF_SPRUCE.getDefaultState().with(Shelf.FACING, Direction.NORTH));
        structure.fillWithBlocks(world, start, 62, 13, -27, 62, 14, -24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 13, -21, 63, 13, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 62, 13, -19, 64, 13, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 62, 13, 3, 62, 13, 6, Blocks.ORANGE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 14, -29, 62, 14, -24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 14, -22, 64, 14, -19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 62, 14, -6, 62, 14, -3, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 62, 14, 0, 63, 14, 2, Blocks.ORANGE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 62, 15, -29, 62, 15, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 62, 15, 9, 62, 15, 10, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, -13, -84, 70, -13, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -13, -74, 64, -13, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -12, -72, 65, -12, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -12, -69, 78, -12, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -12, -37, 64, -12, -36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -12, -35, 63, -9, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -12, -31, 72, -12, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -12, -16, 88, -12, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -12, 67, 70, -12, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -11, -65, 94, -9, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -11, -64, 67, -11, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -11, -50, 63, -11, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -11, 14, 63, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -8, -74, 68, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -7, 56, 72, -7, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -6, -70, 64, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -6, 21, 66, -6, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -5, 35, 63, -2, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 63, -4, -53, 63, -4, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -4, 19, 64, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -4, 32, 63, -3, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 63, -3, -53, 63, -3, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -3, 19, 64, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -2, 19, 64, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, -1, 27, 66, -1, 27, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, -1, 28, 65, 0, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, -1, 29, 65, -1, 31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, -1, 33, 64, -1, 35, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 0, -51, 64, 0, -51, ModBlocks.CHAIR.get().getDefaultState().with(ChairBlock.FACING, Direction.SOUTH));
        structure.fillWithBlocks(world, start, 63, 0, -49, 64, 0, -49, ModBlocks.CHAIR.get().getDefaultState().with(ChairBlock.FACING, Direction.NORTH));
        structure.fillWithBlocks(world, start, 63, 0, -43, 64, 0, -43, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 63, 0, -42, 79, 0, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 0, 26, 63, 2, 26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 63, 1, -53, 67, 4, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 1, -42, 64, 1, -42, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 63, 1, -41, 78, 1, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 1, 28, 63, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 63, 2, -46, 63, 2, -46, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 2, -41, 64, 2, -41, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 63, 2, -40, 78, 2, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 3, -40, 64, 3, -40, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 63, 3, -39, 78, 3, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 3, 26, 65, 3, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 4, -52, 67, 4, -48, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 4, -39, 64, 4, -39, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 63, 4, -15, 70, 4, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 4, -4, 64, 4, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 4, 26, 65, 4, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 5, -11, 63, 5, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 5, -4, 64, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 5, 16, 65, 5, 16, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 63, 5, 26, 63, 5, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 6, -15, 63, 7, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 6, -4, 63, 6, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 6, -2, 63, 7, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 6, 6, 63, 6, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 7, -16, 63, 7, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 7, -4, 64, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 7, 6, 72, 7, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 7, 7, 65, 7, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 7, 19, 65, 7, 19, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.NORTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 8, -36, 63, 8, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 63, 8, -33, 63, 8, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 63, 8, -11, 63, 9, -8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 8, -4, 64, 8, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 8, 19, 64, 8, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 9, -31, 69, 10, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 9, -30, 68, 9, -24, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 9, -23, 65, 9, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 9, -7, 66, 9, -2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 10, -24, 65, 12, -24, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 10, -23, 65, 10, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 10, -7, 71, 10, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 10, 0, 63, 10, 1, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 63, 10, 9, 68, 10, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 11, -31, 63, 14, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 11, -23, 65, 13, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 11, -8, 63, 12, -7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 11, -1, 63, 14, -1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 11, 9, 63, 14, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 13, -22, 64, 13, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 63, 13, -8, 63, 13, -7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 13, -6, 69, 13, -6, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 14, -30, 68, 14, -24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 14, -23, 65, 14, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 14, -6, 63, 14, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 14, -4, 64, 14, -3, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 63, 14, 3, 63, 14, 6, Blocks.ORANGE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 63, 14, 10, 63, 14, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, -14, -78, 65, -14, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -12, -35, 74, -12, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -11, -81, 80, -11, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -11, -50, 67, -11, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -11, -49, 87, -11, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -11, -11, 71, -11, -3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -11, 11, 73, -11, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -11, 24, 64, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -7, -53, 64, -7, -53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -7, -52, 64, -5, -50, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -7, -49, 68, -7, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -6, -71, 66, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -6, -49, 68, -6, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -5, 27, 64, -5, 29, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, -4, -53, 64, -3, -51, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -4, -50, 64, -2, -50, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -4, 32, 64, -1, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, -2, -52, 64, -1, -51, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 0, 32, 65, 0, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 64, 1, 28, 64, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 64, 2, -46, 64, 2, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, 4, -6, 65, 4, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 4, -2, 71, 4, 5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 4, 6, 67, 4, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 5, -53, 65, 5, -53, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, 5, -33, 64, 7, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 64, 5, 6, 67, 5, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 5, 26, 64, 5, 26, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, 5, 28, 65, 5, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, 6, -16, 70, 7, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 6, -4, 65, 6, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 6, 6, 70, 7, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 6, 7, 66, 6, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 7, 1, 64, 7, 2, Index.SHELF_OAK.getDefaultState().with(Shelf.FACING, Direction.EAST));
        structure.fillWithBlocks(world, start, 64, 8, 6, 64, 8, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 9, -33, 64, 9, -32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 64, 9, -15, 70, 9, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 9, -1, 69, 9, 5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 9, 6, 68, 10, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 9, 7, 64, 9, 8, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 64, 9, 9, 68, 10, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 10, -15, 64, 10, -13, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 64, 10, -6, 66, 12, -6, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 10, 0, 64, 10, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 10, 5, 64, 10, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 11, -31, 66, 12, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 64, 11, -7, 66, 13, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 11, -1, 64, 14, -1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 11, 0, 64, 12, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 64, 11, 3, 64, 14, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 11, 5, 64, 14, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 11, 6, 64, 14, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 11, 9, 66, 12, 9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 64, 12, 4, 64, 13, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 13, -31, 68, 14, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 13, -10, 66, 13, -10, Blocks.PURPLE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 13, 0, 64, 14, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 13, 7, 64, 13, 8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 64, 13, 9, 67, 14, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 14, -9, 66, 14, -9, Blocks.PURPLE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 64, 14, -8, 66, 14, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 64, 14, 7, 65, 14, 8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 64, 14, 10, 64, 14, 12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, 14, 13, 64, 14, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 64, 15, -31, 66, 15, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 64, 15, -8, 66, 15, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 65, -13, -74, 65, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -12, -37, 74, -12, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -12, 66, 73, -12, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -11, 24, 67, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -11, 27, 65, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -8, 33, 71, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -7, -74, 70, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -7, -53, 71, -7, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -7, -44, 65, -5, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -7, -43, 79, -7, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -7, 21, 66, -7, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -7, 33, 72, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -6, -52, 70, -6, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -6, 33, 72, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -6, 61, 67, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -5, -55, 65, -5, -54, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 65, -5, 27, 65, -5, 29, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 65, -4, -53, 66, -3, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -4, 19, 66, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -3, 19, 66, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -3, 32, 66, -2, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -2, -56, 66, -2, -56, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 65, -2, -55, 66, -2, -54, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 65, -2, 19, 66, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -2, 35, 66, -2, 35, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -1, -56, 67, -1, -54, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 65, -1, -44, 65, 4, -44, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -1, -43, 73, -1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, -1, 33, 65, -1, 34, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 0, -46, 65, 0, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 0, -43, 79, 0, -25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 0, 26, 65, 2, 26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 65, 1, -46, 65, 2, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 1, -43, 79, 1, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 1, 28, 65, 2, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 65, 2, -43, 79, 2, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 3, -46, 65, 4, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 3, -43, 79, 3, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 4, -47, 65, 4, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 4, -43, 68, 4, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 4, -4, 66, 4, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 5, -42, 65, 5, -40, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 65, 5, -4, 66, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 5, 26, 65, 5, 28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 6, -31, 65, 7, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 6, -29, 65, 8, -29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 6, -28, 65, 7, -26, Index.HEDGE_OAK.getDefaultState().with(Hedge.STATE, HedgeState.STRAIGHT_X).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 6, -25, 65, 7, -24, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 65, 6, -23, 65, 7, -21, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 6, -20, 65, 7, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 6, -19, 65, 6, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 7, -19, 65, 7, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 7, -4, 66, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 8, -31, 65, 8, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 8, -28, 65, 8, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 8, -4, 66, 8, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 8, 6, 68, 10, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 8, 7, 65, 8, 8, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 65, 8, 9, 68, 10, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 8, 19, 65, 8, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 10, -22, 65, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 10, -16, 65, 10, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 11, -22, 65, 13, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 11, -19, 65, 14, -19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 11, -16, 65, 14, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 11, -15, 65, 14, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 11, -14, 65, 12, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 65, 11, -13, 65, 12, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 11, -11, 65, 14, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 11, 6, 65, 14, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 13, -14, 65, 14, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 13, 7, 66, 13, 8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 65, 14, -22, 65, 14, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 14, -5, 69, 14, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 14, -4, 67, 14, -2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 14, -1, 65, 14, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 14, 1, 66, 14, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 14, 3, 65, 14, 3, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 14, 4, 65, 14, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 14, 10, 67, 14, 10, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 14, 11, 66, 14, 12, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 65, 14, 13, 67, 14, 13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 14, 14, 67, 14, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 65, 15, -15, 65, 15, -12, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 65, 15, -1, 65, 15, 0, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 65, 15, 10, 66, 15, 10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 65, 16, -1, 65, 16, 0, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 65, 17, -1, 65, 17, 0, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 66, -14, -78, 66, -13, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -13, -85, 73, -13, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -13, -74, 107, -13, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -13, 67, 68, -13, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -12, -72, 66, -7, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -12, -71, 80, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -11, -82, 83, -11, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -11, 27, 68, -11, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -11, 30, 66, -11, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -11, 63, 76, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -7, -75, 72, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -7, -44, 70, -7, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -7, 32, 67, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -6, 32, 69, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -5, 24, 73, -5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -5, 32, 71, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -5, 35, 66, -3, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 66, -4, 24, 69, -2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -4, 32, 66, -1, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -2, 33, 66, -2, 35, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -1, -44, 70, -1, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, -1, 28, 66, -1, 31, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 0, -44, 70, 0, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 1, -44, 70, 4, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 1, 15, 67, 1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 1, 18, 66, 2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 1, 25, 66, 4, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 2, 15, 67, 2, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 4, -47, 68, 4, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 4, -29, 73, 4, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 4, -19, 68, 4, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 4, -6, 66, 4, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 5, -31, 67, 5, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 5, -19, 66, 5, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 6, -31, 68, 8, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 6, -30, 68, 8, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 6, -19, 71, 7, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 6, -18, 66, 7, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 6, -4, 67, 6, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 7, 7, 66, 7, 8, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 66, 7, 9, 68, 9, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 8, -19, 66, 9, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 9, -23, 68, 9, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 10, -19, 69, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 10, -18, 66, 10, -17, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 66, 10, -16, 71, 10, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 10, -11, 66, 10, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 11, -24, 66, 12, -24, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 11, -19, 68, 13, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 11, -16, 68, 13, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 11, -11, 66, 14, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 11, 6, 66, 12, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 66, 11, 20, 66, 12, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 66, 13, 6, 67, 14, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 13, 20, 67, 14, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 14, -23, 68, 14, -21, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 14, -20, 67, 14, -20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 14, -19, 68, 14, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 14, -16, 70, 14, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 14, -15, 68, 14, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 14, -12, 70, 14, -12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 66, 14, -1, 67, 14, 3, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 14, 4, 66, 14, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 66, 14, 7, 67, 14, 8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 66, 15, -16, 70, 15, -16, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 66, 15, -1, 66, 15, 0, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 67, -14, -78, 102, -14, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -13, -76, 101, -13, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -12, -72, 79, -12, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -11, 30, 70, -11, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -11, 34, 67, -11, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -8, -76, 74, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -7, 21, 69, -5, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -7, 22, 68, -7, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -7, 24, 69, -5, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -7, 25, 68, -7, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -6, -71, 69, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -6, 22, 68, -6, 23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -6, 25, 68, -6, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -4, 19, 68, -4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -4, 32, 67, -3, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 67, -3, -53, 68, -3, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -3, 19, 68, -3, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -2, -55, 67, -2, -54, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 67, -2, 19, 68, -2, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -1, -52, 70, -1, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -1, 18, 72, -1, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 67, -1, 27, 68, -1, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 0, -47, 67, 0, -45, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 67, 0, 25, 67, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 1, 17, 73, 2, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 1, 25, 67, 4, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 3, 16, 68, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 3, 18, 72, 3, 24, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 67, 4, -6, 69, 4, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 4, 20, 68, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 4, 21, 71, 4, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 5, -44, 69, 5, -44, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 67, 5, -19, 74, 5, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 5, -17, 67, 6, -17, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 67, 5, -16, 71, 5, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 5, -7, 71, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 5, 5, 68, 6, 5, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.NORTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 67, 5, 19, 68, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 6, -7, 71, 6, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 6, 7, 67, 6, 8, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 67, 7, -7, 71, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 8, -19, 69, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 8, -7, 67, 8, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 9, -18, 68, 9, -17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 67, 9, -16, 71, 10, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 9, -7, 71, 10, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 9, -6, 69, 9, 5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 10, -18, 68, 10, -17, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 67, 10, -11, 67, 10, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 10, -8, 67, 10, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 10, -2, 67, 10, -1, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 67, 11, -31, 68, 12, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 11, -11, 67, 14, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 11, -10, 67, 14, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 11, -8, 67, 14, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 11, -7, 67, 14, -7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 11, 6, 67, 14, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 11, 9, 67, 14, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 11, 20, 67, 14, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 12, -9, 67, 13, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 13, 7, 67, 13, 8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 67, 14, -9, 67, 14, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 67, 14, -6, 69, 14, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 67, 14, 11, 67, 14, 13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 67, 15, -20, 67, 15, -20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 67, 15, -6, 70, 15, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 67, 15, 13, 68, 15, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 67, 16, -20, 67, 16, -20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 68, -14, -86, 74, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -14, -79, 69, -13, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -14, 70, 73, -14, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -11, -64, 94, -9, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -11, -63, 71, -11, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -11, -53, 69, -11, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -11, -50, 88, -11, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -11, 24, 84, -11, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -11, 41, 68, -11, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -7, 32, 76, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -6, -72, 68, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -6, 61, 69, -6, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -5, -53, 71, -5, -53, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -5, 22, 68, -5, 23, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 68, -4, -53, 68, -3, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -4, 32, 71, -3, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, -1, -55, 69, -1, -54, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 68, -1, 32, 71, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 0, -47, 68, 0, -47, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 0, 26, 68, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 1, -53, 70, 1, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 1, 15, 69, 1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 1, 26, 68, 3, 28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 1, 29, 68, 2, 29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 68, 1, 30, 68, 2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 1, 32, 68, 4, 32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 2, -53, 68, 3, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 68, 2, 15, 69, 2, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 3, 25, 72, 3, 25, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 3, 29, 68, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 4, -53, 70, 4, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 4, -52, 70, 4, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 4, 6, 70, 4, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 4, 11, 68, 4, 15, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 4, 16, 72, 4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 4, 27, 68, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 5, -31, 68, 5, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 5, 6, 70, 5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 5, 7, 68, 5, 8, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 68, 5, 10, 68, 10, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 5, 16, 68, 9, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 8, -7, 71, 10, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 8, -6, 69, 8, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 8, -3, 74, 8, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 8, 11, 68, 8, 15, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 9, 11, 68, 10, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 10, -13, 70, 10, -13, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 10, 1, 68, 10, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, -7, 70, 13, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 1, 69, 12, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 2, 68, 14, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 3, 68, 14, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 4, 68, 12, 4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 68, 11, 5, 68, 14, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 6, 68, 14, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 9, 68, 14, 9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 10, 68, 14, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 18, 68, 12, 18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 68, 11, 19, 68, 14, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 11, 20, 68, 14, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 13, -18, 68, 14, -18, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 68, 13, 1, 69, 14, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 13, 4, 68, 14, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 13, 18, 68, 14, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 14, -11, 70, 14, -11, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 14, -10, 69, 14, -8, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 14, -7, 70, 14, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 68, 14, -4, 68, 14, -4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 14, -2, 69, 14, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 15, -22, 68, 15, -22, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 68, 15, -21, 68, 15, -21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 68, 15, -12, 70, 15, -12, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 68, 15, 15, 68, 15, 16, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 68, 16, -21, 68, 16, -21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 69, -13, 67, 100, -13, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -13, 68, 71, -13, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -12, -84, 70, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -11, -51, 89, -11, -31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -11, 41, 71, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -11, 44, 69, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -11, 62, 80, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -7, 22, 69, -5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -7, 26, 69, -7, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -7, 27, 69, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -6, 26, 69, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -4, -53, 69, -3, -53, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 69, -4, 18, 69, -4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -4, 19, 69, -2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -3, 18, 69, -3, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -2, 18, 69, -2, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -2, 32, 69, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -1, 26, 69, 0, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, -1, 27, 73, -1, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 0, -47, 69, 0, -45, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 69, 0, 18, 70, 0, 18, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 69, 0, 19, 70, 0, 19, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 69, 1, 26, 69, 3, 26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 1, 32, 70, 2, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 2, -53, 70, 3, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 3, 16, 70, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 3, 28, 69, 3, 30, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 69, 3, 32, 73, 4, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, -43, 79, 4, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, -42, 74, 4, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, -36, 75, 4, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, -19, 71, 4, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, -16, 69, 4, -7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, 11, 70, 5, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, 12, 71, 4, 14, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, 15, 73, 4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, 26, 73, 4, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 4, 27, 73, 4, 31, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 69, 5, -30, 75, 5, -30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 5, 10, 69, 8, 10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 69, 5, 15, 73, 5, 15, Blocks.SANDSTONE.getDefaultState());

    }
    
    public static void generatePart22()
    {
        structure.fillWithBlocks(world, start, 69, 5, 16, 70, 5, 16, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 69, 5, 18, 69, 5, 19, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 69, 6, -30, 72, 7, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 6, 11, 69, 9, 11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 6, 15, 69, 9, 15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 8, -33, 70, 8, -32, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 8, -31, 69, 10, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 8, 6, 72, 8, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 9, -18, 70, 9, -17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 69, 9, 7, 69, 9, 8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 69, 9, 9, 70, 9, 10, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 9, 12, 69, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 10, -18, 70, 10, -17, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 69, 10, 1, 70, 10, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 10, 7, 70, 10, 8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 69, 10, 12, 69, 15, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 69, 11, -31, 69, 14, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 11, -30, 69, 14, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 11, -29, 69, 12, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 69, 11, -26, 69, 14, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 11, -21, 69, 12, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 69, 11, -20, 69, 14, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 11, -19, 69, 14, -19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 11, -16, 69, 12, -16, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 69, 11, 13, 69, 15, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 69, 13, -29, 69, 14, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 13, -16, 70, 14, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 69, 14, -15, 70, 14, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 69, 14, -4, 69, 14, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 69, 15, -29, 69, 15, -27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 69, 15, -21, 69, 15, -21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 69, 15, -10, 69, 15, -10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 69, 15, -9, 69, 15, -9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 69, 16, -10, 69, 16, -10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 69, 16, -9, 69, 16, -9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 70, -14, -79, 100, -14, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -11, -52, 90, -11, -31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -11, 44, 71, -11, 45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -11, 46, 70, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -9, -79, 98, -9, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -7, 21, 74, -7, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -7, 26, 72, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -7, 27, 75, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -6, -72, 73, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -6, 21, 73, -6, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -6, 27, 75, -6, 32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -6, 61, 70, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -5, 22, 73, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -4, -53, 70, -3, -53, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -4, 18, 72, -4, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -4, 26, 76, -2, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -3, 18, 72, -3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -3, 27, 70, -3, 31, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 70, -2, 18, 72, -2, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -2, 27, 70, -2, 31, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 70, -2, 32, 71, -2, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, -1, 26, 72, -1, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 1, 15, 71, 1, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 2, 15, 71, 2, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 4, -16, 70, 4, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 4, -6, 70, 4, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 4, -3, 75, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 5, -44, 70, 5, -44, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 70, 5, -33, 70, 7, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 70, 6, -8, 70, 7, -8, Index.HEDGE_SPRUCE.getDefaultState().with(Hedge.STATE, HedgeState.NONE).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 70, 6, 11, 70, 9, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 6, 15, 70, 9, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 8, -30, 74, 9, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 8, -19, 73, 8, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 8, -6, 70, 8, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 8, -5, 70, 10, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 9, -31, 73, 9, -31, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 9, -29, 70, 9, -20, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 9, -2, 71, 9, 2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 9, 3, 70, 9, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 70, 9, 6, 72, 9, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 9, 12, 72, 9, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 70, 10, -6, 70, 10, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 11, -16, 70, 14, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 11, -6, 70, 13, -6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 11, -5, 70, 14, -5, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 11, -4, 70, 14, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 11, -3, 70, 12, -2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 70, 11, -1, 70, 12, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 70, 11, 0, 70, 14, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 11, 1, 70, 14, 1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 13, -3, 70, 14, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 70, 14, -9, 70, 14, -8, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 70, 15, -11, 70, 15, -11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 71, -12, 20, 74, -12, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -12, 25, 71, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -11, -53, 92, -11, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -11, -2, 74, -11, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -11, 2, 71, -7, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -11, 46, 71, -11, 46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -11, 47, 71, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -10, -81, 72, -10, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -7, -44, 76, -5, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -6, -52, 75, -6, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -6, -47, 73, -6, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -6, 61, 97, -6, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -5, -56, 71, -5, -54, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 71, -5, -52, 71, -5, -47, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -5, -45, 71, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -4, -53, 71, -3, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -4, -52, 71, -3, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -4, -45, 71, -4, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -3, -46, 71, -3, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -2, -52, 71, 0, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -2, -44, 75, -2, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -2, -43, 72, -2, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, -1, -44, 72, -1, -44, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 0, -44, 71, 4, -44, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 0, 15, 73, 0, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 1, -53, 71, 4, -53, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 1, -52, 71, 4, -49, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 1, -48, 71, 2, -47, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 71, 1, -46, 71, 2, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 1, 32, 71, 2, 32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 71, 3, -48, 71, 4, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 3, 16, 72, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 4, -16, 72, 4, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 4, -14, 75, 4, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 4, -9, 73, 4, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 4, 7, 74, 4, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 4, 11, 71, 4, 14, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 5, -15, 71, 5, -14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 5, -10, 71, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 6, -16, 71, 7, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 6, -15, 71, 7, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 6, -10, 71, 6, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 6, 15, 71, 7, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 71, 6, 24, 71, 6, 24, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 71, 7, -10, 71, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 7, 11, 72, 8, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 8, -33, 72, 8, -32, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 8, -15, 71, 10, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 8, -6, 71, 8, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 8, 8, 73, 8, 8, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 8, 15, 72, 9, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 9, -29, 71, 9, -25, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 71, 9, -24, 72, 9, -23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 9, -22, 73, 9, -20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 71, 9, -19, 73, 9, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 9, -18, 72, 9, -17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 71, 9, -6, 72, 9, -4, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 9, 3, 71, 9, 3, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 71, 9, 5, 72, 9, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 71, 9, 7, 73, 9, 7, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 9, 9, 71, 9, 10, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 9, 11, 72, 9, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 10, -29, 71, 10, -29, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 71, 10, -18, 72, 10, -17, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 71, 10, -1, 71, 13, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 71, 10, 0, 71, 13, 0, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 71, 11, -16, 71, 14, -16, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 11, -15, 71, 14, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 11, -14, 71, 12, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 71, 11, -13, 71, 14, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 11, -12, 71, 12, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 11, -10, 71, 14, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 11, -9, 71, 12, -9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 71, 11, -8, 71, 14, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 11, -7, 71, 14, -7, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 13, -14, 71, 14, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 13, -12, 71, 14, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 13, -9, 71, 14, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 71, 14, -1, 71, 14, 0, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 71, 15, -15, 71, 15, -13, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 71, 15, -12, 71, 15, -11, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 72, -13, 68, 72, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -13, 69, 72, -13, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -12, -83, 82, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -12, 25, 73, -12, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -12, 27, 72, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, -63, 93, -9, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, -62, 73, -11, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, -54, 94, -11, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, -11, 72, -10, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, -9, 84, -11, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, 6, 72, -7, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, 41, 78, -11, 47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -11, 48, 72, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -8, -53, 76, -8, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -8, 33, 76, -8, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -7, -53, 77, -7, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -7, -47, 74, -7, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -5, -49, 72, -2, -49, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 72, -5, -48, 76, -5, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -5, 33, 72, -5, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -4, -48, 72, -1, -48, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -4, 33, 72, -1, 33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -4, 34, 72, -1, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -4, 35, 72, -3, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 72, -4, 36, 72, -1, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -4, 37, 72, -1, 37, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -2, -51, 72, -2, -51, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -2, -47, 72, -2, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 72, -2, 35, 72, -1, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -1, -50, 72, -1, -49, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -1, -47, 72, -1, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, -1, 32, 72, -1, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 0, 22, 72, 1, 23, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.WEST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 72, 0, 32, 74, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 1, -10, 73, 1, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 1, 15, 72, 2, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 1, 32, 73, 2, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 2, -10, 73, 2, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 3, -10, 73, 3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 4, -19, 76, 4, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 4, -2, 74, 4, 0, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 4, 1, 72, 4, 5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 4, 6, 77, 4, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 4, 12, 72, 4, 14, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 4, 21, 72, 4, 23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 4, 25, 72, 4, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 5, -43, 78, 5, -43, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 72, 5, -16, 74, 5, -16, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 72, 5, -15, 78, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 5, -9, 73, 5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 5, 6, 73, 5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 5, 11, 72, 5, 11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 5, 16, 72, 6, 16, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 72, 5, 26, 73, 5, 26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 72, 6, -19, 72, 7, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 72, 6, -15, 74, 8, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 6, -9, 73, 7, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 6, -3, 74, 7, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 6, 6, 72, 7, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 6, 11, 72, 9, 11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 6, 15, 72, 9, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 8, -9, 77, 8, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 8, -8, 72, 8, -7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 72, 8, -5, 72, 8, -4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 72, 9, -29, 73, 9, -29, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 72, 9, -28, 74, 9, -25, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 72, 9, -16, 74, 9, -16, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 72, 9, -14, 72, 9, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 9, -8, 72, 9, -4, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 9, -3, 74, 9, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 9, -2, 72, 9, -2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 72, 9, -1, 72, 9, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 72, 9, 1, 72, 9, 2, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 9, 3, 72, 9, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 72, 10, -31, 73, 10, -31, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 72, 10, -30, 73, 10, -30, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 72, 10, -29, 73, 10, -29, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 72, 10, -28, 73, 10, -28, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 72, 10, -16, 75, 10, -16, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 72, 10, -1, 72, 13, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 72, 10, 0, 72, 13, 0, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 72, 11, -30, 73, 11, -30, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 72, 11, -29, 73, 11, -29, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 72, 12, -29, 73, 12, -29, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 73, -13, 68, 74, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -13, 70, 78, -13, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -12, 27, 78, -7, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -12, 75, 82, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -11, -55, 95, -11, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -11, -12, 81, -11, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -11, 8, 73, -7, 36, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -11, 48, 73, -11, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -11, 49, 73, -11, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -11, 61, 85, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -7, -75, 79, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -7, 56, 82, -7, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -6, 33, 75, -6, 36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -5, 34, 73, -5, 35, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, -5, 37, 76, -5, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -4, -48, 75, -2, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -4, -43, 73, -3, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -4, -41, 73, -2, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -4, -35, 73, -4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -4, 19, 73, -2, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -4, 22, 73, -2, 24, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 73, -4, 25, 73, -4, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -4, 37, 73, -1, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -3, -35, 73, -3, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -3, 25, 73, -3, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -2, -51, 74, -2, -50, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -2, -43, 73, -1, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -2, -35, 73, -2, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -2, 25, 73, -2, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -1, -48, 75, -1, -48, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -1, -47, 74, -1, -45, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, -1, -44, 75, -1, -44, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -1, 18, 73, 0, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -1, 32, 74, -1, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, -1, 34, 75, -1, 36, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 0, -24, 78, 0, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 0, -11, 74, 0, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 1, 15, 73, 2, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 1, 26, 74, 2, 26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 3, 18, 73, 4, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 3, 26, 74, 3, 26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 4, 1, 79, 4, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 5, -38, 73, 5, -38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 5, -35, 74, 5, -35, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 73, 5, 1, 73, 5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 5, 11, 73, 5, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 5, 21, 73, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, -30, 73, 7, -30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 73, 6, -19, 73, 7, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 1, 73, 8, 1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 2, 73, 7, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 4, 73, 7, 4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 73, 6, 5, 73, 7, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 6, 73, 9, 6, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 11, 73, 9, 11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 12, 73, 9, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 13, 73, 7, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 73, 6, 14, 73, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 15, 73, 9, 15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 21, 73, 9, 21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 22, 73, 9, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 23, 73, 7, 23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 73, 6, 24, 73, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 6, 25, 73, 9, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 7, -38, 73, 8, -38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 7, -14, 74, 7, -14, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 8, -14, 76, 8, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 8, -8, 75, 8, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 73, 8, -7, 74, 8, -7, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 73, 8, 2, 73, 8, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 8, 13, 73, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 8, 23, 73, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 9, -38, 73, 9, -38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 9, -24, 73, 9, -23, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 9, -18, 74, 9, -16, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 73, 9, -15, 77, 9, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 9, -14, 73, 9, -12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 9, -11, 73, 9, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 9, -9, 77, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 9, -7, 75, 9, -7, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 73, 9, -5, 73, 9, -4, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 9, -1, 74, 9, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 73, 9, 1, 74, 9, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 9, 3, 73, 9, 5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 73, 10, -18, 75, 10, -16, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 74, -14, 70, 75, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -14, 72, 78, -14, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -13, -84, 81, -13, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -13, 76, 81, -13, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -12, 25, 76, -12, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -12, 28, 79, -12, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -12, 34, 74, -12, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -12, 36, 78, -12, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -12, 41, 74, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -12, 66, 82, -12, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, -62, 74, -11, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, -61, 74, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, -56, 95, -11, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, -13, 78, -11, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, 12, 74, -7, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, 18, 85, -11, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, 48, 75, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, 50, 75, -11, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -11, 74, 83, -11, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -10, -81, 99, -10, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -8, -68, 93, -8, -49, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -7, 18, 77, -5, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -7, 19, 79, -7, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -7, 33, 75, -7, 36, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, -72, 77, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, -47, 75, -6, -45, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, -43, 75, -6, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, -41, 79, -6, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, -35, 80, -6, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, 3, 79, -6, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, 19, 79, -6, 25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -6, 26, 76, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -5, -43, 75, -5, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -5, -39, 74, -5, -38, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 74, -5, -35, 80, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -5, 7, 79, -5, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -4, -43, 79, 1, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -4, -42, 79, -2, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -4, -35, 79, -2, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -4, -34, 79, -4, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -4, 7, 78, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -4, 18, 77, -1, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -4, 37, 74, -3, 37, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 74, -3, -34, 80, -3, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -3, 6, 78, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -2, -49, 75, -2, -49, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -2, -34, 80, -2, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -2, 6, 78, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -2, 37, 75, -1, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, -42, 79, 3, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, -41, 79, -1, -36, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, -35, 80, -1, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, -27, 79, -1, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, -11, 74, 0, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, 15, 77, -1, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, 26, 74, 0, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, -1, 27, 77, -1, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 0, -46, 74, 1, -46, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 74, 0, -45, 74, 1, -45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 74, 0, -44, 74, 1, -44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 74, 0, 21, 78, 0, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 0, 25, 74, 0, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 0, 29, 74, 0, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 0, 36, 74, 0, 36, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 74, 1, -10, 75, 1, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, -4, 74, 1, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 1, 74, 1, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 14, 83, 2, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 21, 77, 2, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 25, 79, 2, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 27, 74, 4, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 29, 74, 4, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 30, 74, 2, 30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 74, 1, 31, 74, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 1, 32, 74, 4, 32, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 2, -10, 75, 2, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 2, -8, 74, 4, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 2, -3, 74, 2, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 2, 1, 74, 2, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 2, 28, 74, 3, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 3, -10, 74, 3, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 3, -3, 74, 3, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 3, -2, 74, 3, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 3, 1, 80, 3, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 3, 21, 77, 5, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 3, 25, 77, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 3, 30, 74, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 4, -29, 74, 4, -25, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 4, -24, 76, 4, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 4, -20, 79, 4, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 4, 15, 77, 4, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 4, 28, 74, 4, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 5, -39, 74, 5, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 5, -24, 74, 5, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 5, -20, 74, 5, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 5, 1, 75, 5, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 5, 3, 74, 5, 5, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 74, 6, -30, 74, 9, -30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 6, -24, 74, 8, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 6, -20, 74, 9, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 6, -19, 74, 9, -19, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 6, 1, 74, 7, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 6, 21, 74, 9, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 6, 25, 74, 9, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 7, -39, 74, 8, -39, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 7, -37, 74, 8, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 7, -28, 74, 7, -26, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 7, -21, 74, 8, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 7, -9, 75, 8, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 8, -28, 74, 8, -26, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 74, 8, 2, 78, 8, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 74, 8, 3, 78, 8, 3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 74, 8, 15, 75, 8, 19, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 9, -39, 74, 9, -39, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 9, -29, 74, 9, -25, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 9, -22, 74, 9, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 9, -13, 75, 9, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 9, -12, 75, 9, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 9, -8, 75, 9, -7, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 74, 9, -4, 75, 9, -4, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 9, -2, 74, 9, 0, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 74, 9, 2, 75, 9, 3, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 74, 9, 20, 77, 9, 20, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 74, 9, 22, 76, 9, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, -14, -86, 79, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -14, 77, 79, -14, 77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -13, 68, 76, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -12, -37, 81, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -12, -30, 76, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -12, -27, 77, -12, -25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -12, -24, 75, -12, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -12, 21, 78, -12, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -12, 35, 79, -12, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -12, 43, 75, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -11, -62, 76, -11, -61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -11, -60, 75, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -11, -58, 94, -11, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -11, 12, 76, -11, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -11, 14, 75, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -8, -76, 82, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -8, 56, 87, -8, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -7, -68, 95, -7, -48, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -7, -47, 75, -7, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -5, -51, 75, -3, -51, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 75, -5, -39, 75, -5, -38, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 75, -4, 37, 75, -1, 37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -2, -51, 75, -2, -49, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -1, -47, 75, -1, -46, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, -1, -11, 75, -1, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -1, -8, 75, 0, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -1, -3, 79, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -1, 3, 79, -1, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -1, 26, 79, -1, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, -1, 33, 75, -1, 33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 0, -46, 75, 1, -46, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 75, 0, -45, 75, 1, -45, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 0, -44, 75, 1, -44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 75, 0, -11, 75, 0, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 0, 15, 76, 1, 15, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.SOUTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 75, 0, 19, 76, 0, 19, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 75, 0, 20, 76, 0, 20, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 75, 0, 25, 79, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 0, 32, 76, 0, 32, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 75, 0, 35, 75, 0, 35, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 75, 1, -11, 77, 1, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 1, -4, 75, 1, -2, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, 1, -1, 75, 2, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 1, 2, 81, 1, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 1, 10, 78, 1, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 2, -11, 77, 2, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 2, -8, 75, 2, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 2, -4, 75, 2, -2, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.EAST).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, 2, 2, 81, 2, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 2, 9, 79, 2, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 3, -11, 76, 3, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 3, -9, 75, 3, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 3, 26, 77, 3, 28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 75, 3, 29, 75, 3, 30, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 75, 4, -42, 75, 4, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 4, -40, 79, 4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 4, -28, 78, 4, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 4, -9, 78, 5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 4, -8, 79, 4, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 4, -2, 75, 5, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 4, 26, 78, 4, 29, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 75, 4, 30, 76, 4, 31, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 75, 5, -29, 75, 5, -24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, -30, 75, 9, -30, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, -29, 75, 9, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, -24, 75, 9, -24, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, -15, 75, 7, -15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 75, 6, -9, 75, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, -3, 75, 9, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, -2, 75, 7, -2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, -1, 75, 7, -1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 75, 6, 0, 75, 7, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, 1, 75, 9, 1, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 6, 21, 75, 7, 21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 75, 6, 23, 75, 8, 23, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, 6, 25, 75, 7, 25, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 75, 7, -38, 75, 8, -38, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, 8, -15, 76, 8, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 8, -2, 75, 8, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 8, 21, 76, 9, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 8, 25, 76, 9, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 9, -23, 75, 9, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 75, 9, -19, 75, 9, -16, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 75, 9, -14, 75, 9, -13, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, 9, -10, 76, 9, -10, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 75, 9, -2, 75, 9, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 75, 10, -23, 77, 10, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 75, 10, -20, 75, 10, -16, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 75, 10, -3, 75, 10, -3, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 76, -14, 70, 77, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -12, -52, 76, -12, -50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -12, -49, 79, -12, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -12, -45, 76, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -12, -28, 81, -12, -23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -12, -22, 76, -12, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -12, 34, 78, -12, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -12, 44, 76, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -11, -60, 93, -11, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -11, 14, 80, -11, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -11, 15, 77, -11, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -11, 51, 76, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -11, 60, 88, -11, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -10, 73, 82, -10, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -7, -47, 79, -7, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -7, 30, 77, -7, 31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -7, 33, 77, -7, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -7, 36, 81, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -6, -52, 86, -6, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -6, 27, 78, -6, 30, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -6, 31, 76, -6, 32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -6, 33, 77, -6, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -6, 36, 81, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -5, -47, 76, -5, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -5, 19, 77, -5, 19, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 76, -5, 20, 77, -5, 20, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 76, -5, 33, 76, -5, 34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -5, 36, 76, -5, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, -48, 76, -1, -48, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, -47, 76, -1, -47, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, -46, 76, -3, -46, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 76, -4, -45, 76, -1, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, -44, 76, -1, -44, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, -41, 76, -2, -41, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.NORTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 76, -4, 33, 76, -1, 33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, 34, 76, -1, 34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, 36, 76, -1, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -4, 37, 76, -1, 37, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -3, 35, 76, -2, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -2, -46, 76, -1, -45, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -2, 38, 76, 1, 38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 76, -1, -11, 91, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -1, -10, 78, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, -1, 35, 76, -1, 36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 0, -46, 76, 1, -46, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 76, 0, -45, 76, 1, -45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 76, 0, -10, 81, 2, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 0, -9, 82, 0, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 0, -7, 76, 1, -6, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 0, 1, 82, 0, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 0, 11, 78, 0, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 0, 14, 77, 0, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 1, 1, 82, 2, 1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 1, 37, 76, 1, 38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 76, 3, -9, 78, 5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 4, -42, 79, 4, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 4, -14, 77, 4, -10, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 4, -3, 79, 4, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 5, -26, 76, 5, -25, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 76, 6, -15, 77, 7, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 6, -9, 76, 7, -9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 76, 6, 21, 76, 9, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 6, 25, 76, 9, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 8, -26, 76, 9, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 76, 8, 1, 78, 8, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 76, 9, -23, 78, 9, -23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 76, 9, -22, 76, 9, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 76, 9, -14, 77, 9, -11, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 76, 9, 1, 78, 9, 3, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 76, 9, 15, 77, 9, 20, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 76, 10, -27, 78, 10, -27, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 76, 10, -25, 78, 10, -25, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 76, 10, -10, 76, 10, -10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 76, 10, -9, 76, 10, -9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 76, 10, -2, 78, 10, -2, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 76, 10, 0, 78, 10, 0, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 76, 11, -10, 76, 11, -10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 77, -13, 68, 78, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -12, -51, 83, -12, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -12, -44, 77, -12, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -12, -29, 81, -12, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -12, -21, 77, -12, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -12, 44, 80, -9, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -12, 45, 85, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -12, 54, 82, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -11, -62, 93, -11, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -11, 12, 79, -11, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -11, 51, 77, -11, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -11, 52, 77, -11, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -11, 59, 90, -11, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -8, -48, 81, -8, -44, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -8, -43, 79, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -8, 33, 81, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -7, 32, 77, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -6, -68, 100, -6, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -6, 26, 77, -6, 31, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -6, 32, 82, -6, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -5, -43, 79, -5, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -5, 32, 81, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -4, -41, 78, -4, -41, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 77, -4, 32, 77, -1, 32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -3, -41, 78, -3, -41, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 77, -3, 26, 79, -1, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, -2, 33, 78, -2, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 77, -2, 36, 78, -2, 36, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 77, -1, 33, 79, -1, 36, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 77, -1, 37, 77, 0, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 77, 0, -45, 77, 1, -45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 77, 1, 0, 80, 1, 0, Blocks.DARK_OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 77, 3, -11, 77, 3, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 4, 22, 77, 5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 5, -8, 78, 5, -8, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 77, 6, -9, 77, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 6, 21, 77, 9, 21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 6, 22, 77, 9, 22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 6, 23, 77, 7, 23, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 77, 6, 24, 77, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 6, 25, 77, 9, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 8, -15, 77, 9, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 8, 23, 77, 9, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 77, 9, -22, 78, 9, -22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 77, 10, -11, 77, 10, -11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 77, 11, -11, 77, 11, -11, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 77, 14, 16, 77, 14, 16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 77, 14, 17, 77, 14, 17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 78, -14, 70, 79, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -12, -52, 86, -12, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -12, -43, 78, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -12, -30, 81, -12, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -12, -20, 79, -12, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -11, 16, 88, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -11, 48, 82, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -11, 53, 78, -11, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -11, 56, 93, -11, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -7, 18, 78, -7, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -7, 31, 78, -5, 31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -7, 32, 80, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -7, 33, 82, -7, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -6, -72, 81, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -6, 26, 82, -5, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -4, 18, 79, -3, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -4, 26, 79, -3, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -4, 31, 78, -2, 31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -4, 32, 79, -3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -2, 18, 79, -2, 18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -1, 15, 78, 0, 16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -1, 17, 78, -1, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -1, 18, 78, 0, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -1, 19, 81, -1, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -1, 25, 79, -1, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, -1, 31, 78, -1, 32, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 78, 0, -1, 79, 0, -1, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 78, 0, 0, 79, 0, 0, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 78, 0, 14, 78, 2, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 0, 19, 78, 0, 21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 0, 30, 79, 0, 30, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 78, 1, -11, 80, 1, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 1, 15, 78, 2, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 1, 18, 78, 2, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 1, 21, 78, 4, 21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 1, 29, 78, 2, 29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 78, 2, -11, 80, 2, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 2, 0, 79, 2, 0, Blocks.DARK_OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 78, 2, 17, 78, 2, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 3, -11, 78, 5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 3, 15, 78, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 3, 25, 81, 3, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 3, 26, 79, 3, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 78, 4, -14, 79, 4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 4, 22, 80, 4, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 5, -14, 78, 5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 5, 13, 79, 5, 13, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 78, 5, 14, 78, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, -15, 78, 9, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, -14, 78, 7, -13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, -12, 78, 7, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 78, 6, -11, 78, 7, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, -9, 78, 9, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, 14, 78, 9, 14, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, 15, 78, 7, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, 17, 78, 7, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 78, 6, 18, 78, 7, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 6, 20, 78, 9, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 8, -14, 78, 9, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 8, 15, 78, 9, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 78, 10, -23, 78, 10, -21, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 78, 14, 15, 78, 15, 15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 78, 14, 16, 78, 15, 16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 78, 14, 17, 78, 15, 17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 78, 16, 16, 78, 16, 16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 79, -14, 72, 83, -14, 76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -13, 68, 80, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -13, 70, 84, -13, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -12, -54, 89, -12, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -12, -42, 79, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -12, 21, 79, -12, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -12, 22, 79, -12, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -12, 26, 87, -12, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -12, 43, 80, -12, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -11, -13, 103, -7, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -11, 8, 82, -11, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -11, 15, 90, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -11, 41, 86, -11, 73, Blocks.SAND.getDefaultState());

    }
    
    public static void generatePart23()
    {
        structure.fillWithBlocks(world, start, 79, -7, 18, 79, -5, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -7, 30, 79, -5, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -7, 31, 80, -7, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -6, 27, 79, -6, 29, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -6, 31, 85, -6, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -6, 62, 85, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -5, 21, 79, -5, 23, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 79, -5, 27, 79, -3, 29, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -5, 31, 80, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -4, -41, 79, -2, -41, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.NORTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 79, -4, 7, 79, -2, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -4, 13, 79, -4, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -4, 21, 79, -4, 23, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.WEST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 79, -4, 30, 79, -1, 30, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -4, 31, 80, -4, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -3, 6, 79, 4, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -3, 13, 79, -3, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -3, 31, 79, -3, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -2, 13, 79, -2, 17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -2, 27, 79, -2, 29, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -2, 31, 79, -2, 32, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 79, -2, 33, 80, -2, 33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 79, -2, 34, 79, -2, 35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 79, -1, -10, 81, 1, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -1, -9, 82, 0, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -1, -8, 81, -1, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, -1, 15, 83, -1, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 0, -24, 79, 0, -22, Blocks.NOTE_BLOCK.getDefaultState().with(NoteBlock.INSTRUMENT, NoteBlockInstrument.BASEDRUM).with(NoteBlock.NOTE, 0).with(NoteBlock.POWERED, false));
        structure.fillWithBlocks(world, start, 79, 0, -21, 79, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 0, 11, 80, 0, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 1, -28, 79, 9, -28, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 1, -27, 79, 2, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 1, -24, 79, 2, -22, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 1, -21, 79, 2, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 1, -16, 79, 2, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 1, 10, 80, 1, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 2, -17, 79, 2, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 3, -27, 79, 5, -23, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 3, -22, 79, 3, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 3, -10, 81, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 3, -9, 81, 3, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 4, -22, 79, 9, -22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 4, -21, 79, 4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 4, -9, 84, 4, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 4, 20, 84, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 4, 21, 81, 4, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 4, 26, 80, 4, 28, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 79, 5, -42, 79, 5, -37, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 79, 5, -35, 79, 5, -30, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 79, 5, -14, 79, 6, -13, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 79, 5, -3, 79, 5, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 5, 10, 79, 5, 11, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 79, 5, 14, 84, 5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 5, 21, 79, 5, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 79, 6, -27, 79, 9, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 6, -3, 79, 9, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 6, -2, 79, 9, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 6, 3, 79, 9, 3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 6, 14, 80, 7, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 6, 20, 80, 7, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 6, 21, 79, 7, 21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 79, 6, 22, 79, 7, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 79, 7, -10, 79, 9, -10, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 79, 8, 14, 83, 9, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 8, 20, 83, 9, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 9, 15, 79, 9, 15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 79, 9, 17, 81, 9, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 79, 10, -1, 79, 10, 1, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 79, 10, 2, 79, 10, 2, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 79, 10, 16, 79, 15, 16, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 79, 14, 14, 79, 14, 14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 79, 14, 15, 79, 15, 15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 79, 14, 17, 79, 15, 17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 79, 16, 15, 79, 16, 15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 80, -14, -85, 84, -14, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -14, -80, 81, -13, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -14, 70, 81, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, -72, 91, -6, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, -55, 88, -12, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, -41, 80, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, -20, 80, -7, -20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, -19, 100, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, 10, 85, -12, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, 16, 84, -12, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, 23, 80, -11, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, 25, 90, -12, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -12, 36, 80, -12, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -11, 12, 81, -11, 13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -8, -43, 111, -6, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -8, -42, 86, -8, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -8, 28, 82, -8, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -8, 31, 81, -8, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, -75, 86, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, -47, 85, -7, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, -41, 80, -5, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, -40, 80, -7, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, -39, 80, -5, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, -35, 91, -7, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, -10, 84, -7, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, 2, 82, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, 13, 80, -7, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, 19, 80, -5, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, 20, 80, -7, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, 21, 80, -5, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -7, 26, 82, -7, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -6, -40, 80, -6, -40, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -6, 3, 89, -6, 12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -6, 13, 82, -6, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -5, -42, 80, -5, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -5, 7, 80, -4, 7, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.EAST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 80, -5, 9, 80, -5, 10, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 80, -5, 12, 80, -4, 12, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.EAST).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 80, -5, 13, 82, -5, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, -42, 80, -1, -42, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, -41, 80, -1, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, -39, 80, -2, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, -35, 80, -4, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, -31, 80, -4, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 6, 82, -2, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 13, 83, -2, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 14, 81, -4, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 19, 80, -1, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 25, 80, -2, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 26, 80, -4, 26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 27, 80, -2, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -4, 30, 80, -4, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -3, -40, 80, -1, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -3, -35, 80, -1, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -3, 14, 81, -3, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -3, 26, 80, -2, 29, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -3, 30, 82, -1, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -3, 31, 80, -3, 32, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 80, -2, 14, 81, -2, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, -27, 84, -1, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, -17, 82, 0, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, -16, 84, -1, -12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, 1, 83, 0, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, 2, 81, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, 3, 89, -1, 12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, 13, 80, -1, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, 26, 82, -1, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, -1, 33, 81, -1, 34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 80, 0, -35, 81, 0, -35, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 80, 1, -28, 80, 2, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 1, -17, 82, 2, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 2, 9, 80, 4, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 2, 25, 81, 2, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 3, -28, 84, 5, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 3, -17, 84, 4, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 3, -11, 87, 4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 3, 26, 80, 3, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 80, 4, -31, 81, 4, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 80, 4, -27, 84, 4, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 4, -16, 84, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 4, -3, 81, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 4, 3, 82, 4, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 4, 7, 80, 4, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 5, -32, 81, 5, -29, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 80, 5, -26, 82, 5, -26, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 80, 5, -24, 82, 5, -24, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 80, 5, -22, 85, 5, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 5, -3, 87, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 5, 3, 91, 5, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 5, 8, 80, 5, 9, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 80, 5, 10, 80, 5, 11, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 80, 6, -28, 81, 7, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 6, -22, 84, 9, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 6, -3, 80, 9, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 6, 3, 80, 9, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 8, -28, 84, 9, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 80, 9, -27, 80, 9, -27, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 80, 9, -26, 80, 9, -23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 80, 9, -2, 84, 9, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 80, 9, 15, 83, 9, 19, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 80, 14, 14, 80, 14, 14, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 80, 14, 15, 80, 15, 15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 80, 14, 16, 80, 15, 16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 80, 14, 17, 80, 15, 17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 81, -13, 68, 82, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, -71, 83, -12, -69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, -68, 82, -12, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, -59, 81, -12, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, -57, 87, -12, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, -40, 82, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, -20, 100, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, 23, 94, -12, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, 37, 81, -9, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -12, 44, 90, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -11, -83, 94, -11, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -11, 14, 93, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -7, -41, 85, -7, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -7, 13, 87, -5, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -7, 14, 82, -7, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -7, 16, 81, -7, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -7, 31, 87, -7, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -6, -41, 85, -6, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -6, -31, 92, -6, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -6, -9, 85, -6, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -5, -42, 86, -5, -42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -5, -31, 92, -5, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -5, -9, 85, -5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -5, 3, 82, -5, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -5, 9, 81, -5, 10, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 81, -5, 31, 81, -5, 32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -5, 38, 81, -5, 38, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 81, -4, -42, 82, -3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -4, -35, 81, -2, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -4, -31, 90, -4, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -4, -30, 91, -4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -4, -10, 84, -4, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -4, 2, 81, -2, 5, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -4, 19, 81, -2, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -4, 31, 81, -4, 32, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 81, -4, 33, 81, -3, 33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 81, -3, -31, 86, -3, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -3, -10, 84, -3, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -2, -42, 85, -1, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -2, -31, 92, -2, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -2, -10, 84, -2, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -1, -41, 85, -1, -41, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, -1, -40, 83, -1, -40, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, -1, -39, 81, -1, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, -1, -36, 85, -1, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -1, -31, 83, -1, -29, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -1, -28, 82, -1, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -1, 13, 89, -1, 13, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -1, 14, 84, 0, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, -1, 25, 82, -1, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 0, 11, 82, 0, 11, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 81, 0, 16, 81, 0, 18, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, 0, 25, 82, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 0, 30, 82, 0, 30, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 81, 1, -11, 82, 1, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 1, -9, 81, 2, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 1, 10, 82, 1, 10, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 81, 1, 25, 81, 2, 25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 2, -28, 82, 2, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 2, -11, 82, 2, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 2, 9, 82, 2, 9, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 81, 3, 1, 82, 3, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 3, 8, 82, 3, 8, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 81, 3, 14, 84, 5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 4, -32, 81, 4, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 81, 4, 7, 82, 4, 7, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 81, 4, 26, 81, 4, 27, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 81, 5, -8, 81, 7, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 81, 5, 17, 81, 8, 17, Blocks.CHAIN.getDefaultState().with(ChainBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, 6, -3, 82, 7, -3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 81, 6, 3, 81, 7, 3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 81, 6, 14, 81, 7, 14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 81, 6, 20, 81, 7, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 81, 8, -8, 82, 8, -4, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 8, -3, 84, 9, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 8, 3, 84, 9, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 81, 9, -27, 81, 9, -27, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, 9, -26, 81, 9, -25, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, 9, -24, 81, 9, -24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 81, 10, -3, 83, 10, -3, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 81, 10, 3, 83, 10, 3, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 82, -14, -80, 99, -14, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -14, 70, 83, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -13, -84, 85, -13, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -13, -80, 84, -13, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -13, -77, 82, -9, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -12, -59, 86, -12, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -12, -30, 83, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -12, -28, 82, -7, -23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -12, -22, 100, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -12, 37, 83, -12, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -12, 39, 82, -10, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -12, 42, 93, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -11, -12, 82, -11, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -11, -11, 82, -11, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -11, 12, 96, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -10, -82, 96, -10, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -9, -80, 95, -9, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -8, -48, 87, -8, -43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -8, 31, 88, -8, 37, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -8, 38, 82, -7, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -8, 39, 98, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -7, 16, 82, -5, 18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -7, 19, 87, -7, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -7, 39, 98, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -6, -71, 84, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -6, 39, 98, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -5, 31, 82, -5, 32, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 82, -5, 37, 82, -5, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 82, -4, 2, 82, 0, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -4, 3, 82, -2, 6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -4, 14, 82, -3, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -4, 16, 82, -4, 18, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 82, -4, 19, 82, -2, 19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -4, 20, 82, -2, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -4, 27, 82, -1, 30, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -4, 37, 82, -4, 37, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 82, -3, 16, 82, -3, 18, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 82, -2, 14, 82, -2, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -2, 16, 82, -2, 18, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 82, -1, -39, 82, -1, -39, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 82, -1, -37, 83, -1, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 82, -1, -10, 82, 0, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -1, -6, 82, -1, -6, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -1, -5, 82, 0, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -1, -3, 82, -1, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -1, -2, 82, -1, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, -1, 20, 82, 0, 25, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 0, -42, 84, 0, -42, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 82, 0, -35, 84, 0, -35, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 82, 0, -28, 85, 0, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 0, -13, 83, 0, -13, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 82, 0, -12, 83, 0, -12, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 82, 0, -3, 82, 0, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 0, 26, 83, 0, 26, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 82, 0, 27, 82, 0, 28, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 82, 0, 29, 82, 0, 30, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 82, 1, -28, 82, 2, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 1, -9, 82, 3, -9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 1, -8, 82, 2, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 1, -5, 82, 2, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 1, 3, 82, 4, 6, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 1, 7, 82, 2, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 1, 20, 82, 2, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 1, 25, 82, 4, 25, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 2, -6, 82, 2, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 3, -8, 82, 3, 7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 3, 20, 82, 3, 24, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 4, -31, 82, 4, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 82, 4, -30, 82, 4, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 82, 4, -10, 88, 4, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 4, -3, 86, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 4, -2, 86, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 4, 22, 82, 4, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 5, -31, 82, 5, -29, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 82, 5, -25, 82, 5, -24, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 82, 5, -21, 84, 5, -21, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 82, 6, -28, 82, 7, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 82, 6, 3, 84, 8, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 6, 14, 83, 7, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 6, 20, 83, 7, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 82, 9, -27, 82, 9, -26, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 82, 9, -24, 83, 9, -23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 82, 9, -21, 82, 9, -21, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -14, -86, 86, -14, -83, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -13, -77, 100, -13, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -13, 68, 84, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, -84, 89, -12, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, -77, 88, -12, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, -68, 86, -12, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, -62, 85, -12, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, -40, 84, -11, -40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, -39, 100, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, 39, 97, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, 54, 83, -12, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, 58, 83, -12, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, 59, 83, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -12, 66, 89, -12, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -11, -12, 84, -11, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -11, -10, 83, -11, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -11, 9, 100, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -8, -77, 91, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -8, 28, 110, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -7, 2, 86, -5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -7, 3, 89, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -7, 14, 84, -7, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -7, 27, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -7, 56, 91, -7, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -6, 14, 92, -5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -6, 15, 87, -6, 26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -6, 27, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -5, 27, 89, -5, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -4, -42, 83, -3, -42, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 83, -4, 2, 83, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -4, 14, 91, -2, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -4, 20, 83, -2, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -4, 27, 84, -3, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -2, 27, 88, -1, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -1, -39, 83, -1, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 83, -1, -28, 85, 0, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -1, -17, 83, -1, -12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -1, -10, 89, -1, -2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -1, -1, 83, 1, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -1, 20, 84, -1, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, -1, 22, 83, -1, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 0, -29, 84, 0, -29, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 83, 0, -3, 86, 0, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 0, 3, 89, 0, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 0, 4, 83, 4, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 0, 9, 83, 1, 11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 0, 20, 84, 0, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 0, 25, 83, 0, 26, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 83, 1, -28, 83, 2, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 83, 1, -11, 89, 2, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 1, -3, 86, 2, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 1, 0, 83, 1, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 1, 3, 87, 2, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 1, 20, 83, 2, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 2, -17, 85, 2, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 2, -10, 84, 2, -10, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 83, 2, 0, 83, 3, 0, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 2, 9, 83, 2, 10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 2, 17, 83, 3, 17, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.EAST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 83, 3, -10, 84, 3, -10, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 83, 3, -3, 86, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 3, 3, 91, 5, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 3, 16, 83, 3, 18, Index.SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.EAST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 83, 3, 20, 84, 4, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 5, -30, 83, 5, -29, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 83, 5, 4, 83, 5, 7, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 83, 6, -28, 84, 7, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 6, -3, 87, 8, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 9, -27, 84, 9, -27, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 83, 9, -26, 84, 9, -23, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 83, 9, -21, 84, 9, -20, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 83, 9, -8, 83, 9, -4, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -14, 70, 85, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -14, 72, 87, -14, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -12, -71, 84, -12, -70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -12, -69, 87, -12, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -12, 37, 100, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -12, 55, 88, -12, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -12, 61, 84, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -11, -10, 84, -11, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -11, 7, 103, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -4, -42, 85, -3, -42, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -4, 2, 84, -2, 2, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 84, -4, 13, 84, -2, 13, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 84, -2, -35, 85, -2, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -1, -40, 84, -1, -40, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 84, -1, -39, 84, -1, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 84, -1, -31, 87, -1, -28, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -1, -17, 86, 0, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -1, -1, 87, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -1, 15, 85, -1, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, -1, 22, 88, -1, 26, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 84, 0, 6, 84, 0, 8, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 84, 0, 15, 84, 0, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 1, -28, 84, 2, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 1, -17, 85, 2, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 1, 14, 84, 5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 1, 15, 84, 2, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 1, 20, 84, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 2, 4, 84, 2, 5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 84, 3, 4, 84, 3, 5, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 84, 3, 15, 84, 5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 5, -10, 84, 5, -7, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 5, -5, 84, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 5, -2, 85, 6, -2, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.SOUTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 84, 6, -10, 84, 9, -10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 6, -9, 84, 9, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 6, -8, 84, 7, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 84, 6, -7, 84, 9, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 6, -5, 84, 8, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 6, 14, 84, 9, 14, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 6, 15, 84, 7, 16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 6, 17, 84, 7, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 84, 6, 18, 84, 7, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 6, 20, 84, 9, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 7, -6, 84, 9, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 8, -21, 85, 8, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 84, 8, -15, 85, 8, -15, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 8, -8, 84, 9, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 8, 15, 84, 9, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 9, -19, 85, 9, -16, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 84, 10, -9, 84, 14, -9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 84, 10, -8, 84, 14, -8, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 84, 15, -9, 84, 15, -8, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 85, -14, -82, 96, -14, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -13, -85, 89, -13, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -13, -80, 85, -13, -80, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -13, -79, 85, -12, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -13, 68, 86, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -13, 70, 89, -13, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, -71, 85, -12, -71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, -70, 85, -12, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, -40, 100, -12, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, 16, 88, -12, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, 20, 86, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, 54, 88, -12, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, 61, 85, -6, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -12, 62, 88, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -11, -12, 89, -11, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -11, -7, 85, -11, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -11, 6, 103, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -11, 31, 85, -11, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -11, 32, 85, -9, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -7, -9, 85, -5, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -7, -3, 87, -7, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -7, 14, 92, -5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -7, 15, 89, -7, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -6, -71, 87, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -5, -35, 91, -5, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -5, 25, 86, -5, 25, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 85, -5, 26, 86, -5, 26, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 85, -4, -35, 90, -4, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -4, -10, 85, -2, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -4, -9, 85, -1, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -4, -3, 85, -4, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -4, 2, 87, -2, 2, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -4, 13, 87, -2, 13, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -4, 27, 86, -3, 27, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 85, -3, -35, 85, -2, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -3, -3, 85, -3, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -2, -3, 85, -2, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -1, -40, 85, -1, -37, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 85, -1, -27, 86, -1, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -1, -25, 89, -1, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -1, -16, 85, -1, -12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 85, -1, 21, 89, -1, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 0, -42, 85, 0, -42, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 85, 0, -35, 86, 0, -35, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 85, 0, -34, 86, 0, -34, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 85, 0, -27, 85, 0, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 0, 21, 87, 0, 21, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 85, 0, 27, 87, 0, 27, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 85, 1, -28, 85, 9, -28, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 1, -27, 85, 2, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 1, -26, 85, 3, -26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 1, -10, 87, 1, -10, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 85, 2, -10, 87, 2, -10, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 85, 3, -27, 85, 5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 3, -17, 85, 3, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 3, -10, 87, 4, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 4, -26, 89, 5, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 4, -25, 89, 4, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 4, -17, 85, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 5, -23, 85, 5, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 5, -15, 85, 7, -15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 85, 5, -10, 89, 5, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 6, -27, 85, 6, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 6, -23, 85, 9, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 6, -22, 85, 9, -22, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 6, -10, 86, 7, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 6, 3, 85, 7, 3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 85, 7, -27, 85, 7, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 8, -27, 85, 8, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 8, -10, 89, 9, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 8, 3, 91, 8, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 9, -27, 85, 9, -23, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 9, -21, 85, 9, -16, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 85, 9, -9, 87, 9, -7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 85, 9, -6, 86, 9, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 85, 10, -22, 85, 10, -22, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 85, 10, -10, 85, 11, -10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 86, -14, 70, 86, -14, 71, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -13, -80, 95, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -12, -71, 87, -12, -70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -12, -62, 88, -12, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -12, 10, 86, -12, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -12, 13, 92, -12, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -12, 61, 89, -12, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -11, -7, 87, -11, -6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -11, -5, 86, -11, 4, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -11, 5, 102, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -11, 27, 86, -10, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -11, 29, 90, -11, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -11, 34, 86, -11, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -7, -47, 91, -7, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -7, -39, 89, -7, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -7, -10, 90, -7, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -6, -41, 86, -6, -41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -6, -39, 90, -6, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -6, -34, 88, -6, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -6, -9, 90, -6, -4, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -6, -3, 91, -6, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -5, -39, 86, -5, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -5, -7, 86, -5, -6, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 86, -5, -3, 91, -5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -4, -42, 86, -1, -42, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -4, -41, 86, -1, -41, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -4, -39, 86, -1, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -4, -38, 86, -3, -38, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 86, -4, -37, 86, -3, -36, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -4, -10, 89, -1, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -4, -3, 90, -1, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -4, -2, 89, -4, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -3, -40, 86, -2, -39, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -3, -35, 86, -1, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -3, -2, 89, -3, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -2, -38, 86, -1, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -2, -2, 89, -2, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -1, -40, 86, -1, -37, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -1, -34, 87, -1, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -1, -16, 86, -1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -1, 14, 91, -1, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, -1, 15, 90, -1, 19, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 86, -1, 20, 87, -1, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 0, -40, 86, 0, -38, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 86, 0, -26, 90, 0, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 0, -16, 86, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 1, -26, 87, 2, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 1, -17, 86, 3, -17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 1, -16, 86, 1, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 2, -16, 86, 2, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 3, -28, 89, 3, -28, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 3, -26, 89, 5, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 3, -16, 86, 3, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 4, -27, 89, 4, -27, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 4, -17, 86, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 4, -14, 87, 4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 5, -21, 86, 5, -19, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 6, -26, 86, 9, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 6, -21, 86, 9, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 6, -20, 86, 7, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 6, -17, 86, 7, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 6, -15, 86, 9, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 6, 3, 91, 9, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 7, -18, 86, 9, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 8, -20, 86, 9, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 86, 8, -1, 86, 8, 1, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 86, 9, -25, 89, 9, -22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 86, 10, -10, 86, 11, -10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 86, 12, -17, 86, 12, -17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 86, 12, -16, 86, 12, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 87, -14, -86, 90, -14, -83, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -14, 70, 93, -14, 70, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -14, 71, 90, -14, 75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -12, -64, 93, -12, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -12, 11, 96, -12, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -12, 21, 92, -12, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, -5, 88, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, -3, 87, -11, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, 4, 102, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, 27, 87, -8, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, 28, 92, -11, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, 35, 87, -11, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, 45, 89, -11, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -11, 48, 87, -11, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -8, -42, 92, -8, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -8, -35, 91, -8, 7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -8, 8, 90, -8, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -8, 21, 89, -8, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -7, -75, 90, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -7, -40, 91, -7, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -7, 2, 87, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -6, -44, 91, -6, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -5, -7, 87, -5, -6, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 87, -4, 27, 88, -3, 27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -3, -35, 90, -3, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -3, -31, 90, -3, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -3, -30, 92, -3, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -2, -35, 91, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -1, -42, 88, -1, -39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -1, -27, 87, -1, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -1, -17, 88, -1, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 87, -1, -15, 91, -1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 0, -34, 87, 0, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 0, -15, 91, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 1, -35, 87, 4, -35, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 1, -34, 87, 4, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 1, -33, 87, 2, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 87, 1, -32, 87, 4, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 1, -31, 87, 4, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 1, -15, 91, 2, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 1, -14, 89, 1, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 2, -16, 91, 2, -16, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.NORTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 87, 2, -14, 89, 2, -12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 3, -33, 87, 4, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 3, -15, 88, 3, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 3, 5, 89, 3, 7, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 4, -17, 88, 4, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 4, -15, 87, 4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 4, -3, 89, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 4, 4, 92, 4, 4, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 4, 8, 92, 4, 8, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 5, -15, 92, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 5, -2, 87, 5, -1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 5, 1, 87, 5, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 6, -26, 88, 7, -26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 87, 6, -15, 89, 8, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 6, -10, 87, 7, -10, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 87, 6, -2, 87, 7, -1, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 6, 1, 87, 8, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 7, 0, 87, 8, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 8, -26, 89, 9, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 8, -2, 87, 8, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 9, -21, 87, 9, -16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 87, 9, -15, 91, 9, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 87, 9, -6, 88, 9, -6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 87, 9, -5, 89, 9, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 87, 12, -18, 87, 13, -18, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 87, 12, -17, 87, 13, -17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 87, 12, -16, 87, 13, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 87, 15, -17, 87, 15, -17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 87, 16, -17, 87, 16, -17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 88, -13, 69, 89, -13, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -12, -71, 88, -6, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -12, -70, 102, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -12, -41, 88, -9, -41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -12, 10, 98, -12, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, -28, 95, -11, -20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, -19, 88, -7, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, -3, 92, -8, -3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, -2, 91, -11, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, 2, 89, -11, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, 3, 100, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, 27, 90, -11, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, 36, 88, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, 44, 92, -11, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -11, 49, 97, -11, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -8, -48, 91, -8, -36, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -8, 56, 97, -8, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -8, 66, 90, -8, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -7, -3, 89, -6, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -7, -2, 91, -7, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -7, 2, 91, -5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -7, 13, 92, -7, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -7, 20, 88, -7, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -7, 21, 88, -7, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -6, -70, 89, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -6, 13, 89, -6, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -6, 15, 91, -6, 19, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -6, 20, 88, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -6, 21, 88, -6, 26, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -6, 62, 92, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -5, 13, 89, -5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -5, 20, 88, -5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -4, 2, 88, -2, 2, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.NORTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 88, -4, 13, 88, -2, 13, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.SOUTH).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 88, -4, 20, 88, -2, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -1, -31, 92, -1, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -1, -26, 88, -1, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -1, -1, 91, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, -1, 20, 89, -1, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 0, -31, 91, 0, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 0, -18, 90, 0, -18, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 88, 0, 6, 88, 2, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 88, 0, 9, 88, 0, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 0, 21, 88, 0, 21, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 88, 1, -35, 88, 4, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 1, -31, 88, 4, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 1, -26, 88, 2, -26, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 88, 1, 3, 88, 2, 3, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 88, 1, 9, 88, 4, 9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 1, 10, 88, 4, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 1, 11, 88, 2, 11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 88, 1, 12, 88, 4, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 1, 13, 88, 4, 13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 2, -10, 89, 2, -10, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.LOWER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 88, 3, -10, 89, 3, -10, Index.CUPBOARD_OAK.getDefaultState().with(Cupboard.FACING, Direction.SOUTH).with(Cupboard.HALF, DoubleBlockHalf.UPPER).with(Cupboard.MIRROR, false).with(Cupboard.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 88, 3, 11, 88, 4, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 4, -34, 90, 4, -32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 88, 4, -30, 89, 4, -29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 4, -15, 92, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 4, -14, 88, 4, -12, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 88, 4, -11, 90, 4, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 5, -11, 90, 5, -11, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 88, 6, -10, 89, 7, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 9, -20, 90, 9, -18, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 88, 9, -16, 91, 9, -16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 88, 9, -9, 89, 9, -7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 88, 10, -17, 88, 15, -17, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 88, 12, -19, 88, 12, -19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 88, 12, -18, 88, 13, -18, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));

    }
    
    public static void generatePart24()
    {
        structure.fillWithBlocks(world, start, 88, 12, -16, 88, 13, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 88, 15, -18, 88, 15, -18, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 88, 16, -18, 88, 16, -18, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 89, -12, -77, 89, -12, -77, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, -76, 89, -12, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, -71, 103, -12, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, -42, 93, -9, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, -41, 101, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, 8, 92, -12, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, 9, 97, -12, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, 54, 112, -12, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, 55, 90, -12, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, 59, 89, -6, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, 60, 93, -12, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -12, 65, 90, -12, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -11, -30, 94, -11, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -11, -17, 89, -11, -3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -11, 37, 95, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -7, 20, 93, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -6, -71, 91, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -6, -34, 90, -6, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -6, 20, 93, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -5, -42, 89, -3, -42, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 89, -5, -39, 89, -3, -39, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 89, -5, -33, 89, -1, -33, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -5, 20, 89, -5, 27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -4, 2, 89, -4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -4, 13, 90, -4, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -4, 20, 89, -3, 21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -4, 22, 89, -3, 22, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 89, -4, 23, 89, -3, 24, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -4, 25, 89, -3, 25, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 89, -4, 26, 89, -1, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -4, 27, 89, -1, 27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -3, 2, 89, -3, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -3, 13, 90, -3, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -2, -42, 89, -2, -39, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -2, 2, 89, -2, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -2, 13, 90, -2, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -2, 20, 89, -1, 26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -1, -34, 90, -1, -34, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 89, -1, -26, 89, -1, -26, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, -1, -17, 90, -1, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 0, -28, 89, 2, -28, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 89, 0, -10, 89, 0, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 0, 9, 92, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 0, 13, 92, 0, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 0, 14, 90, 0, 14, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 89, 0, 15, 90, 0, 15, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 0, 23, 89, 0, 25, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 89, 1, -35, 89, 2, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 89, 1, -31, 89, 2, -31, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 89, 1, -26, 89, 2, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 1, 3, 89, 2, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 1, 9, 89, 4, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 1, 13, 91, 3, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 1, 15, 90, 1, 15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 89, 2, 15, 90, 2, 15, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 89, 3, -35, 90, 4, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 3, -31, 90, 4, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 3, -15, 92, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 3, -14, 89, 3, -12, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 89, 4, -17, 90, 4, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 4, -10, 89, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 4, 10, 89, 4, 12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 89, 4, 13, 91, 4, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 5, -19, 89, 5, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 6, -26, 89, 9, -26, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 89, 7, -8, 89, 7, -6, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 89, 7, -5, 89, 8, -5, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.NORTH).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 89, 8, -8, 89, 8, -6, Blocks.SMOOTH_SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.EAST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.TOP));
        structure.fillWithBlocks(world, start, 89, 9, -21, 89, 9, -16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 89, 9, -6, 89, 9, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 89, 12, -19, 89, 12, -19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 89, 12, -18, 89, 13, -18, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 89, 12, -17, 89, 13, -17, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 89, 12, -16, 89, 13, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 90, -13, -85, 94, -13, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -13, 69, 93, -13, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -13, 70, 93, -13, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, -84, 96, -12, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, -77, 91, -12, -76, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, -75, 91, -12, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, -54, 90, -12, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, -53, 90, -12, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, 59, 95, -12, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, 68, 91, -12, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -12, 69, 93, -12, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -11, -17, 95, -11, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -11, -16, 91, -11, -3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -11, 2, 99, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -11, 36, 97, -11, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -8, 21, 93, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, -3, 92, -7, 1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, 3, 90, -7, 3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, 4, 90, -5, 4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, 5, 90, -7, 5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, 6, 90, -5, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, 9, 96, -7, 9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, 10, 91, -7, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -7, 15, 91, -7, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -6, 3, 90, -6, 3, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -6, 5, 90, -6, 5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -6, 9, 90, -5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -5, -36, 90, -4, -36, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.NORTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 90, -5, 3, 90, -5, 4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -5, 20, 92, -5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -5, 26, 90, -5, 27, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 90, -4, -10, 90, -2, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -4, -2, 92, -4, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -4, 2, 90, -2, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -4, 6, 90, -2, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -4, 20, 91, -3, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -3, -2, 92, -3, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -3, 5, 90, -2, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -2, -2, 92, -2, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -2, 20, 91, -1, 20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, -33, 90, -1, -32, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, -26, 92, -1, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, -20, 92, -1, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, -10, 90, 0, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, -9, 91, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, 3, 93, -1, 8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, 9, 90, 0, 9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, 10, 92, -1, 12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 90, -1, 13, 92, 0, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 0, -25, 90, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 0, -9, 90, 0, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -35, 90, 4, -35, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -31, 90, 4, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -26, 90, 9, -26, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -25, 90, 2, -25, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -24, 90, 2, -24, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 90, 1, -23, 90, 2, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -21, 90, 3, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -14, 90, 1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -10, 90, 9, -10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -9, 90, 2, -8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, -7, 90, 2, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 90, 1, -5, 90, 2, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 1, 9, 90, 2, 9, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 90, 2, -14, 90, 2, -12, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 90, 2, 3, 91, 2, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 3, -29, 91, 3, -29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 3, -25, 90, 5, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 3, -11, 90, 4, -10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 3, -9, 90, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 3, 5, 90, 3, 6, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 3, 9, 91, 4, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 4, -21, 92, 5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 4, -20, 92, 4, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 4, -2, 91, 4, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 4, 7, 91, 4, 8, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 4, 10, 90, 4, 10, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 90, 4, 12, 91, 4, 12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 90, 5, 11, 90, 7, 11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 90, 6, -25, 90, 9, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 6, -21, 90, 8, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 6, -15, 90, 7, -15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 90, 6, -9, 90, 9, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 6, -3, 90, 9, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 8, -15, 91, 9, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 8, 10, 90, 9, 10, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 8, 11, 90, 9, 11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 90, 9, -21, 91, 9, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 90, 9, -17, 91, 9, -16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 90, 9, -2, 91, 9, 2, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 91, -14, -86, 94, -14, -83, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -14, 72, 92, -14, 74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -12, -54, 92, -12, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -12, -52, 91, -12, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -12, 55, 91, -12, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -12, 56, 91, -6, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -12, 57, 98, -12, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -12, 65, 91, -8, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -12, 66, 92, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -11, -31, 93, -11, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -11, 27, 110, -9, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -11, 35, 92, -11, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -8, 8, 91, -7, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -8, 9, 91, -8, 9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -8, 10, 91, -7, 12, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -8, 13, 92, -8, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -8, 66, 92, -8, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -7, -74, 93, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -7, -10, 91, -6, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -7, -8, 91, -7, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -7, -7, 91, -5, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -7, 3, 95, -7, 7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -6, -34, 92, -6, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -6, -8, 91, -6, -8, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -6, 3, 96, -6, 12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -6, 13, 92, -6, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -5, -44, 91, -5, -44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 91, -5, -34, 91, -5, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -5, 13, 92, -5, 14, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, -44, 91, -4, -44, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 91, -4, -35, 91, 0, -35, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, -34, 91, -3, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, -31, 91, -1, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, -10, 91, -2, -10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, -9, 91, -1, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, -7, 91, -1, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, -3, 92, -4, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, 2, 96, -2, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -4, 13, 91, -3, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -3, -8, 91, -1, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -3, -3, 92, -3, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -2, -34, 91, 0, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -2, -3, 92, -2, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -2, 13, 91, -2, 14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -1, -17, 91, -1, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -1, -10, 91, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -1, 9, 93, -1, 12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 91, -1, 15, 91, -1, 19, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 91, 0, -21, 97, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 0, -3, 91, 0, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 0, 3, 92, 0, 3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, -35, 91, 4, -35, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, -34, 91, 4, -34, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, -33, 91, 2, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 91, 1, -32, 91, 4, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, -31, 91, 4, -31, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, -21, 94, 2, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, -14, 91, 1, -12, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 91, 1, -11, 92, 2, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, -3, 91, 2, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, 3, 91, 2, 3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 1, 9, 91, 4, 9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 3, -33, 91, 4, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 3, -30, 91, 3, -29, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 3, -21, 92, 4, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 3, -3, 91, 5, -3, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 4, -17, 91, 4, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 4, 5, 92, 4, 5, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 4, 10, 91, 4, 12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 91, 6, -21, 91, 9, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 6, -15, 91, 9, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 6, -3, 91, 9, -3, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 7, -19, 91, 7, -17, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.WEST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 91, 8, -19, 92, 8, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 8, 8, 91, 8, 9, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 91, 9, -20, 91, 9, -16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 92, -14, 71, 94, -14, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -12, -77, 93, -12, -75, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -12, -74, 92, -10, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -12, -52, 92, -12, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -12, -51, 92, -12, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -12, 55, 101, -12, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -12, 65, 93, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -12, 68, 95, -12, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -11, -16, 93, -11, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -11, -15, 103, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -11, -2, 95, -11, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -8, -77, 93, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -8, -48, 95, -8, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -8, -44, 92, -7, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -8, -35, 92, -6, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -8, -31, 104, -8, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -8, -14, 97, -8, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -8, -2, 92, -7, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, -47, 94, -7, -45, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, -42, 96, -7, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, -37, 92, -6, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, -31, 98, -7, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, -10, 97, -5, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, -9, 96, -7, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, -4, 92, -7, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, 15, 92, -7, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, 17, 95, -7, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -7, 56, 98, -7, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -6, -71, 94, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -6, -42, 96, -6, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -6, -9, 96, -6, -5, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -6, -4, 98, -6, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -6, 15, 92, -6, 15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -6, 17, 95, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -5, -45, 92, -5, -45, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 92, -5, -4, 92, -5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -5, 17, 92, -5, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, -31, 92, -1, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, -30, 92, -4, -22, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, -21, 92, -4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, -10, 96, -1, -10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, -4, 92, -1, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, 3, 94, -4, 3, Index.BOOKSHELF_OAK.getDefaultState().with(Bookshelf.FACING, Direction.SOUTH).with(Bookshelf.BOOK0, false).with(Bookshelf.BOOK1, false).with(Bookshelf.BOOK2, false).with(Bookshelf.BOOK3, false).with(Bookshelf.BOOK4, false).with(Bookshelf.BOOK5, false).with(Bookshelf.BOOK6, false).with(Bookshelf.BOOK7, false));
        structure.fillWithBlocks(world, start, 92, -4, 13, 94, -2, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, 14, 92, -1, 14, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, 15, 92, -1, 15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, 17, 92, -1, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, 18, 92, -3, 18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 92, -4, 19, 92, -1, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -4, 20, 92, -1, 20, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -3, 16, 92, -2, 17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -2, -35, 93, -2, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 92, -2, -34, 94, -2, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 92, -2, 18, 92, -1, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -1, -35, 94, -1, -32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 92, -1, -17, 98, -1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -1, -9, 93, -1, -8, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 92, -1, -7, 92, -1, -5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 92, -1, -3, 92, 0, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, -1, 16, 92, -1, 19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 0, -17, 92, 0, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 0, -14, 92, 0, -12, Blocks.SANDSTONE_STAIRS.getDefaultState().with(StairsBlock.FACING, Direction.WEST).with(StairsBlock.WATERLOGGED, false).with(StairsBlock.SHAPE, StairsShape.STRAIGHT).with(StairsBlock.HALF, Half.BOTTOM));
        structure.fillWithBlocks(world, start, 92, 0, -11, 92, 2, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 0, 4, 92, 0, 8, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 92, 0, 10, 92, 0, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, -17, 92, 3, -17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, -16, 92, 2, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, -15, 92, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, -3, 92, 9, -3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, -2, 92, 2, 0, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, 1, 92, 2, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 92, 1, 2, 92, 2, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, 3, 92, 9, 3, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, 9, 92, 4, 9, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, 10, 92, 3, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 1, 13, 92, 4, 13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 3, -16, 92, 4, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 3, -2, 92, 5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 4, -17, 92, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 4, 7, 92, 4, 8, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 4, 10, 92, 4, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 5, -20, 92, 5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 6, -21, 92, 9, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 6, -20, 92, 9, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 6, -15, 92, 9, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 92, 6, -2, 92, 9, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -12, -74, 94, -12, -73, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -12, -72, 93, -7, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -12, -54, 96, -12, -51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -12, -50, 93, -9, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -12, 8, 96, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -12, 22, 96, -12, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -11, -3, 99, -9, -3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -11, 28, 93, -11, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -11, 29, 93, -11, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -11, 35, 102, -11, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -11, 45, 94, -11, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, -44, 99, -8, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, -37, 94, -8, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, -32, 98, -6, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, -3, 97, -8, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, 2, 99, -8, 8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, 9, 97, -8, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, 14, 99, -8, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -8, 66, 93, -8, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -7, -44, 99, -7, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -7, -37, 94, -7, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -7, -4, 99, -7, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -7, 8, 96, -7, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -7, 13, 100, -7, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -6, -44, 99, -6, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -6, -37, 94, -6, -33, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 93, -6, -31, 98, -6, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -6, -21, 99, -6, -10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -6, 13, 100, -6, 20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -5, -31, 99, -5, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -5, -21, 99, -5, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -5, -4, 97, -5, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -5, -1, 93, -4, -1, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 93, -5, 2, 99, -5, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -5, 13, 97, -5, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -5, 21, 93, -5, 21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 93, -4, -31, 99, -4, -31, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -4, -22, 96, -2, -22, Blocks.CUT_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 93, -4, -21, 97, -3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -4, -20, 98, -4, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -4, -4, 94, -3, -4, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 93, -3, -31, 98, -1, -31, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -3, -20, 98, -3, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -2, -21, 99, -2, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -2, -4, 96, -1, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -1, -30, 98, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -1, -21, 97, 0, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -1, -20, 95, -1, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 93, -1, -7, 93, -1, -6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 93, -1, -5, 96, -1, -5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 93, -1, -3, 94, -1, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 93, -1, 14, 94, -1, 20, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 93, 0, -31, 96, 0, -31, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 93, 0, -17, 97, 0, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, 0, -3, 95, 0, 1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 93, 0, 8, 93, 0, 9, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 93, 1, -17, 94, 2, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, 2, -16, 94, 2, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 93, 2, -1, 93, 6, -1, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 93, 3, -21, 96, 3, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, 3, -17, 96, 3, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, 4, -21, 96, 4, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 93, 4, -2, 93, 5, -1, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 94, -14, 70, 97, -14, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -13, 69, 97, -13, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -12, -77, 106, -9, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -12, -76, 100, -12, -49, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -12, -48, 94, -12, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -12, -42, 105, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -12, 67, 97, -12, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, -63, 98, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, -31, 94, -11, -31, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, -16, 106, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 28, 95, -11, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 30, 94, -11, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 34, 104, -11, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 48, 100, -11, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 59, 95, -11, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 62, 94, -6, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 63, 95, -11, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 64, 99, -11, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -11, 70, 94, -11, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -8, -76, 100, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -8, -68, 111, -8, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -8, 21, 94, -7, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -8, 22, 111, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -8, 66, 96, -8, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -7, -73, 95, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -7, 22, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -6, 22, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -5, 20, 94, -5, 20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 94, -2, -35, 94, -2, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 94, -1, -9, 96, -1, -9, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 94, -1, -8, 95, -1, -8, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 94, -1, -7, 94, -1, -5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 94, -1, 2, 98, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -1, 3, 95, -1, 4, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 94, -1, 5, 94, -1, 6, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 94, -1, 7, 98, -1, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 94, -1, 8, 95, -1, 9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 94, -1, 10, 96, -1, 12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 94, -1, 13, 96, -1, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 94, 0, -11, 97, 0, -11, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 94, 0, 5, 94, 0, 6, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 94, 1, -16, 95, 1, -16, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 94, 1, 5, 94, 1, 6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 94, 4, -17, 96, 4, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -14, -86, 98, -14, -83, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -13, -85, 97, -13, -81, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -12, -48, 95, -12, -48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -12, -47, 95, -9, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -12, -43, 107, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -11, -83, 97, -11, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -11, -72, 97, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -11, -31, 96, -11, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -11, -29, 95, -11, -17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -11, 30, 106, -11, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -11, 62, 95, -11, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -11, 70, 97, -11, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -8, -37, 96, -8, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -8, -35, 95, -7, -35, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -8, -34, 96, -8, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -8, 21, 111, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -7, -47, 104, -7, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -7, -37, 96, -7, -36, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -7, -34, 96, -7, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -7, 21, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -6, -70, 96, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -6, -37, 96, -6, -36, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 95, -6, -34, 96, -6, -33, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 95, -6, 21, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -5, -30, 96, -5, -30, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.HEAD));
        structure.fillWithBlocks(world, start, 95, -5, -29, 96, -5, -29, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(BedBlock.PART, BedPart.FOOT));
        structure.fillWithBlocks(world, start, 95, -5, 4, 95, -5, 6, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 95, -5, 15, 95, -3, 15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 95, -4, -4, 96, -3, -4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -4, 13, 95, -3, 13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 95, -4, 20, 95, -3, 20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 95, -2, -34, 95, -2, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 95, -2, -33, 95, -2, -32, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 95, -2, 13, 96, -1, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -2, 14, 95, -2, 20, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 95, -1, -34, 95, -1, -32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 95, -1, -7, 95, -1, -7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 95, -1, -1, 95, -1, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 95, -1, 5, 97, -1, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 95, 0, 5, 95, 0, 6, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 95, 1, -21, 95, 2, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 95, 1, -17, 95, 2, -17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 95, 5, -21, 95, 8, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 95, 5, -20, 95, 7, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 95, 5, -19, 95, 6, -19, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 96, -13, -80, 102, -10, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -13, -79, 98, -13, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -13, 68, 96, -13, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -12, -48, 113, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, -56, 97, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, -54, 97, -11, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, -26, 96, -11, -19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, -18, 110, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, -2, 99, -11, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, 28, 106, -11, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, 59, 96, -10, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, 61, 97, -11, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -11, 63, 101, -11, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -8, -35, 97, -8, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -7, -72, 99, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -7, -68, 111, -7, -38, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -7, -35, 97, -7, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -7, 3, 98, -7, 7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -6, -35, 97, -6, -33, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 96, -5, -3, 96, -4, -3, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 96, -4, 13, 96, -1, 13, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -1, -33, 96, -1, -32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 96, -1, -20, 96, -1, -18, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 96, -1, -8, 96, -1, -5, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 96, -1, 0, 96, -1, 1, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 96, -1, 3, 98, -1, 7, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 96, -1, 8, 96, -1, 9, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 96, 0, -1, 96, 0, 1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 96, 1, -21, 96, 2, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, 1, -17, 96, 2, -17, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 96, 5, -21, 96, 8, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 97, -14, -82, 102, -11, -82, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -14, -81, 99, -14, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -14, 69, 97, -14, 73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -13, 68, 100, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -12, -84, 97, -12, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -12, 8, 97, -12, 8, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -12, 21, 98, -12, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -12, 23, 111, -12, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -12, 65, 100, -12, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -12, 66, 97, -10, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -11, -26, 115, -11, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -11, 59, 99, -11, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -8, -37, 97, -7, -33, Blocks.DIRT.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -7, -9, 97, -7, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -7, -7, 106, -7, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -7, 8, 99, -7, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -7, 12, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -6, -70, 98, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -6, -37, 97, -6, -33, Blocks.FARMLAND.getDefaultState().with(FarmlandBlock.MOISTURE, 7));
        structure.fillWithBlocks(world, start, 97, -6, -9, 97, -6, -9, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -6, -7, 106, -6, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -6, 3, 98, -6, 7, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -6, 8, 99, -6, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -6, 12, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -5, -22, 100, -2, -22, Blocks.BOOKSHELF.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -5, -7, 97, -5, -4, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -5, 8, 97, -5, 10, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -5, 12, 97, -5, 13, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, -10, 97, -1, -10, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, -9, 97, -1, -9, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, -7, 97, -1, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, -6, 97, -3, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 97, -4, -5, 97, -1, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, -4, 97, -1, -4, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, 2, 97, -3, 2, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 97, -4, 8, 97, -2, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, 9, 97, -3, 10, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, 12, 97, -1, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -4, 13, 97, -1, 13, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -3, -8, 97, -2, -7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -3, 11, 97, -2, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -2, -6, 97, -1, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -2, 2, 98, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -2, 9, 97, -2, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -1, -20, 99, -1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -1, -8, 97, -1, -5, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -1, 8, 98, -1, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, -1, 10, 97, -1, 12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 0, -31, 97, 0, -31, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 97, 0, -18, 97, 0, -17, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 0, -8, 97, 0, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 97, 0, 0, 98, 0, 1, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 97, 1, -21, 97, 4, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 1, -20, 97, 2, -20, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 1, -18, 97, 2, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 1, -17, 97, 4, -17, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 2, -19, 97, 2, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 3, -20, 97, 3, -18, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 97, 4, -20, 97, 4, -18, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -14, 69, 100, -14, 69, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -14, 70, 100, -14, 72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -13, -84, 102, -13, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -13, 69, 100, -13, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -12, -83, 103, -12, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -12, 8, 99, -12, 9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -12, 66, 98, -9, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -12, 67, 99, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -12, 68, 99, -12, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -11, -81, 104, -11, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -11, -71, 103, -11, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -11, -55, 99, -11, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -11, -53, 105, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -11, -45, 100, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -11, 55, 98, -10, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -11, 57, 101, -11, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -8, -37, 101, -8, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -8, -33, 98, -7, -32, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -8, -14, 101, -8, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -8, -10, 109, -8, 1, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -8, 9, 99, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -8, 56, 104, -8, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -7, -37, 102, -7, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -7, -10, 110, -7, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -7, 11, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -6, -37, 102, -6, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -6, -9, 109, -6, 2, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -6, 11, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -5, -10, 99, -5, -10, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 98, -5, 8, 99, -5, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -4, -21, 98, -4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -4, 2, 98, -1, 2, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -4, 8, 98, -1, 8, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -3, -21, 98, -1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -2, 9, 98, -2, 12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 98, -1, -10, 99, -1, -5, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 98, -1, 9, 98, -1, 13, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 98, 0, -32, 98, 0, -32, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 98, 0, -31, 98, 0, -30, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 98, 0, -27, 98, 0, -27, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 98, 0, -14, 98, 0, -13, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 98, 3, -21, 99, 3, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 98, 3, -20, 99, 3, -20, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 98, 4, -21, 99, 4, -19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 99, -14, -85, 102, -14, -82, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -13, -79, 106, -10, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -13, -78, 100, -13, 68, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -12, 10, 100, -12, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -12, 12, 99, -9, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -12, 66, 99, -12, 67, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -11, 55, 99, -9, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -11, 56, 102, -11, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -11, 62, 104, -11, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -8, -33, 105, -8, -27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -7, -32, 99, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -7, -26, 103, -7, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -7, 3, 104, -7, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -7, 56, 103, -7, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -6, -26, 103, -6, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -6, 3, 104, -6, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -5, -36, 99, -5, -35, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.UP).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 99, -5, -33, 99, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -5, 3, 99, -5, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -5, 9, 99, -5, 9, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 99, -4, -33, 99, -1, -33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, -32, 99, -1, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, -27, 99, -1, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, -21, 99, -3, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, -11, 99, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, -10, 100, -4, -10, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 99, -4, 2, 99, -1, 2, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, 3, 99, -3, 4, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, 5, 99, -3, 5, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 99, -4, 6, 99, -3, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -4, 8, 99, -1, 8, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -2, 3, 99, -1, 7, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -2, 10, 99, -2, 13, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -1, -26, 102, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 99, -1, -21, 99, -1, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 0, -32, 99, 0, -32, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 99, 0, -18, 99, 2, -18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 99, 0, -15, 99, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 0, 4, 99, 0, 6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 99, 1, -32, 99, 1, -32, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 99, 1, -15, 99, 4, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 1, -14, 99, 4, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 1, -13, 99, 2, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 99, 1, -12, 99, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 1, -11, 99, 4, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 3, -18, 102, 3, -18, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 3, -13, 99, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 99, 4, -17, 100, 4, -16, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -14, -81, 101, -14, -80, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -12, 8, 107, -12, 15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -12, 16, 100, -9, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -12, 66, 103, -12, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -11, -55, 100, -11, -54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -11, -3, 105, -11, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -11, 55, 102, -11, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -8, 2, 106, -8, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -8, 9, 100, -7, 9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -8, 10, 111, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -7, -72, 103, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -7, -32, 104, -7, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -7, -27, 103, -7, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -7, 10, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, -44, 110, -6, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, -32, 104, -6, -28, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, -27, 103, -6, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, -21, 110, -5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, -20, 103, -6, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, -15, 102, -6, -12, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, -11, 111, -6, 8, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -6, 10, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -5, -33, 102, -5, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -5, -11, 103, -5, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -5, -10, 100, -4, -10, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 100, -5, -6, 100, -3, -6, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 100, -5, 8, 100, -5, 8, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 100, -5, 16, 100, -5, 17, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 100, -4, -33, 100, -1, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -4, -21, 104, -3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -4, -11, 102, -3, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -3, -31, 100, -3, -29, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.EAST).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 100, -2, -32, 100, -2, -28, Index.SMOOTH_SANDSTONE_VERTICAL_SLAB.getDefaultState().with(VerticalSlab.TYPE, VerticalSlabState.WEST).with(VerticalSlab.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 100, -2, -21, 103, -1, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -2, -11, 103, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -2, -10, 100, -2, -5, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -1, -35, 101, -1, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 100, -1, -31, 103, -1, -28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 100, -1, -27, 102, -1, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -1, -20, 104, -1, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, -1, -15, 103, 0, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, 0, -34, 100, 0, -34, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 100, 0, -33, 100, 0, -33, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 100, 0, -21, 100, 2, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 100, 1, -15, 100, 4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, 1, -11, 100, 4, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 100, 4, -21, 100, 4, -20, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 100, 4, -14, 100, 4, -12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 100, 5, -14, 100, 6, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 100, 5, -13, 100, 6, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 100, 5, -12, 100, 6, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 100, 7, -14, 102, 7, -12, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 101, -14, -79, 106, -10, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -14, 68, 103, -14, 71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -13, -78, 102, -13, -77, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -13, 67, 103, -13, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -13, 70, 102, -13, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, -76, 101, -12, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, -75, 101, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, -28, 107, -12, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, -21, 106, -12, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, -13, 101, -12, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, 20, 101, -9, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, 21, 116, -12, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, 39, 103, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -12, 65, 104, -12, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -11, -55, 102, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -11, -54, 109, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -11, -45, 101, -9, -43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -11, -42, 102, -11, -41, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -11, -40, 101, -9, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -11, 3, 121, -11, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -11, 61, 106, -11, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -8, -75, 104, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -8, 9, 111, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -7, -73, 104, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -7, 9, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -6, -70, 102, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -6, -68, 111, -6, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -6, 9, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -4, -33, 101, -3, -33, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 101, -2, -35, 103, -2, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 101, -2, -34, 103, -2, -34, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 101, -2, -33, 104, -1, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, -1, -32, 104, -1, -28, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 101, 1, -15, 101, 2, -15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 101, 1, -11, 101, 2, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 101, 2, -26, 101, 2, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 101, 2, -25, 101, 2, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 101, 3, -15, 102, 4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, 3, -11, 102, 4, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 101, 4, -17, 102, 4, -16, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 101, 4, -14, 101, 4, -14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 101, 4, -12, 102, 4, -12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 101, 5, -14, 101, 6, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 101, 5, -12, 101, 6, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 102, -14, -81, 104, -14, -79, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -13, -76, 108, -9, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -13, -75, 104, -13, 65, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -12, -75, 102, -12, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -12, -74, 102, -12, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -12, -29, 106, -12, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -12, -12, 102, -12, 64, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -11, -45, 102, -9, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -11, -44, 107, -11, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -11, -38, 102, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -11, 68, 103, -11, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -8, -37, 105, -8, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -8, -14, 103, -8, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -6, 59, 105, -6, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -5, -10, 102, -4, -10, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.SOUTH).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 102, -4, -33, 102, -1, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, -4, -22, 102, -3, -22, Index.HEDGE_OAK.getDefaultState().with(Hedge.STATE, HedgeState.NONE).with(Hedge.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 102, -1, -35, 103, -1, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 102, 0, -26, 102, 0, -26, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 102, 0, -25, 102, 0, -24, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.WEST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 102, 1, -15, 102, 4, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, 1, -11, 102, 4, -11, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 102, 2, -27, 102, 3, -27, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 102, 2, -26, 102, 4, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 102, 2, -25, 102, 3, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));

    }
    
    public static void generatePart25()
    {
        structure.fillWithBlocks(world, start, 102, 4, -14, 102, 4, -12, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 102, 5, -14, 102, 6, -14, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 102, 5, -13, 102, 6, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 102, 5, -12, 102, 6, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 103, -14, -85, 105, -14, -78, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -14, -77, 105, -14, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -13, -84, 103, -13, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -13, 66, 106, -13, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -12, -75, 105, -12, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -12, -72, 103, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -12, -30, 105, -12, -12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -12, -11, 120, -12, 11, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -12, 16, 116, -12, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -12, 64, 106, -12, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -11, -55, 112, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -11, -45, 109, -11, -38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -11, -37, 103, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -11, 4, 104, -11, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -11, 55, 117, -9, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -11, 56, 104, -11, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -11, 60, 109, -11, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -9, 64, 104, -9, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -7, -37, 106, -7, -34, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -7, -33, 103, -7, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -6, -70, 104, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -6, -33, 103, -6, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -6, -15, 107, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -5, -26, 103, -5, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -5, -19, 103, -5, -18, Index.STOOL_OAK.getDefaultState().with(Stool.PILLOW, StoolState.NONE));
        structure.fillWithBlocks(world, start, 103, -5, -15, 103, -5, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -4, -26, 103, -4, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -4, -15, 103, -2, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -4, -14, 103, -3, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -4, -11, 103, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -3, -33, 104, -2, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -3, -26, 103, -1, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, -2, -14, 103, 0, -11, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, 0, -26, 103, 4, -26, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 103, 0, -25, 103, 0, -24, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, true).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 103, 0, -23, 103, 0, -16, Blocks.SANDSTONE_WALL.getDefaultState().with(WallBlock.WATERLOGGED, false).with(WallBlock.UP, false).with(WallBlock.WALL_HEIGHT_NORTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_SOUTH, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_EAST, WallHeight.LOW).with(WallBlock.WALL_HEIGHT_WEST, WallHeight.LOW));
        structure.fillWithBlocks(world, start, 103, 1, -15, 103, 4, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, 1, -14, 103, 4, -14, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, 1, -13, 103, 2, -13, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 103, 1, -12, 103, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, 1, -11, 103, 4, -11, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 103, 2, -28, 103, 2, -28, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 103, 2, -27, 103, 4, -27, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 103, 2, -25, 103, 4, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 103, 3, -17, 103, 3, -16, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 103, 3, -13, 103, 4, -12, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -14, 67, 106, -14, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -14, 70, 105, -14, 70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -13, -83, 108, -13, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -12, -82, 107, -12, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -12, -70, 110, -12, -31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -12, 39, 105, -12, 40, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -12, 42, 108, -12, 46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -12, 47, 104, -12, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -11, -71, 104, -11, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -11, -70, 104, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -11, -56, 114, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -11, -37, 111, -11, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -11, -36, 106, -11, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -11, 6, 104, -11, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -11, 7, 104, -9, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -8, -14, 111, -8, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, -33, 104, -7, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, -27, 104, -7, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, -26, 104, -7, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, -21, 104, -6, -20, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, -18, 106, -7, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, -15, 107, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, 56, 107, -7, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -7, 60, 106, -7, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -6, -33, 104, -6, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -6, -27, 104, -6, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -6, -26, 104, -6, -22, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -6, -19, 107, -6, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -5, -33, 104, -5, -33, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -5, -31, 104, -5, -29, Blocks.SPRUCE_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 104, -5, -27, 105, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -5, -19, 104, -5, -18, Blocks.SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 104, -5, -15, 107, -5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -5, -13, 104, -5, -12, Blocks.BARREL.getDefaultState().with(BarrelBlock.PROPERTY_FACING, Direction.EAST).with(BarrelBlock.PROPERTY_OPEN, false));
        structure.fillWithBlocks(world, start, 104, -4, -35, 104, -3, -35, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 104, -4, -33, 104, -1, -33, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -4, -27, 104, -1, -27, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -4, -15, 105, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -2, -21, 109, -2, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -2, -15, 109, -2, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -2, -14, 104, -2, -12, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 104, -2, -11, 109, -2, -11, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 104, -1, -35, 104, -1, -34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 104, -1, -14, 105, -1, -12, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 104, 2, -28, 104, 2, -28, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 104, 2, -27, 104, 3, -27, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 104, 2, -26, 104, 4, -26, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 104, 2, -25, 104, 3, -25, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 105, -13, -75, 110, -9, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -12, 41, 112, -12, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -12, 50, 107, -12, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -12, 58, 106, -12, 62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -12, 63, 109, -12, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -11, -80, 108, -11, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -11, -68, 105, -11, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -11, -57, 116, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -11, 4, 115, -11, 14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -11, 15, 105, -9, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -11, 57, 105, -11, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -11, 59, 111, -11, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -9, 64, 105, -9, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -8, -74, 107, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -8, -26, 109, -8, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -8, -21, 110, -8, -15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -8, 56, 109, -8, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -8, 61, 106, -8, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -7, -72, 106, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -7, -33, 111, -7, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -7, -20, 109, -7, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -6, -70, 105, -6, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -6, -33, 111, -6, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -6, -20, 109, -6, -16, Blocks.SPRUCE_PLANKS.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -5, -33, 105, -5, -27, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -4, -33, 105, -1, -33, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -4, -32, 105, -1, -32, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -4, -31, 105, -3, -29, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 105, -4, -28, 105, -1, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -4, -27, 105, -1, -27, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -4, -21, 106, -3, -21, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 105, -2, -31, 105, -1, -28, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -1, -21, 109, -1, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 105, -1, -20, 109, -1, -16, Blocks.SMOOTH_SANDSTONE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 105, -1, -15, 109, -1, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -14, -84, 109, -14, -76, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -14, 65, 106, -14, 66, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -13, 65, 109, -13, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -12, -30, 106, -12, -30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -12, -12, 121, -12, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -12, 39, 107, -12, 39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -12, 40, 115, -12, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -11, -68, 106, -11, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -11, -67, 106, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -11, -58, 118, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -11, -3, 117, -11, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -11, 17, 107, -11, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -11, 56, 113, -11, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -9, 64, 107, -9, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -8, -37, 111, -8, -22, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -4, -15, 106, -3, -15, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 106, -2, -12, 107, -2, -11, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -1, -14, 107, -1, -13, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 106, -1, 4, 106, -1, 5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 106, 0, 4, 106, 1, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 106, 1, 5, 106, 1, 5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 106, 2, 5, 106, 2, 5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 107, -14, 65, 110, -14, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -14, 69, 109, -14, 69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -13, 63, 107, -13, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -12, -30, 108, -12, -29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -12, -21, 110, -12, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -12, -17, 107, -9, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -12, 58, 110, -12, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -11, -68, 108, -11, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -11, -66, 107, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -11, -36, 109, -11, -36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -11, -35, 123, -11, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -11, 31, 108, -11, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -11, 33, 108, -11, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -10, 65, 108, -10, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -8, 61, 107, -8, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -7, -71, 108, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -7, -37, 111, -7, -21, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -5, 5, 107, 1, 5, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -4, -21, 109, -3, -21, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -4, -15, 107, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 107, -3, -20, 109, -3, -20, Index.CABINET_OAK.getDefaultState().with(Cabinet.FACING, Direction.SOUTH).with(Cabinet.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 107, -1, 2, 107, -1, 2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 107, -1, 3, 107, -1, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 107, -1, 6, 108, -1, 6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 107, -1, 7, 108, -1, 7, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 107, 0, 3, 107, 0, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 107, 0, 4, 107, 1, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 107, 0, 6, 107, 1, 6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 107, 2, 4, 107, 2, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 108, -14, -75, 108, -14, -75, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -14, -74, 108, -14, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -14, 64, 111, -14, 68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -13, -74, 112, -9, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -13, -73, 109, -13, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -13, 62, 112, -13, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -12, -81, 109, -12, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -12, -28, 123, -12, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -12, 12, 119, -12, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -12, 39, 119, -12, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -12, 51, 109, -12, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -12, 55, 108, -12, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -12, 57, 114, -12, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -11, -66, 108, -11, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -11, -65, 108, -11, -60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -11, -59, 117, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -11, 17, 108, -11, 17, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -11, 18, 108, -11, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -11, 29, 111, -11, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -8, -73, 109, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -7, -14, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -7, 56, 109, -7, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -6, -14, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -3, -15, 109, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -2, -12, 109, -2, -11, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -1, -14, 109, -1, -13, Blocks.WHITE_WOOL.getDefaultState());
        structure.fillWithBlocks(world, start, 108, -1, 2, 108, -1, 2, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 108, -1, 3, 108, -1, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 108, -1, 4, 108, -1, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 108, 0, -20, 108, 0, -19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 108, 0, 3, 108, 0, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 108, 0, 4, 108, 1, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 108, 0, 5, 108, 1, 5, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 108, 0, 6, 108, 1, 6, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 108, 1, -20, 108, 1, -19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 109, -14, -75, 110, -14, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -14, -73, 109, -14, 63, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -13, -82, 110, -13, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -13, 61, 113, -13, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -12, -30, 124, -12, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -12, 55, 116, -12, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, -79, 110, -11, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, -64, 109, -11, -61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, -60, 117, -11, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, 17, 110, -11, 18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, 19, 109, -11, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, 33, 111, -11, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, 34, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -11, 53, 116, -11, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -10, -77, 111, -10, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -10, 64, 110, -10, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -9, -73, 114, -9, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -9, 60, 110, -9, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -7, -70, 110, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -7, -15, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -6, -15, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -5, -15, 110, -5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -5, -11, 109, -3, -11, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 109, -4, -15, 109, -3, -15, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 109, -1, 3, 109, -1, 3, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 3));
        structure.fillWithBlocks(world, start, 109, -1, 4, 109, -1, 4, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 2));
        structure.fillWithBlocks(world, start, 109, 0, -21, 109, 0, -21, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 109, 0, -20, 109, 0, -19, Blocks.STRIPPED_SPRUCE_LOG.getDefaultState());
        structure.fillWithBlocks(world, start, 109, 1, -20, 109, 1, -19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 110, -14, -83, 111, -14, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -14, -72, 115, -14, 58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -14, 59, 112, -14, 61, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -14, 63, 113, -14, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -13, -73, 114, -9, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -13, -72, 111, -13, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -13, 67, 111, -13, 67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -12, -80, 111, -12, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -12, 51, 111, -11, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -12, 52, 112, -12, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -12, 65, 111, -12, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, -64, 110, -11, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, -63, 110, -11, -62, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, -61, 117, -11, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, -44, 111, -11, -37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, -36, 123, -11, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, 19, 110, -11, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, 20, 110, -11, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -11, 28, 113, -11, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -8, -72, 111, -8, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -8, 56, 112, -8, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -8, 59, 110, -8, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -7, -20, 111, -7, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -7, 56, 110, -7, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -6, -20, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -5, -20, 110, -5, -15, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -4, -21, 110, -1, -21, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -4, -20, 110, -3, -19, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -4, -18, 110, -3, -18, Blocks.SPRUCE_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 110, -4, -17, 110, -3, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -4, -15, 110, -1, -15, Blocks.CUT_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -2, -20, 110, -2, -16, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, -1, -20, 110, -1, -16, Blocks.SMOOTH_SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 110, 0, -20, 110, 0, -19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 1));
        structure.fillWithBlocks(world, start, 111, -14, 62, 115, -14, 66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -13, -81, 111, -13, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -13, 60, 115, -13, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -12, -70, 115, -8, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -12, -69, 112, -12, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -12, -52, 111, -12, 38, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -11, -78, 112, -11, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -11, -6, 112, -11, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -11, -4, 119, -11, 5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -11, 17, 114, -11, 20, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -11, 21, 111, -9, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -11, 27, 114, -11, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -9, 60, 112, -9, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -8, -21, 111, -6, 55, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -7, -69, 111, -7, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 111, -3, -20, 111, -1, -20, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 111, -2, -19, 111, -1, -19, Blocks.BIRCH_LEAVES.getDefaultState().with(LeavesBlock.PERSISTENT, true).with(LeavesBlock.DISTANCE, 7));
        structure.fillWithBlocks(world, start, 112, -14, -82, 112, -14, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -13, -80, 113, -13, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -13, -71, 113, -13, 57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -13, 59, 116, -13, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -12, -79, 113, -12, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -12, -52, 113, -12, -51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -12, -50, 124, -12, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -12, 37, 115, -12, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -12, 38, 124, -12, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -12, 51, 113, -12, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -12, 65, 113, -12, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -11, -44, 112, -11, -44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -11, -43, 112, -11, -39, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -11, -38, 123, -11, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -11, 21, 113, -11, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -11, 23, 112, -10, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -11, 25, 115, -11, 30, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -11, 33, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -10, -76, 112, -10, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -8, -71, 113, -8, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -7, -69, 112, -7, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -6, -65, 113, -6, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 112, -6, 49, 112, -6, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -14, -81, 114, -14, -74, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -14, -73, 113, -9, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -14, 59, 113, -14, 60, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -14, 61, 117, -14, 65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -13, 58, 117, -13, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -12, -69, 113, -12, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -12, -68, 113, -12, -53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -12, 53, 119, -12, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -11, -77, 114, -11, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -11, -40, 124, -11, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -11, -6, 114, -10, -6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -11, -5, 121, -11, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -11, 23, 116, -11, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -10, -75, 114, -10, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 113, -7, -68, 113, -7, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -14, -73, 114, -14, 59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -14, 60, 118, -14, 64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -13, -79, 115, -13, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -13, -70, 115, -13, 44, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -13, 45, 114, -13, 47, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -13, 48, 114, -12, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -13, 50, 116, -13, 53, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -13, 54, 115, -13, 55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -13, 57, 118, -13, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -12, -78, 114, -12, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -12, -66, 114, -12, -52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -12, -51, 114, -6, -51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -12, 51, 121, -12, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -11, -41, 125, -11, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -11, 21, 117, -11, 25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -11, 32, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -11, 62, 114, -11, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -8, -69, 116, -8, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -8, 54, 115, -8, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -7, -67, 114, -7, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 114, -6, -64, 114, -6, 36, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -14, -80, 115, -14, -73, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -14, 59, 119, -14, 63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -13, 45, 116, -13, 46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -13, 47, 115, -12, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -13, 49, 117, -13, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -13, 56, 120, -13, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -12, -77, 116, -12, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -12, -65, 115, -12, 37, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -11, -76, 115, -11, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -11, -6, 121, -11, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -11, 17, 118, -11, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -11, 31, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -10, -74, 115, -10, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -9, -72, 115, -9, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -7, -66, 115, -7, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 115, -6, -63, 115, -6, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -14, -79, 117, -14, -72, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -14, -71, 117, -14, 56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -14, 58, 120, -14, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -13, -78, 116, -13, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -13, -69, 116, -13, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -13, 37, 121, -13, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -13, 43, 117, -13, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -13, 47, 117, -13, 51, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -13, 54, 121, -13, 60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -12, -65, 116, -12, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -12, -64, 116, -12, 36, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -12, 37, 125, -12, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -11, -75, 116, -11, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -11, -7, 121, -11, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -11, 29, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -10, -73, 117, -10, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -9, -71, 117, -9, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -7, -65, 116, -7, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 116, -6, -62, 116, -6, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -14, 57, 121, -14, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -13, -77, 118, -13, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -13, -68, 117, -13, 35, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -13, 36, 123, -13, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -13, 45, 118, -13, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -13, 52, 122, -13, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -12, -76, 117, -12, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -12, -63, 117, -12, 29, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -12, 30, 124, -12, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -12, 61, 117, -12, 62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -11, -74, 118, -11, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -11, -44, 131, -11, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -11, -8, 117, -6, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -11, 26, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -11, 53, 120, -11, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -11, 58, 118, -11, 59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -8, -68, 117, -8, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -7, -64, 117, -7, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -6, -60, 117, -6, 2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 117, -6, 8, 117, -6, 14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -14, -78, 118, -14, -71, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -14, -70, 118, -14, 54, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -14, 55, 122, -14, 61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -13, -68, 118, -13, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -13, -67, 118, -13, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -13, 35, 125, -13, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -13, 43, 118, -8, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -13, 44, 118, -13, 48, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -13, 49, 124, -13, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -12, -75, 118, -12, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -12, -61, 123, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -12, -55, 122, -12, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -12, 26, 118, -12, 27, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -12, 28, 124, -12, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -11, -61, 118, -11, -59, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -11, -45, 132, -11, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -11, -8, 121, -11, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -11, 6, 118, -11, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -11, 8, 121, -11, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -11, 12, 118, -11, 21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -11, 22, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -10, -72, 118, -10, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -9, -70, 118, -9, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -8, -67, 118, -8, 48, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -7, -62, 118, -7, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -6, -54, 118, -6, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 118, -6, 11, 118, -6, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -14, -77, 120, -14, -70, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -14, -69, 119, -14, 52, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -14, 53, 124, -14, 58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -13, -76, 119, -13, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -13, -66, 119, -13, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -13, 34, 125, -13, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -13, 44, 126, -13, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -12, -74, 120, -12, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -12, -62, 119, -8, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -12, 26, 124, -12, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -11, -73, 119, -11, -61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -11, -60, 119, -11, -58, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -11, -57, 119, -11, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -11, 6, 128, -11, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -11, 18, 124, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -10, -71, 119, -10, 56, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -9, -69, 119, -9, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -8, -66, 119, -8, 43, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -7, -60, 119, -7, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 119, -6, -53, 119, -6, -6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -14, -69, 120, -14, -69, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -14, -68, 120, -14, 33, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -14, 34, 127, -14, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -14, 43, 121, -14, 45, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -14, 46, 120, -14, 50, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -14, 51, 125, -14, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -13, -75, 120, -13, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -13, -65, 120, -13, 32, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -13, 33, 125, -13, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -12, -62, 122, -12, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -12, 12, 125, -12, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -12, 18, 120, -12, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -12, 25, 124, -12, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -11, -72, 120, -11, -60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -11, -59, 120, -11, -57, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -11, -56, 120, -11, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -11, 5, 128, -11, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -11, 17, 125, -11, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -10, -70, 120, -10, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -9, -68, 120, -9, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -8, -65, 120, -8, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -7, -59, 120, -7, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 120, -6, -51, 120, -6, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -14, -76, 121, -14, -68, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -14, -67, 121, -14, 31, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -14, 32, 126, -14, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -14, 46, 127, -14, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -13, -74, 122, -13, -65, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -13, -64, 121, -13, 24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -13, 25, 125, -13, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -12, -73, 121, -12, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -12, -63, 122, -12, 3, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -12, 6, 129, -12, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -12, 18, 122, -12, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -12, 20, 121, -12, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -12, 23, 124, -12, 53, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -11, -71, 121, -11, -59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -11, -58, 121, -11, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -11, -55, 121, -11, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -11, 4, 128, -11, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -11, 53, 121, -11, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -10, -69, 121, -10, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -9, -67, 121, -9, 45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -8, -64, 121, -8, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -7, -58, 121, -7, 5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 121, -6, -48, 121, -6, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -14, -75, 123, -14, -67, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -14, -66, 122, -14, 28, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -14, 29, 125, -14, 57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -13, -64, 122, -13, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -13, -63, 122, -13, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -13, 23, 125, -13, 54, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -12, -72, 122, -12, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -12, 4, 129, -12, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -12, 20, 125, -12, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -12, 54, 123, -12, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -11, -70, 122, -11, -57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -11, -56, 122, -11, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -11, -54, 130, -11, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -11, -8, 122, -11, -5, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -11, -4, 130, -11, 5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -10, -68, 122, -10, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -9, -66, 122, -9, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -8, -63, 122, -8, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -7, -56, 122, -7, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 122, -6, -46, 122, -6, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -14, -66, 123, -14, -66, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -14, -65, 123, -14, 22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -14, 23, 126, -14, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -13, -73, 123, -13, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -13, -62, 125, -13, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -13, 8, 123, -13, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -13, 17, 127, -13, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, -71, 123, -12, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, -55, 123, -12, -55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, -54, 123, -12, -9, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, -8, 124, -12, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, -6, 125, -12, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, 2, 124, -12, 2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, 3, 130, -12, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -12, 18, 126, -12, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -11, -69, 123, -11, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -10, -67, 123, -10, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -10, 39, 123, -10, 44, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -9, -65, 123, -9, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -8, -61, 123, -8, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -7, -54, 123, -7, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 123, -6, -45, 123, -6, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -14, -74, 124, -14, -64, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -14, -63, 124, -14, 19, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -14, 20, 128, -14, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -13, -72, 124, -13, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -13, 9, 130, -13, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -12, -70, 124, -12, -61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -12, -60, 124, -12, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -12, -55, 124, -12, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -12, -51, 124, -12, -13, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -12, -12, 129, -12, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -11, -68, 124, -11, -28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -11, -27, 126, -11, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -11, -24, 124, -11, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -11, 36, 124, -11, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -10, -66, 124, -10, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -9, -63, 124, -9, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -8, -60, 124, -8, 12, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -7, -51, 124, -7, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 124, -6, -43, 124, -6, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -14, -73, 125, -14, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -14, -62, 125, -14, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -14, 8, 130, -14, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -14, 14, 125, -14, 16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -14, 17, 129, -14, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -13, -71, 125, -13, -63, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -13, 8, 130, -13, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -12, -69, 125, -12, -59, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -12, -58, 125, -12, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -12, -54, 129, -12, -50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -12, -49, 125, -12, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -12, -17, 133, -12, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -12, 2, 130, -12, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -12, 36, 125, -12, 51, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -11, -67, 125, -11, -29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -11, -28, 126, -11, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -11, -23, 125, -11, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -10, -65, 125, -10, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -9, -62, 125, -9, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -8, -58, 125, -8, 7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -7, -49, 125, -7, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 125, -6, -32, 125, -6, -23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -14, -72, 126, -14, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -14, -61, 126, -14, 7, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -14, 14, 130, -14, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -14, 43, 128, -14, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -14, 54, 126, -14, 55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -13, -70, 126, -13, -62, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -13, -61, 126, -13, 1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -13, 2, 131, -13, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -13, 24, 126, -13, 25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -13, 35, 126, -13, 52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -68, 126, -12, -57, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -56, 126, -12, -55, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -49, 129, -12, -46, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -45, 126, -12, -22, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -21, 134, -12, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -6, 126, -12, -6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -5, 126, -12, -2, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, -1, 131, -12, 6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, 17, 128, -12, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -12, 40, 126, -12, 47, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -11, -65, 126, -11, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -11, -29, 126, -11, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -11, -22, 134, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -11, -12, 131, -11, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -11, 17, 127, -11, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -11, 19, 126, -11, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -10, -63, 126, -10, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -9, -61, 126, -9, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -8, -56, 126, -8, -2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 126, -7, -45, 126, -7, -22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -14, -71, 127, -14, -61, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -14, -60, 127, -14, 6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -14, 7, 132, -14, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -14, 25, 127, -14, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, -68, 127, -13, -60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, -59, 127, -13, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, -55, 127, -13, -55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, -54, 127, -13, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, -5, 128, -13, -4, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, -3, 127, -13, -1, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, 0, 132, -13, 7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -13, 38, 127, -13, 49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -12, -66, 127, -12, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -12, -29, 130, -12, -25, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -12, -24, 127, -12, -23, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -12, -22, 135, -12, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -12, -6, 132, -12, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -12, 20, 127, -12, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -11, -64, 127, -11, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -10, -61, 127, -10, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -9, -59, 127, -9, 8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -8, -54, 127, -8, -6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 127, -7, -25, 127, -7, -24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -14, -69, 128, -14, -60, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -14, -59, 128, -14, 0, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -14, 1, 133, -14, 9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -14, 37, 128, -14, 50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -13, -67, 128, -13, -58, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -13, -57, 128, -13, -56, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -13, -55, 131, -13, -52, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -13, -51, 128, -13, -10, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -13, -9, 133, -13, -1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -13, 17, 129, -13, 19, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -13, 20, 128, -13, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -12, -64, 128, -12, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -12, -24, 129, -12, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -12, -23, 135, -12, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -11, -62, 128, -11, 16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -10, -60, 128, -10, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -9, -57, 128, -9, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 128, -8, -51, 128, -8, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -14, -68, 129, -14, -55, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -14, -54, 129, -14, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -14, -13, 131, -14, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -14, -10, 129, -14, -6, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -14, -5, 134, -14, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -13, -65, 129, -13, -49, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -13, -48, 129, -13, -14, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -13, -13, 134, -13, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -12, -63, 129, -12, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -11, -60, 129, -11, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -10, -58, 129, -10, 3, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -9, -54, 129, -9, -6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 129, -8, -48, 129, -8, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -14, -66, 130, -14, -50, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -14, -49, 130, -14, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -14, -14, 135, -14, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -13, -63, 130, -13, -42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -13, -41, 130, -13, -18, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -13, -17, 135, -13, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -12, -61, 130, -12, -30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -12, -24, 136, -12, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -12, -7, 132, -12, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -11, -58, 130, -11, 5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -10, -54, 130, -10, -2, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -9, -49, 130, -9, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 130, -8, -41, 130, -8, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -14, -64, 131, -14, -45, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -14, -44, 131, -14, -15, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -14, 14, 131, -14, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -13, -61, 131, -13, -26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -13, -25, 131, -13, -24, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -13, -23, 137, -13, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -12, -58, 131, -12, 6, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -11, -53, 131, -11, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -10, -48, 131, -10, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -9, -44, 131, -9, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 131, -8, -25, 131, -8, -24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -14, -62, 132, -14, -32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -14, -31, 132, -14, -16, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -14, -15, 136, -14, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -13, -58, 132, -13, 7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -12, -51, 132, -12, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -11, -46, 132, -11, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -10, -42, 132, -10, -11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 132, -9, -31, 132, -9, -16, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -14, -58, 133, -14, -25, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -14, -24, 133, -14, -21, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -14, -20, 137, -14, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -13, -48, 133, -13, -1, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -12, -43, 133, -12, -8, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -11, -39, 133, -11, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -10, -31, 133, -10, -14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 133, -9, -24, 133, -9, -21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 134, -14, -46, 134, -14, 0, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 134, -13, -42, 134, -13, -7, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 134, -12, -36, 134, -12, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 134, -11, -30, 134, -11, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 134, -10, -25, 134, -10, -18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 135, -14, -42, 135, -14, -5, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 135, -13, -36, 135, -13, -10, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 135, -12, -30, 135, -12, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 135, -11, -25, 135, -11, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 136, -14, -37, 136, -14, -9, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 136, -13, -31, 136, -13, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 136, -12, -25, 136, -12, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 137, -14, -33, 137, -14, -13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 137, -13, -26, 137, -13, -17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 138, -14, -29, 138, -14, -17, Blocks.SAND.getDefaultState());

    }

}
