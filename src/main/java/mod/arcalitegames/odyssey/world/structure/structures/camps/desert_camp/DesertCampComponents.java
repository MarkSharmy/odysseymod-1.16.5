package mod.arcalitegames.odyssey.world.structure.structures.camps.desert_camp;

import mod.arcalitegames.odyssey.world.structure.StructureBase;
import net.minecraft.block.BedBlock;
import net.minecraft.block.Blocks;
import net.minecraft.block.CactusBlock;
import net.minecraft.block.CampfireBlock;
import net.minecraft.block.CauldronBlock;
import net.minecraft.block.FourWayBlock;
import net.minecraft.block.HorizontalBlock;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.TrapDoorBlock;
import net.minecraft.state.properties.BedPart;
import net.minecraft.state.properties.Half;
import net.minecraft.state.properties.SlabType;
import net.minecraft.util.Direction;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class DesertCampComponents
{
	public static BlockPos start;
    public static World world;
    public static StructureBase structure;

    public static void init(World worldIn, BlockPos blockPos, StructureBase structureIn)
    {
        world = worldIn; start = blockPos; structure = structureIn;
    }
    
    public static void generatePart1()
    {
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 11, 7, 9, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 11, 7, 31, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 11, 7, 34, start);
        structure.setBlockState(world, Blocks.SAND.getDefaultState(), 13, 6, 23, start);
        structure.setBlockState(world, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.HEAD), 14, 6, 25, start);
        structure.setBlockState(world, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(BedBlock.PART, BedPart.FOOT), 15, 6, 25, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 15, 7, 10, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 15, 7, 18, start);
        structure.setBlockState(world, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 0), 15, 7, 33, start);
        structure.setBlockState(world, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 14), 15, 8, 33, start);
        structure.setBlockState(world, Blocks.BROWN_TERRACOTTA.getDefaultState(), 15, 10, 25, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 16, 7, 9, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 17, 7, 25, start);
        structure.setBlockState(world, Blocks.BROWN_TERRACOTTA.getDefaultState(), 17, 9, 25, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false), 18, 9, 25, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 18, 9, 26, start);
        structure.setBlockState(world, Blocks.SAND.getDefaultState(), 19, 6, 14, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 19, 9, 25, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 20, 6, 15, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 20, 7, 24, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 20, 9, 28, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 21, 6, 17, start);
        structure.setBlockState(world, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.FOOT), 21, 6, 31, start);
        structure.setBlockState(world, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(BedBlock.PART, BedPart.HEAD), 21, 6, 32, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 21, 7, 29, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false), 21, 9, 22, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 21, 9, 23, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false), 21, 9, 28, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 21, 10, 19, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 22, 7, 25, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 22, 9, 22, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 22, 9, 28, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 23, 9, 30, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 23, 9, 33, start);
        structure.setBlockState(world, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true), 24, 7, 33, start);
        structure.setBlockState(world, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false), 24, 8, 33, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 24, 9, 15, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 24, 9, 20, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 24, 9, 29, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false), 24, 9, 33, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 24, 9, 34, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 24, 10, 33, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 24, 12, 31, start);
        structure.setBlockState(world, Blocks.CAMPFIRE.getDefaultState().with(CampfireBlock.FACING, Direction.EAST).with(CampfireBlock.LIT, true).with(CampfireBlock.SIGNAL_FIRE, false).with(CampfireBlock.WATERLOGGED, false), 25, 7, 25, start);
        structure.setBlockState(world, Blocks.CAULDRON.getDefaultState().with(CauldronBlock.LEVEL, 0), 25, 8, 25, start);
        structure.setBlockState(world, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false), 25, 9, 24, start);
        structure.setBlockState(world, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false), 25, 9, 25, start);
        structure.setBlockState(world, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false), 25, 9, 26, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 25, 12, 30, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 25, 12, 31, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 25, 12, 32, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false), 25, 13, 31, start);
        structure.setBlockState(world, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 1), 26, 7, 14, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 26, 7, 31, start);
        structure.setBlockState(world, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 10), 26, 8, 14, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 26, 12, 31, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 26, 12, 32, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 27, 12, 31, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 27, 12, 32, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 27, 12, 33, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false), 27, 13, 32, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 28, 7, 17, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 28, 9, 29, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false), 28, 9, 30, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false), 28, 9, 33, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 28, 9, 34, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 28, 10, 30, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 28, 10, 33, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 28, 12, 32, start);
        structure.setBlockState(world, Blocks.SAND.getDefaultState(), 29, 6, 21, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 29, 7, 23, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 29, 9, 22, start);
        structure.setBlockState(world, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false), 29, 9, 24, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 29, 9, 30, start);
        structure.setBlockState(world, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true), 29, 9, 33, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 30, 7, 9, start);
        structure.setBlockState(world, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.FOOT), 31, 6, 23, start);
        structure.setBlockState(world, Blocks.BROWN_TERRACOTTA.getDefaultState(), 31, 10, 23, start);
        structure.setBlockState(world, Blocks.WHITE_BED.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(BedBlock.PART, BedPart.HEAD), 32, 6, 23, start);
        structure.setBlockState(world, Blocks.AIR.getDefaultState(), 32, 7, 32, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 34, 7, 32, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 35, 7, 12, start);
        structure.setBlockState(world, Blocks.DEAD_BUSH.getDefaultState(), 36, 7, 23, start);
        structure.fillWithBlocks(world, start, 1, 0, 15, 26, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 0, 5, 38, 0, 41, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 2, 1, 19, 20, 1, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 0, 3, 40, 0, 42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 1, 11, 32, 1, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 2, 16, 26, 2, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 3, 3, 20, 13, 3, 30, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 5, 39, 1, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 1, 41, 38, 1, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 2, 9, 35, 2, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 3, 14, 29, 3, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 4, 16, 11, 4, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 4, 5, 20, 11, 5, 27, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 2, 39, 0, 42, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 0, 43, 38, 0, 43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 1, 4, 39, 1, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 2, 5, 39, 2, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 2, 41, 37, 2, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 3, 6, 38, 3, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 4, 12, 11, 4, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 5, 5, 15, 11, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 3, 37, 1, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 1, 42, 13, 1, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 2, 4, 38, 2, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 3, 5, 38, 3, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, 5, 12, 4, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 4, 40, 12, 4, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 5, 10, 11, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 6, 19, 12, 6, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 6, 7, 28, 6, 9, 28, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 0));
        structure.fillWithBlocks(world, start, 7, 3, 4, 23, 3, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 3, 41, 10, 3, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 5, 6, 12, 5, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 6, 15, 14, 6, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 7, 7, 18, 7, 9, 18, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 0));
        structure.fillWithBlocks(world, start, 8, 0, 1, 34, 0, 43, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 8, 6, 8, 18, 6, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, 12, 12, 5, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 4, 35, 16, 4, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 5, 35, 15, 5, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 5, 39, 14, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 12, 7, 37, 12, 9, 37, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 0));
        structure.fillWithBlocks(world, start, 13, 4, 5, 19, 4, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, 12, 34, 5, 12, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, 13, 18, 4, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 4, 34, 34, 5, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 5, 6, 18, 5, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 5, 13, 18, 5, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 6, 24, 13, 8, 26, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 13, 6, 27, 13, 6, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 23, 16, 8, 23, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 24, 16, 6, 24, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 6, 26, 16, 6, 26, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 14, 6, 27, 16, 8, 27, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 6, 28, 18, 6, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 14, 7, 14, 14, 9, 14, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 0));
        structure.fillWithBlocks(world, start, 14, 9, 24, 16, 9, 26, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 5, 35, 19, 5, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 16, 6, 25, 16, 6, 26, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 17, 4, 35, 21, 4, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 23, 17, 6, 23, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 24, 17, 6, 26, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 6, 27, 19, 6, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 7, 24, 17, 8, 24, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 17, 7, 26, 17, 8, 26, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 6, 23, 23, 6, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 18, 7, 15, 18, 8, 15, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 18, 7, 17, 18, 8, 18, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 18, 7, 20, 18, 8, 20, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 18, 7, 24, 18, 8, 24, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 18, 7, 26, 18, 8, 26, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 18, 9, 15, 18, 9, 15, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, 9, 20, 19, 9, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 18, 9, 24, 18, 9, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 19, 4, 13, 21, 4, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, 16, 19, 6, 16, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, 17, 20, 4, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, 19, 19, 6, 19, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 4, 20, 24, 4, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, 6, 24, 5, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, 13, 21, 5, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, 17, 20, 5, 18, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, 20, 24, 5, 32, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, 33, 19, 7, 33, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 5, 39, 37, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 8, 23, 6, 13, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 15, 19, 6, 20, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 21, 19, 6, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 30, 19, 8, 32, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 6, 34, 22, 6, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 7, 15, 19, 8, 15, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 7, 16, 19, 8, 16, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 19, 7, 17, 19, 8, 18, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 7, 19, 19, 8, 19, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 19, 7, 20, 19, 8, 20, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 19, 7, 25, 19, 8, 25, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 19, 9, 15, 19, 9, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 4, 5, 26, 4, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, 16, 22, 4, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 4, 40, 37, 4, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 5, 16, 22, 5, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 5, 35, 24, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 14, 22, 8, 14, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 20, 22, 6, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 6, 21, 22, 6, 21, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 22, 24, 6, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 29, 22, 6, 29, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 6, 30, 20, 6, 32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 6, 33, 22, 8, 33, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 7, 13, 20, 8, 13, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 7, 21, 20, 8, 21, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 7, 22, 20, 8, 22, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 7, 28, 20, 8, 28, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 20, 7, 29, 20, 8, 29, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 9, 13, 20, 9, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 9, 15, 22, 9, 18, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 9, 19, 20, 9, 20, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 9, 22, 20, 9, 22, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 20, 9, 30, 22, 9, 32, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 20, 10, 17, 20, 10, 18, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 1, 42, 36, 1, 42, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 6, 30, 21, 6, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 7, 23, 21, 8, 23, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 21, 7, 27, 21, 8, 27, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 21, 9, 14, 22, 9, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 9, 20, 21, 9, 21, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 9, 27, 21, 9, 27, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 9, 29, 21, 9, 33, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 10, 16, 21, 10, 16, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 21, 10, 17, 21, 10, 18, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 21, 10, 31, 21, 10, 32, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 4, 13, 24, 4, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 4, 35, 27, 4, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 5, 13, 24, 5, 15, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 6, 30, 22, 6, 32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 7, 13, 22, 8, 13, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 22, 7, 21, 22, 8, 21, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 7, 22, 22, 8, 22, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 22, 7, 28, 22, 8, 28, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 22, 7, 29, 22, 8, 29, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 9, 13, 22, 9, 14, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 22, 9, 19, 22, 9, 20, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 22, 10, 17, 22, 10, 18, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 3, 41, 36, 3, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 4, 16, 23, 6, 16, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 4, 17, 23, 4, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 4, 18, 23, 6, 18, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 4, 19, 28, 4, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 5, 17, 23, 5, 17, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 5, 19, 28, 5, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 5, 33, 23, 7, 33, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, 14, 23, 6, 14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, 15, 23, 6, 20, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, 21, 26, 6, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, 29, 23, 6, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, 30, 23, 8, 32, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 6, 34, 27, 6, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 7, 15, 23, 8, 15, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 7, 16, 23, 8, 16, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 23, 7, 17, 23, 8, 17, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 7, 18, 23, 8, 18, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, true).with(FourWayBlock.SOUTH, true).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 23, 7, 19, 23, 8, 20, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 23, 9, 15, 23, 9, 20, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 23, 9, 31, 23, 9, 32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.WEST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 24, 4, 16, 32, 4, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 5, 16, 32, 5, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 5, 33, 33, 6, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 6, 9, 35, 6, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 6, 29, 33, 6, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 24, 7, 15, 24, 8, 15, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, 7, 19, 24, 8, 19, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 24, 7, 20, 24, 8, 20, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, 7, 30, 24, 8, 30, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, true));
        structure.fillWithBlocks(world, start, 24, 8, 31, 24, 8, 32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 24, 9, 30, 25, 9, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.DOUBLE).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 9, 31, 24, 9, 32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 24, 10, 30, 25, 10, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 4, 13, 33, 4, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, 25, 25, 6, 25, Blocks.NETHERRACK.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 4, 26, 32, 4, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 5, 6, 30, 5, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 5, 13, 33, 5, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 5, 26, 32, 5, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 5, 35, 29, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 6, 26, 37, 6, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 25, 7, 24, 25, 8, 24, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 25, 7, 26, 25, 8, 26, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 25, 8, 30, 27, 8, 30, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 25, 8, 33, 27, 8, 33, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 25, 9, 29, 27, 9, 29, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 25, 9, 31, 26, 9, 32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 9, 33, 27, 9, 33, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 9, 34, 26, 9, 34, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.SOUTH).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 25, 10, 24, 25, 10, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 25, 10, 31, 25, 11, 31, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 26, 4, 25, 33, 4, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 5, 25, 33, 5, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 6, 25, 29, 6, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 26, 9, 30, 27, 9, 30, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 4, 5, 33, 4, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 6, 21, 28, 6, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 27, 9, 31, 27, 9, 32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.TOP).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 27, 10, 32, 27, 11, 32, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 28, 4, 35, 33, 4, 40, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 28, 7, 22, 28, 8, 22, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 28, 7, 24, 28, 8, 24, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, true).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 28, 7, 26, 28, 9, 26, Blocks.CACTUS.getDefaultState().with(CactusBlock.AGE, 0));
        structure.fillWithBlocks(world, start, 28, 7, 30, 28, 8, 30, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 28, 7, 33, 28, 8, 33, Blocks.OAK_FENCE.getDefaultState().with(FourWayBlock.WATERLOGGED, false).with(FourWayBlock.NORTH, false).with(FourWayBlock.SOUTH, false).with(FourWayBlock.EAST, false).with(FourWayBlock.WEST, false));
        structure.fillWithBlocks(world, start, 28, 8, 31, 28, 8, 32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.NORTH).with(TrapDoorBlock.HALF, Half.TOP).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, false));
        structure.fillWithBlocks(world, start, 28, 9, 22, 28, 9, 24, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 28, 9, 31, 28, 9, 32, Blocks.SPRUCE_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 29, 6, 22, 29, 6, 24, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 7, 22, 29, 8, 22, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 7, 24, 29, 8, 24, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 9, 23, 29, 9, 23, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 29, 9, 31, 29, 9, 32, Blocks.OAK_TRAPDOOR.getDefaultState().with(HorizontalBlock.HORIZONTAL_FACING, Direction.EAST).with(TrapDoorBlock.HALF, Half.BOTTOM).with(TrapDoorBlock.WATERLOGGED, false).with(TrapDoorBlock.POWERED, false).with(TrapDoorBlock.OPEN, true));
        structure.fillWithBlocks(world, start, 30, 5, 35, 34, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, 21, 32, 8, 21, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 6, 22, 30, 6, 24, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 30, 6, 25, 32, 8, 25, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 30, 9, 22, 32, 9, 24, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 5, 6, 36, 5, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 31, 6, 22, 32, 6, 22, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 31, 6, 24, 32, 6, 24, Blocks.OAK_SLAB.getDefaultState().with(SlabBlock.TYPE, SlabType.BOTTOM).with(SlabBlock.WATERLOGGED, false));
        structure.fillWithBlocks(world, start, 32, 6, 8, 36, 6, 20, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, 21, 33, 6, 21, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, 22, 33, 8, 24, Blocks.BROWN_TERRACOTTA.getDefaultState());
        structure.fillWithBlocks(world, start, 33, 6, 25, 37, 6, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 3, 4, 35, 3, 41, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, 5, 37, 4, 11, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, 13, 34, 5, 34, Blocks.STONE.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 4, 35, 38, 4, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 34, 6, 21, 38, 6, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 4, 12, 40, 4, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 4, 25, 39, 4, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 5, 12, 39, 5, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 35, 5, 29, 38, 5, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 5, 6, 37, 5, 39, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 37, 6, 9, 37, 6, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 4, 6, 39, 4, 34, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 5, 7, 38, 5, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 38, 6, 10, 38, 6, 26, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 3, 5, 39, 3, 37, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 39, 5, 8, 39, 5, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 1, 5, 40, 1, 38, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 2, 6, 40, 2, 33, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 3, 7, 40, 3, 28, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 40, 4, 8, 40, 4, 24, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 0, 4, 41, 0, 40, Blocks.SANDSTONE.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 1, 7, 41, 1, 29, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 2, 9, 41, 2, 22, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 41, 3, 11, 41, 3, 14, Blocks.SAND.getDefaultState());
        structure.fillWithBlocks(world, start, 42, 0, 7, 42, 0, 33, Blocks.SANDSTONE.getDefaultState());

    }
    
}
